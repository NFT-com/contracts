{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x774c2204D9e50CD9d6A579D194c067360604933f",
      "txHash": "0xadffde0140d0a2697be9b4560b957d64a08a3477ba181db558cf125ee2b75b7a",
      "kind": "uups"
    },
    {
      "address": "0x8fB5a7894AB461a59ACdfab8918335768e411414",
      "txHash": "0x1ea3795fa70ce0c7866e471afc43861268895d6543a1fe637ee61989626c0688",
      "kind": "uups"
    },
    {
      "address": "0xfc99E6b4447a17EA0C6162854fcb572ddC8FbB37",
      "txHash": "0x304030637e4567a33b9d482949f4888eb5ff5672d2d8b6b8fb72de3fadf1c26e",
      "kind": "uups"
    },
    {
      "address": "0x98ca78e89Dd1aBE48A53dEe5799F24cC1A462F2D",
      "txHash": "0x885bcb6e60f4ca1aab5bcd4e3adf0db19f2b34e75a3c527a417885523b5aeb79",
      "kind": "uups"
    },
    {
      "address": "0x30f649D418AF7358f9c8CB036219fC7f1B646309",
      "txHash": "0x9c0367ae2ff9d8a4e002a2ee1d775af0811b00228abf3e4864c4430e658a59a4",
      "kind": "uups"
    },
    {
      "address": "0xA657C988e8aC39D3268D390eB7c522a535B10453",
      "txHash": "0x82773575135656fb87f8bd305687dd5eac6ca88d48d13f40abf1f4060789d525",
      "kind": "uups"
    },
    {
      "address": "0xfc03348d38a8F3CA7853779D8b50fba0Ff388B98",
      "txHash": "0xee993112de87a153a1be208bfda8a700850f569c39142fddf5c8f362b70e01e7",
      "kind": "uups"
    },
    {
      "address": "0x24851a6783fB586E49b1dC71FA40B8307802f2A5",
      "txHash": "0xf1c1abde251ef8d64fe1c43597af21eba452982c6af3ef8a2829f4d52a3e2e9e",
      "kind": "uups"
    },
    {
      "address": "0xc7Ce15B068f96D8079Af45A5bab225e628bF96e6",
      "txHash": "0xd726713dc7888426b57c6a27ffbd50bf03c77a2e8142311d11dec6602070bbc4",
      "kind": "uups"
    }
  ],
  "impls": {
    "69cc6a07c3368ff8fe2ecf0c592e8241266da99cf4b4f0a5ba5317db3c83be36": {
      "address": "0xC3A7cE08ADBFbfce8b79Bf8d0A6Df16265d1cE3a",
      "txHash": "0x5f34c0092f5c3acf38e90f5ca0011286394113813fb673a84d93a51da194c372",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "Vesting",
            "label": "nftToken",
            "type": "t_address",
            "src": "contracts/governance/vesting.sol:42"
          },
          {
            "contract": "Vesting",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/governance/vesting.sol:43"
          },
          {
            "contract": "Vesting",
            "label": "claimedAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:45"
          },
          {
            "contract": "Vesting",
            "label": "vestingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:46"
          },
          {
            "contract": "Vesting",
            "label": "vestingBegin",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:47"
          },
          {
            "contract": "Vesting",
            "label": "vestingCliff",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:48"
          },
          {
            "contract": "Vesting",
            "label": "vestingEnd",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:49"
          },
          {
            "contract": "Vesting",
            "label": "lastUpdate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:50"
          },
          {
            "contract": "Vesting",
            "label": "installment",
            "type": "t_mapping(t_address,t_enum(VestingInstallments)14058)",
            "src": "contracts/governance/vesting.sol:51"
          },
          {
            "contract": "Vesting",
            "label": "initializedVestor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/governance/vesting.sol:53"
          },
          {
            "contract": "Vesting",
            "label": "revokedVestor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/governance/vesting.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_enum(VestingInstallments)14058)": {
            "label": "mapping(address => enum Vesting.VestingInstallments)"
          },
          "t_enum(VestingInstallments)14058": {
            "label": "enum Vesting.VestingInstallments",
            "members": ["MONTHLY", "QUARTERLY"]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c8325b2f77964abbf4877b49505c073f0fec81a9eb95d32ebe32f07ba12a3a7b": {
      "address": "0xEb445c800DA2FC81b12391d59426d86F4BEBEa0a",
      "txHash": "0xf87b9d0c162045d608227b23d87e9c993d0d7e3388eebfb10b5f20233fb8ef5f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)13099_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)13108_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:676"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:38"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:39"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:41"
          },
          {
            "contract": "GenesisKey",
            "label": "initialEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:42"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:44"
          },
          {
            "contract": "GenesisKey",
            "label": "finalEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:45"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          },
          {
            "contract": "GenesisKey",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:50"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:51"
          },
          {
            "contract": "GenesisKey",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:52"
          },
          {
            "contract": "GenesisKey",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:53"
          },
          {
            "contract": "GenesisKey",
            "label": "lockupBoolean",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:54"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint64",
            "src": "contracts/genesisKey/GenesisKey.sol:55"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:57"
          },
          {
            "contract": "GenesisKey",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:58"
          },
          {
            "contract": "GenesisKey",
            "label": "_genesisKeyLockUp",
            "type": "t_mapping(t_uint256,t_struct(LockupInfo)14503_storage)",
            "src": "contracts/genesisKey/GenesisKey.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_struct(LockupInfo)14503_storage)": {
            "label": "mapping(uint256 => struct GenesisKey.LockupInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(LockupInfo)14503_storage": {
            "label": "struct GenesisKey.LockupInfo",
            "members": [
              {
                "label": "totalLockup",
                "type": "t_uint128"
              },
              {
                "label": "currentLockup",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)13099_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)13099_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(AddressData)13108_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)13108_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "6f73c4519c07ff16ad28e4f2b7dfdf8241dc9fe4822608d3de003094a38ee8f6": {
      "address": "0x22574f03886C45EEd9C2e7a52e045074c365681A",
      "txHash": "0x713b6e3d4319b70f057ca227f209a6815898d9b1229ab5e58546fd44b81f0c6a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:21"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:22"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "GK",
            "type": "t_contract(IGK)15896",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:23"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "ownedTokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IGK)15896": {
            "label": "contract IGK"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9eaf459c28d66582f25333696b15255151009833f086b7ff1bc1a81a186bbd57": {
      "address": "0x5Ae961219E4e2e26b4028CaaAfdEFa26A72acF2B",
      "txHash": "0xbddb3be2f4f61e3070a268f3cfaae09cafb4e578e122045845ceab1afab4d944",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)11601_storage)",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)11610_storage)",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:721"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/domain/NftProfile.sol:20"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenUsedURIs",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfile.sol:21"
          },
          {
            "contract": "NftProfile",
            "label": "_expiryTimeline",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfile.sol:22"
          },
          {
            "contract": "NftProfile",
            "label": "profileAuctionContract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:24"
          },
          {
            "contract": "NftProfile",
            "label": "protocolFee",
            "type": "t_uint96",
            "src": "contracts/domain/NftProfile.sol:25"
          },
          {
            "contract": "NftProfile",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:26"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)11601_storage)": {
            "label": "mapping(uint256 => struct ERC721AProfileUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)11601_storage": {
            "label": "struct ERC721AProfileUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(AddressData)11610_storage)": {
            "label": "mapping(address => struct ERC721AProfileUpgradeable.AddressData)"
          },
          "t_struct(AddressData)11610_storage": {
            "label": "struct ERC721AProfileUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "ea80a3b495039296fea893e5a7af45e2ea35607adc36acdbd0be949638a68c85": {
      "address": "0xBdF4538fb1a3863fA48E96A081911d04A21FbC49",
      "txHash": "0x84814110faef3c8a1386819278fdec9015605dd3f0e220e12d39b9908a550197",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuction",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:45"
          },
          {
            "contract": "ProfileAuction",
            "label": "yearlyFee",
            "type": "t_uint96",
            "src": "contracts/domain/ProfileAuction.sol:46"
          },
          {
            "contract": "ProfileAuction",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:48"
          },
          {
            "contract": "ProfileAuction",
            "label": "yearsToOwn",
            "type": "t_uint96",
            "src": "contracts/domain/ProfileAuction.sol:49"
          },
          {
            "contract": "ProfileAuction",
            "label": "usdc_",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:51"
          },
          {
            "contract": "ProfileAuction",
            "label": "publicMintBool",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:52"
          },
          {
            "contract": "ProfileAuction",
            "label": "genKeyWhitelistOnly",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:53"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:55"
          },
          {
            "contract": "ProfileAuction",
            "label": "contract2",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:56"
          },
          {
            "contract": "ProfileAuction",
            "label": "contract1",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:57"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:58"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:59"
          },
          {
            "contract": "ProfileAuction",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:60"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyClaimNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:62"
          },
          {
            "contract": "ProfileAuction",
            "label": "lengthPremium",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:63"
          },
          {
            "contract": "ProfileAuction",
            "label": "ownedProfileStake",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:64"
          },
          {
            "contract": "ProfileAuction",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/domain/ProfileAuction.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "739843854640493045f0d2dab444e4ebadbc90ad24f26b855fecfb0087fc5189": {
      "address": "0xE1402c37afad5299541C25f16742321A04c4d1c4",
      "txHash": "0x398c68d2622707c4c594a6273c85689907f54c0ca08537c774cbc0f64039a67d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)2210_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)2219_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:676"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:38"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:39"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:41"
          },
          {
            "contract": "GenesisKey",
            "label": "initialEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:42"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:44"
          },
          {
            "contract": "GenesisKey",
            "label": "finalEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:45"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          },
          {
            "contract": "GenesisKey",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:50"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:51"
          },
          {
            "contract": "GenesisKey",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:52"
          },
          {
            "contract": "GenesisKey",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:53"
          },
          {
            "contract": "GenesisKey",
            "label": "lockupBoolean",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:54"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint64",
            "src": "contracts/genesisKey/GenesisKey.sol:55"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:57"
          },
          {
            "contract": "GenesisKey",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:58"
          },
          {
            "contract": "GenesisKey",
            "label": "_genesisKeyLockUp",
            "type": "t_mapping(t_uint256,t_struct(LockupInfo)3614_storage)",
            "src": "contracts/genesisKey/GenesisKey.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_struct(LockupInfo)3614_storage)": {
            "label": "mapping(uint256 => struct GenesisKey.LockupInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(LockupInfo)3614_storage": {
            "label": "struct GenesisKey.LockupInfo",
            "members": [
              {
                "label": "totalLockup",
                "type": "t_uint128"
              },
              {
                "label": "currentLockup",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)2210_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)2210_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(AddressData)2219_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)2219_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "b6d79bf46b16b23aa21cb85adb492430e72e860f0083b18a9263d2544e042beb": {
      "address": "0x4dCCa3Ba0802804965bf48CdB68a2F7b19Db0816",
      "txHash": "0x525f9365767af8181e34538852ed9fc92cebe42e96e041c56dd019baa504e54f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)13099_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)13108_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:676"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:38"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:39"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:41"
          },
          {
            "contract": "GenesisKey",
            "label": "initialEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:42"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:44"
          },
          {
            "contract": "GenesisKey",
            "label": "finalEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:45"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          },
          {
            "contract": "GenesisKey",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:50"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:51"
          },
          {
            "contract": "GenesisKey",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:52"
          },
          {
            "contract": "GenesisKey",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:53"
          },
          {
            "contract": "GenesisKey",
            "label": "lockupBoolean",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:54"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint64",
            "src": "contracts/genesisKey/GenesisKey.sol:55"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:57"
          },
          {
            "contract": "GenesisKey",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:58"
          },
          {
            "contract": "GenesisKey",
            "label": "_genesisKeyLockUp",
            "type": "t_mapping(t_uint256,t_struct(LockupInfo)14503_storage)",
            "src": "contracts/genesisKey/GenesisKey.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_struct(LockupInfo)14503_storage)": {
            "label": "mapping(uint256 => struct GenesisKey.LockupInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(LockupInfo)14503_storage": {
            "label": "struct GenesisKey.LockupInfo",
            "members": [
              {
                "label": "totalLockup",
                "type": "t_uint128"
              },
              {
                "label": "currentLockup",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)13099_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)13099_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(AddressData)13108_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)13108_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "5f58d9363fbbb3a05609adb90e099900c850eb2145a13e4c8479bceebca440b9": {
      "address": "0xC26B78663F2c6900c3aA9EF3D3EE5bFb0d087934",
      "txHash": "0xb124c458c1af344a4f6cb9054ab8a2717739d32fce9378a298e3ea11cd528e62",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)2210_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)2219_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:676"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:38"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:39"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:41"
          },
          {
            "contract": "GenesisKey",
            "label": "initialEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:42"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:44"
          },
          {
            "contract": "GenesisKey",
            "label": "finalEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:45"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          },
          {
            "contract": "GenesisKey",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:50"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:51"
          },
          {
            "contract": "GenesisKey",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:52"
          },
          {
            "contract": "GenesisKey",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:53"
          },
          {
            "contract": "GenesisKey",
            "label": "lockupBoolean",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:54"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint64",
            "src": "contracts/genesisKey/GenesisKey.sol:55"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:57"
          },
          {
            "contract": "GenesisKey",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:58"
          },
          {
            "contract": "GenesisKey",
            "label": "_genesisKeyLockUp",
            "type": "t_mapping(t_uint256,t_struct(LockupInfo)3614_storage)",
            "src": "contracts/genesisKey/GenesisKey.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_struct(LockupInfo)3614_storage)": {
            "label": "mapping(uint256 => struct GenesisKey.LockupInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(LockupInfo)3614_storage": {
            "label": "struct GenesisKey.LockupInfo",
            "members": [
              {
                "label": "totalLockup",
                "type": "t_uint128"
              },
              {
                "label": "currentLockup",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)2210_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)2210_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(AddressData)2219_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)2219_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "cdc3d74cf9d289d135e91b2eb35bac3d5d87a3855d1901885ef3d4d135fe58ec": {
      "address": "0x49fD0E347e04CC27F255C97E849edd2749E8EFf6",
      "txHash": "0x34d08c3d893c28569dd749b2fd50777386bd94a4b5d74eddccd8f14fde3dc075",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)2210_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)2219_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:676"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:38"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:39"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:41"
          },
          {
            "contract": "GenesisKey",
            "label": "initialEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:42"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:44"
          },
          {
            "contract": "GenesisKey",
            "label": "finalEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:45"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          },
          {
            "contract": "GenesisKey",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:50"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:51"
          },
          {
            "contract": "GenesisKey",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:52"
          },
          {
            "contract": "GenesisKey",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:53"
          },
          {
            "contract": "GenesisKey",
            "label": "lockupBoolean",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:54"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint64",
            "src": "contracts/genesisKey/GenesisKey.sol:55"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:57"
          },
          {
            "contract": "GenesisKey",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:58"
          },
          {
            "contract": "GenesisKey",
            "label": "_genesisKeyLockUp",
            "type": "t_mapping(t_uint256,t_struct(LockupInfo)3614_storage)",
            "src": "contracts/genesisKey/GenesisKey.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_struct(LockupInfo)3614_storage)": {
            "label": "mapping(uint256 => struct GenesisKey.LockupInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(LockupInfo)3614_storage": {
            "label": "struct GenesisKey.LockupInfo",
            "members": [
              {
                "label": "totalLockup",
                "type": "t_uint128"
              },
              {
                "label": "currentLockup",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)2210_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)2210_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(AddressData)2219_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)2219_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "14db792391f9cd2c37762955925540085d9812b0927fa14a18e4845ceb408508": {
      "address": "0xD6956c84eA4E8F3c634c27ec11ebcAf7DFF7F335",
      "txHash": "0x7145e7f24244a6fcd32c59d160751184eed38e04a8489263aa79f93197b7f3d2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)13099_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)13108_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:721"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:38"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:39"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:41"
          },
          {
            "contract": "GenesisKey",
            "label": "initialEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:42"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:44"
          },
          {
            "contract": "GenesisKey",
            "label": "finalEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:45"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          },
          {
            "contract": "GenesisKey",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:50"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:51"
          },
          {
            "contract": "GenesisKey",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:52"
          },
          {
            "contract": "GenesisKey",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:53"
          },
          {
            "contract": "GenesisKey",
            "label": "lockupBoolean",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:54"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint64",
            "src": "contracts/genesisKey/GenesisKey.sol:55"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:57"
          },
          {
            "contract": "GenesisKey",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:58"
          },
          {
            "contract": "GenesisKey",
            "label": "_genesisKeyLockUp",
            "type": "t_mapping(t_uint256,t_struct(LockupInfo)14645_storage)",
            "src": "contracts/genesisKey/GenesisKey.sol:59"
          },
          {
            "contract": "GenesisKey",
            "label": "latestClaimTokenId",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:62"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_struct(LockupInfo)14645_storage)": {
            "label": "mapping(uint256 => struct GenesisKey.LockupInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(LockupInfo)14645_storage": {
            "label": "struct GenesisKey.LockupInfo",
            "members": [
              {
                "label": "totalLockup",
                "type": "t_uint128"
              },
              {
                "label": "currentLockup",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)13099_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)13099_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(AddressData)13108_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)13108_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "32922fd05d6f0662ab409a98d1b9bff00271a6603e5261a224b0bd227442c5f9": {
      "address": "0xDE5F08d80ce23e959cFfF6BeBBaF5998Fe9AA7A8",
      "txHash": "0x1d95972825d746a31e5a9121b2f0f94606a141a1639b97c40251ac7705c9fa89",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuction",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:45"
          },
          {
            "contract": "ProfileAuction",
            "label": "yearlyFee",
            "type": "t_uint96",
            "src": "contracts/domain/ProfileAuction.sol:46"
          },
          {
            "contract": "ProfileAuction",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:48"
          },
          {
            "contract": "ProfileAuction",
            "label": "yearsToOwn",
            "type": "t_uint96",
            "src": "contracts/domain/ProfileAuction.sol:49"
          },
          {
            "contract": "ProfileAuction",
            "label": "usdc_",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:51"
          },
          {
            "contract": "ProfileAuction",
            "label": "publicMintBool",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:52"
          },
          {
            "contract": "ProfileAuction",
            "label": "genKeyWhitelistOnly",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:53"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:55"
          },
          {
            "contract": "ProfileAuction",
            "label": "contract2",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:56"
          },
          {
            "contract": "ProfileAuction",
            "label": "contract1",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:57"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:58"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:59"
          },
          {
            "contract": "ProfileAuction",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:60"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyClaimNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:62"
          },
          {
            "contract": "ProfileAuction",
            "label": "lengthPremium",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:63"
          },
          {
            "contract": "ProfileAuction",
            "label": "ownedProfileStake",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:64"
          },
          {
            "contract": "ProfileAuction",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/domain/ProfileAuction.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "afef4bc1e073bbae54d259cedbfb0f6ddfb372f4bbefd8c0c64e95858f0d1435": {
      "address": "0x455BB64a7579507199fCC89f88A7f681A3310048",
      "txHash": "0xa2243f3c4f8847549f0f08d0f3c7f1328a614b6940206c98ca9b3c67609300cf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:21"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:22"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "GK",
            "type": "t_contract(IGK)15896",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:23"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "ownedTokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IGK)15896": {
            "label": "contract IGK"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1c1f5b1fbbda4a4d7db59223af61034592ed837e96547c9a8c4b19e5b3c9be5d": {
      "address": "0xf76Eaa507B252F498Ff70b4CAA659376ED3CC757",
      "txHash": "0x2ea1d259e8be790dbcee6f037b6c5335fe3b3fa81d1c46992a5b4f5bd36f0cfc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftResolver",
            "label": "nftProfile",
            "type": "t_contract(INftProfile)2853",
            "src": "contracts/domain/NftResolver.sol:15"
          },
          {
            "contract": "NftResolver",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftResolver.sol:16"
          },
          {
            "contract": "NftResolver",
            "label": "_nonce",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftResolver.sol:19"
          },
          {
            "contract": "NftResolver",
            "label": "_regexMap",
            "type": "t_mapping(t_enum(Blockchain)2888,t_contract(IRegex)2881)",
            "src": "contracts/domain/NftResolver.sol:20"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerAddrList",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(AddressTuple)2894_storage)dyn_storage))",
            "src": "contracts/domain/NftResolver.sol:22"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerCtx",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressTuple)2894_storage))",
            "src": "contracts/domain/NftResolver.sol:23"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerNonEvmMap",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_bool))",
            "src": "contracts/domain/NftResolver.sol:24"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerEvmMap",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_bytes_memory_ptr,t_bool)))",
            "src": "contracts/domain/NftResolver.sol:25"
          },
          {
            "contract": "NftResolver",
            "label": "_approvedEvmList",
            "type": "t_mapping(t_address,t_array(t_struct(RelatedProfiles)2899_storage)dyn_storage)",
            "src": "contracts/domain/NftResolver.sol:27"
          },
          {
            "contract": "NftResolver",
            "label": "_approvedMap",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "src": "contracts/domain/NftResolver.sol:28"
          }
        ],
        "types": {
          "t_contract(INftProfile)2853": {
            "label": "contract INftProfile"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_enum(Blockchain)2888,t_contract(IRegex)2881)": {
            "label": "mapping(enum Blockchain => contract IRegex)"
          },
          "t_enum(Blockchain)2888": {
            "label": "enum Blockchain",
            "members": ["ETHEREUM", "HEDERA", "POLYGON", "SOLANA", "TEZOS", "FLOW"]
          },
          "t_contract(IRegex)2881": {
            "label": "contract IRegex"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(AddressTuple)2894_storage)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressTuple[]))"
          },
          "t_mapping(t_uint256,t_array(t_struct(AddressTuple)2894_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct AddressTuple[])"
          },
          "t_array(t_struct(AddressTuple)2894_storage)dyn_storage": {
            "label": "struct AddressTuple[]"
          },
          "t_struct(AddressTuple)2894_storage": {
            "label": "struct AddressTuple",
            "members": [
              {
                "label": "cid",
                "type": "t_enum(Blockchain)2888"
              },
              {
                "label": "chainAddr",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressTuple)2894_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressTuple))"
          },
          "t_mapping(t_uint256,t_struct(AddressTuple)2894_storage)": {
            "label": "mapping(uint256 => struct AddressTuple)"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes => bool))"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_bytes_memory_ptr,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(bytes => bool)))"
          },
          "t_mapping(t_address,t_mapping(t_bytes_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(bytes => bool))"
          },
          "t_mapping(t_address,t_array(t_struct(RelatedProfiles)2899_storage)dyn_storage)": {
            "label": "mapping(address => struct RelatedProfiles[])"
          },
          "t_array(t_struct(RelatedProfiles)2899_storage)dyn_storage": {
            "label": "struct RelatedProfiles[]"
          },
          "t_struct(RelatedProfiles)2899_storage": {
            "label": "struct RelatedProfiles",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "profileUrl",
                "type": "t_string_storage"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "37c522b1e03957feb9154ed8e105419d6b96f7bb2a711ba1b679f657b600e6da": {
      "address": "0xdD259b946074847752E6c2b6c9169a425D9581d6",
      "txHash": "0xab9ddecd5a6d55e339c6b7ab4011f4d096c15c41790bbab145af5c9f1ac3ce87",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftResolver",
            "label": "nftProfile",
            "type": "t_contract(INftProfile)21575",
            "src": "contracts/domain/NftResolver.sol:15"
          },
          {
            "contract": "NftResolver",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftResolver.sol:16"
          },
          {
            "contract": "NftResolver",
            "label": "_nonce",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftResolver.sol:19"
          },
          {
            "contract": "NftResolver",
            "label": "_regexMap",
            "type": "t_mapping(t_enum(Blockchain)21620,t_contract(IRegex)21613)",
            "src": "contracts/domain/NftResolver.sol:20"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerAddrList",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(AddressTuple)21626_storage)dyn_storage))",
            "src": "contracts/domain/NftResolver.sol:22"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerCtx",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressTuple)21626_storage))",
            "src": "contracts/domain/NftResolver.sol:23"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerNonEvmMap",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_bool))",
            "src": "contracts/domain/NftResolver.sol:24"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerEvmMap",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_bytes_memory_ptr,t_bool)))",
            "src": "contracts/domain/NftResolver.sol:25"
          },
          {
            "contract": "NftResolver",
            "label": "_approvedEvmList",
            "type": "t_mapping(t_address,t_array(t_struct(RelatedProfiles)21631_storage)dyn_storage)",
            "src": "contracts/domain/NftResolver.sol:27"
          },
          {
            "contract": "NftResolver",
            "label": "_approvedMap",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "src": "contracts/domain/NftResolver.sol:28"
          }
        ],
        "types": {
          "t_contract(INftProfile)21575": {
            "label": "contract INftProfile"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_enum(Blockchain)21620,t_contract(IRegex)21613)": {
            "label": "mapping(enum Blockchain => contract IRegex)"
          },
          "t_enum(Blockchain)21620": {
            "label": "enum Blockchain",
            "members": ["ETHEREUM", "HEDERA", "POLYGON", "SOLANA", "TEZOS", "FLOW"]
          },
          "t_contract(IRegex)21613": {
            "label": "contract IRegex"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(AddressTuple)21626_storage)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressTuple[]))"
          },
          "t_mapping(t_uint256,t_array(t_struct(AddressTuple)21626_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct AddressTuple[])"
          },
          "t_array(t_struct(AddressTuple)21626_storage)dyn_storage": {
            "label": "struct AddressTuple[]"
          },
          "t_struct(AddressTuple)21626_storage": {
            "label": "struct AddressTuple",
            "members": [
              {
                "label": "cid",
                "type": "t_enum(Blockchain)21620"
              },
              {
                "label": "chainAddr",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressTuple)21626_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressTuple))"
          },
          "t_mapping(t_uint256,t_struct(AddressTuple)21626_storage)": {
            "label": "mapping(uint256 => struct AddressTuple)"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes => bool))"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_bytes_memory_ptr,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(bytes => bool)))"
          },
          "t_mapping(t_address,t_mapping(t_bytes_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(bytes => bool))"
          },
          "t_mapping(t_address,t_array(t_struct(RelatedProfiles)21631_storage)dyn_storage)": {
            "label": "mapping(address => struct RelatedProfiles[])"
          },
          "t_array(t_struct(RelatedProfiles)21631_storage)dyn_storage": {
            "label": "struct RelatedProfiles[]"
          },
          "t_struct(RelatedProfiles)21631_storage": {
            "label": "struct RelatedProfiles",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "profileUrl",
                "type": "t_string_storage"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "d4f8def4e0d5ae910e35eb664eec8cb7275b57050edd93df16ffbcb6e2feb7e8": {
      "address": "0x10b7873e3Bec36b84d4D5a05b32faA36D2639189",
      "txHash": "0xf5c973e8ae75387a3c5e386102ef0b2fb4fba1c7dc5ffa2fe1a797948c079b33",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "MarketplaceRegistry",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/aggregator/MarketplaceRegistry.sol:8"
          },
          {
            "contract": "MarketplaceRegistry",
            "label": "marketplaces",
            "type": "t_array(t_struct(Marketplace)8873_storage)dyn_storage",
            "src": "contracts/aggregator/MarketplaceRegistry.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Marketplace)8873_storage)dyn_storage": {
            "label": "struct MarketplaceRegistry.Marketplace[]"
          },
          "t_struct(Marketplace)8873_storage": {
            "label": "struct MarketplaceRegistry.Marketplace",
            "members": [
              {
                "label": "proxy",
                "type": "t_address"
              },
              {
                "label": "isLib",
                "type": "t_bool"
              },
              {
                "label": "isActive",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "2ccf30ff3e2d10a71c8fa5423733b60bfba892bcec1cfd445698855ce2e6d73c": {
      "address": "0xd19700493D4488e0731039e96186D4194A73A572",
      "txHash": "0x949a1e0641300a215431f25b14d2730148d2a1537cbe0b6d10e6ea0d84445694",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "SpecialTransferHelper",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/aggregator/SpecialTransferHelper.sol:103"
          },
          {
            "contract": "NftAggregator",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/aggregator/NftAggregator.sol:27"
          },
          {
            "contract": "NftAggregator",
            "label": "marketplaceRegistry",
            "type": "t_contract(MarketplaceRegistry)9054",
            "src": "contracts/aggregator/NftAggregator.sol:28"
          },
          {
            "contract": "NftAggregator",
            "label": "baseFees",
            "type": "t_uint256",
            "src": "contracts/aggregator/NftAggregator.sol:29"
          },
          {
            "contract": "NftAggregator",
            "label": "openForTrades",
            "type": "t_bool",
            "src": "contracts/aggregator/NftAggregator.sol:30"
          },
          {
            "contract": "NftAggregator",
            "label": "openForFreeTrades",
            "type": "t_bool",
            "src": "contracts/aggregator/NftAggregator.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(MarketplaceRegistry)9054": {
            "label": "contract MarketplaceRegistry"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
