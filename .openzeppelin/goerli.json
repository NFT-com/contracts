{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x0638A014c45BE910d4611bAfaBcC8219A075788B",
      "txHash": "0x65322dc6ba8159ca22e52770e0cf84d6277a0c62cc6267bd9408c03fa330e8b2",
      "kind": "uups"
    },
    {
      "address": "0xe0060010c2c81A817f4c52A9263d4Ce5c5B66D55",
      "txHash": "0x48fe9df819064f124042f086fe46e034c36177acdf51b0c3d3238a83e01aa82e",
      "kind": "uups"
    },
    {
      "address": "0x7B7d88d7718294E27575aA7F4d1e2F25fF51b81c",
      "txHash": "0x8f234eaaeb2a1d9ea52c3af2766058070749d219a92b741d68aac89b82ccee43",
      "kind": "uups"
    },
    {
      "address": "0x7342Ac748EB6AdBA2D3177504AA69946C9Aa0230",
      "txHash": "0x044b5c0e93aa5a987c45393ee3b90d5fadd34cb7068b09cba9e206283f4c0808",
      "kind": "uups"
    },
    {
      "address": "0xEC5115e8bDC691B430288690Bdb5226470421993",
      "txHash": "0x9e5bf93bc022038602c7ddba8ce8a264e2604cd4a37ac3d319ed46e1bfb1a158",
      "kind": "uups"
    },
    {
      "address": "0x9Ef7A34dcCc32065802B1358129a226B228daB4E",
      "txHash": "0xa195219b419bd7fc8912ff11da36e9792f81e5556652ca6418306df40a023e53",
      "kind": "uups"
    },
    {
      "address": "0x40023d97Ca437B966C8f669C91a9740C639E21C3",
      "txHash": "0xfb8ce9258d25afd77a1d5c726d6ddce4f4e8ab805465d4d6c7b839a9e225c7ba",
      "kind": "uups"
    },
    {
      "address": "0x45d296A1042248F48f484c6f2be01006D26fCBF0",
      "txHash": "0xdb276b14a7edb4b399b29ad5998296726fcd76f6d8204f14ca8fb6ec54ff347e",
      "kind": "uups"
    },
    {
      "address": "0x3a3539B6727E74fa1c5D4d39B433F0fAB5BC4F4a",
      "txHash": "0xe443e64a7afb9314bd9439ef6c84dd0015ed832d08899340f26704f3ab00601d",
      "kind": "uups"
    },
    {
      "address": "0x2DC33219099B6A84dDfD30b840D4D45465f0b0cc",
      "txHash": "0x221e87b571b6902ac348180857b9aeae869dfb93a7fc466ab2f841a95f758f92",
      "kind": "uups"
    },
    {
      "address": "0xC613fa9f7b76cA880AA8be8973C781f3821F3306",
      "txHash": "0x22873c5632d09ff4019a4d9fd1f0e4a6a5a4942a3f7edca78cc725060d96b910",
      "kind": "uups"
    },
    {
      "address": "0xBcFc9864043F65e94EE17E2ca0e5AC11b205a7cE",
      "txHash": "0x7e2c621ab436a50039fa3299906a43ab81891dd9af0e72e01cd0ffc244a3eff0",
      "kind": "uups"
    },
    {
      "address": "0xb1D8A87CF074340d783D1D7c0Aa5284E1E60dCC0",
      "txHash": "0x6caf49031b188bb919c22512a82204bc228e881200eb00549f339a2592ac80b2",
      "kind": "uups"
    },
    {
      "address": "0x0B01147028d4aa61c25DE8736b7fF6c67c6Ca081",
      "txHash": "0x44d48ea046fe1bc5f4866f9f6e8604cfa0c7f3f19f6caee9a53bf643bc7ae169",
      "kind": "uups"
    },
    {
      "address": "0xc35E66CE53dC05e73a0C8f5d1d75193e546E8dE1",
      "txHash": "0xa1a8ee4e926c318ba0769bc838a47878ca79af9d65ee379de28cd7d2f28a1120",
      "kind": "uups"
    },
    {
      "address": "0xb1D65B1a259bEA89a5A790db9a4Be5B2FFF97319",
      "txHash": "0xc74883f19fae5e139e57acfe6a252bef7ee50c55d847bd0320a2265f486b0568",
      "kind": "uups"
    },
    {
      "address": "0xCA9eFc650Dac9fBbB894288365343ecb97AC40dd",
      "txHash": "0x2f32993f37820f9e9904001b27c96cae338cad617900037db6d8930f3bc43252",
      "kind": "uups"
    },
    {
      "address": "0x7eC2fe955CFa0A9A5E6920Efc569cFCcB1a3B318",
      "txHash": "0x2eacc2d8cde09dc818dcd85b9b818ae854429b3565ee869c54f9c5b6e324b02f",
      "kind": "uups"
    },
    {
      "address": "0x165699Cf79Aaf3D15746c16fb63ef7dDCcb8dF10",
      "txHash": "0xebe965d67516ce6248de78b07a8ad0b66121a8f03a12481234f96bc4222e98d9",
      "kind": "uups"
    },
    {
      "address": "0xf1E73519cd28e06f35a1472aaA0B9d79E732b5F5",
      "txHash": "0xa46d2aecc7bf40619008313534cd37bb47c90733a938a91d5c790aa8ce721843",
      "kind": "uups"
    },
    {
      "address": "0x87857321C0AdcD900E3c0A4B88a7090A0Ad3a2D7",
      "txHash": "0x54ee7aa269b8777547204733c75fba53f70b05f1ce90f5b52dac7c209b6e8200",
      "kind": "uups"
    },
    {
      "address": "0x8267c46F4beEd4C1EaaD6377061997d369475Ee2",
      "txHash": "0xd013db869257cf3a3faffd03935cf1c4121915b5cc134886a96d685ba9a54dbb",
      "kind": "uups"
    },
    {
      "address": "0xB222eA3F44FEf39b6a9AA44f756702Df6239dB31",
      "txHash": "0x9404e73192638fd068ca1a8582c73cec190662b7b257a75d9490fa56dcc7abe1",
      "kind": "uups"
    },
    {
      "address": "0x82F764E0986337e84749beD7b5d90ebA30a1B691",
      "txHash": "0x7eb487de89da8517b37ca917cbce306c2162ba3ccb96d4a57929324332063942",
      "kind": "uups"
    },
    {
      "address": "0xb8804bF8065CF0a79e537511005FB2c09C5bd49b",
      "txHash": "0x71002c7a6bab3be782b5963f9cad56c97d8672cd28c957dcafc2dc3428b3eb39",
      "kind": "uups"
    },
    {
      "address": "0x22dC25d4eE682E5c2f515191427D2FbC85ed450a",
      "txHash": "0xd2f97f72346b764537f8a8ed512423920837a782cc3a5be902b5fe006a88c3fe",
      "kind": "uups"
    },
    {
      "address": "0x554CC509C75D8627090421A7dc0E1FfA6DCBB1Eb",
      "txHash": "0x0c8757193da0001e7eb2accb9772ae40d2dfa05d281b28616e60093bd0c97fb8",
      "kind": "uups"
    },
    {
      "address": "0xcB1a473F95066E4e909AA66E654eDAf64Cb46F01",
      "txHash": "0x77970698be91499b16e1bd62e0f69f38d1e57e92df3af6002a654ae9d6efd070",
      "kind": "uups"
    },
    {
      "address": "0x5c1614A3299B65225550eBdCB7615c216B8dAd9d",
      "txHash": "0x45eaab4fd48b7e318142a93f66595697626021bfc2e8ff6fc77566cca8350183",
      "kind": "uups"
    },
    {
      "address": "0xA37306d98c0d441481A6FfAcF95418d1e628Fc33",
      "txHash": "0xb04274237b9f1403301f9eabce54e8eece93038850f3d6cdfa342d8b403bdce7",
      "kind": "uups"
    },
    {
      "address": "0xF106da48a712a28F0780b76186416755c1214553",
      "txHash": "0x554fd267024c7ad48439e4de546c8ba7ba2e588f0da0aaca70c64113005ea08d",
      "kind": "uups"
    },
    {
      "address": "0x55BbE37dAa3b72cBE75203CFF032F2f34B151e43",
      "txHash": "0xf3b603db102a70d7c62833ce0f32d1a58274a304fabb4a1861a018ae56690911",
      "kind": "uups"
    },
    {
      "address": "0xA35E86ee7fd4311B6E756aE272416508111eeC0F",
      "txHash": "0x9ab490628d0d38c98f349d7edb1f4bbb0b2d670fc6478ae5921c9dd252f5d6cd",
      "kind": "uups"
    }
  ],
  "impls": {
    "69cc6a07c3368ff8fe2ecf0c592e8241266da99cf4b4f0a5ba5317db3c83be36": {
      "address": "0x2Ddbe998e6868Bc929FDeD9B7442F10D32D520fa",
      "txHash": "0x16aa2e954bfdf7b81ed7f404c81faf9a82ee93ac285e99ec2a04bb77aa58cff9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "Vesting",
            "label": "nftToken",
            "type": "t_address",
            "src": "contracts/governance/vesting.sol:42"
          },
          {
            "contract": "Vesting",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/governance/vesting.sol:43"
          },
          {
            "contract": "Vesting",
            "label": "claimedAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:45"
          },
          {
            "contract": "Vesting",
            "label": "vestingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:46"
          },
          {
            "contract": "Vesting",
            "label": "vestingBegin",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:47"
          },
          {
            "contract": "Vesting",
            "label": "vestingCliff",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:48"
          },
          {
            "contract": "Vesting",
            "label": "vestingEnd",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:49"
          },
          {
            "contract": "Vesting",
            "label": "lastUpdate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:50"
          },
          {
            "contract": "Vesting",
            "label": "installment",
            "type": "t_mapping(t_address,t_enum(VestingInstallments)18146)",
            "src": "contracts/governance/vesting.sol:51"
          },
          {
            "contract": "Vesting",
            "label": "initializedVestor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/governance/vesting.sol:53"
          },
          {
            "contract": "Vesting",
            "label": "revokedVestor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/governance/vesting.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_enum(VestingInstallments)18146)": {
            "label": "mapping(address => enum Vesting.VestingInstallments)"
          },
          "t_enum(VestingInstallments)18146": {
            "label": "enum Vesting.VestingInstallments",
            "members": [
              "MONTHLY",
              "QUARTERLY"
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4d2aae6bfc4a2e96aebca6f48f5c063c14c5c0681bf6e06fe1607241f55f4e41": {
      "address": "0xf4D214C53762edFaB8a3744C9878466D9b1f1648",
      "txHash": "0xe689ab10aace1d2480c8d9b9eb4aa7f4f1e13b9fc834098c0c4955f70eb66944",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)15725_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)15734_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:721"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/archive/GenesisKeyOld.sol:38"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint96",
            "src": "contracts/archive/GenesisKeyOld.sol:39"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/archive/GenesisKeyOld.sol:41"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "initialEthPrice",
            "type": "t_uint96",
            "src": "contracts/archive/GenesisKeyOld.sol:42"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/archive/GenesisKeyOld.sol:44"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "finalEthPrice",
            "type": "t_uint96",
            "src": "contracts/archive/GenesisKeyOld.sol:45"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/archive/GenesisKeyOld.sol:47"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "publicSaleStartSecond",
            "type": "t_uint96",
            "src": "contracts/archive/GenesisKeyOld.sol:48"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/archive/GenesisKeyOld.sol:50"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/archive/GenesisKeyOld.sol:51"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/archive/GenesisKeyOld.sol:52"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/archive/GenesisKeyOld.sol:53"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "lockupBoolean",
            "type": "t_bool",
            "src": "contracts/archive/GenesisKeyOld.sol:54"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint64",
            "src": "contracts/archive/GenesisKeyOld.sol:55"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/archive/GenesisKeyOld.sol:57"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/archive/GenesisKeyOld.sol:58"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "_genesisKeyLockUp",
            "type": "t_mapping(t_uint256,t_struct(LockupInfo)9479_storage)",
            "src": "contracts/archive/GenesisKeyOld.sol:59"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "latestClaimTokenId",
            "type": "t_uint256",
            "src": "contracts/archive/GenesisKeyOld.sol:62"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_struct(LockupInfo)9479_storage)": {
            "label": "mapping(uint256 => struct GenesisKeyOld.LockupInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(LockupInfo)9479_storage": {
            "label": "struct GenesisKeyOld.LockupInfo",
            "members": [
              {
                "label": "totalLockup",
                "type": "t_uint128"
              },
              {
                "label": "currentLockup",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)15725_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)15725_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(AddressData)15734_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)15734_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "afef4bc1e073bbae54d259cedbfb0f6ddfb372f4bbefd8c0c64e95858f0d1435": {
      "address": "0x4a76adbfF8aA29e0B6E051660119768e0f870557",
      "txHash": "0x286fc7b5e919434df8428a7278ba6ecdb1cc37c77d695bd22cb7f6268b21901e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:21"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:22"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "GK",
            "type": "t_contract(IGK)17791",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:23"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "ownedTokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IGK)17791": {
            "label": "contract IGK"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "eed850908ad56016eb9a84bb1231922c8b2b7d72d6fb128cdc1e5cbb54d5f8be": {
      "address": "0x073272c91A741E453aE47c10Be2F7ab5131B0706",
      "txHash": "0xb9db97e383fdf3eec293b2a584ea00574d699c8b94d7512083a6f8a83ae77b45",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)13971_storage)",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)13980_storage)",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:721"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/domain/NftProfile.sol:20"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenUsedURIs",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfile.sol:21"
          },
          {
            "contract": "NftProfile",
            "label": "_expiryTimeline",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfile.sol:22"
          },
          {
            "contract": "NftProfile",
            "label": "profileAuctionContract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:24"
          },
          {
            "contract": "NftProfile",
            "label": "protocolFee",
            "type": "t_uint96",
            "src": "contracts/domain/NftProfile.sol:25"
          },
          {
            "contract": "NftProfile",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:26"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)13971_storage)": {
            "label": "mapping(uint256 => struct ERC721AProfileUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)13971_storage": {
            "label": "struct ERC721AProfileUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(AddressData)13980_storage)": {
            "label": "mapping(address => struct ERC721AProfileUpgradeable.AddressData)"
          },
          "t_struct(AddressData)13980_storage": {
            "label": "struct ERC721AProfileUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "dd8bdd1953a72041f66ddb7ae2e4e13863d219166d208cd0780ed5596362ab27": {
      "address": "0xe91C327fE65e3A8826dC4DAAe5E84cA4c85b455B",
      "txHash": "0xe7707dae2040e912e5495baaaae9a98f06ab2f72dffdd72071dbeaf1b8cf05c2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuction",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:45"
          },
          {
            "contract": "ProfileAuction",
            "label": "yearlyFee",
            "type": "t_uint96",
            "src": "contracts/domain/ProfileAuction.sol:46"
          },
          {
            "contract": "ProfileAuction",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:48"
          },
          {
            "contract": "ProfileAuction",
            "label": "yearsToOwn",
            "type": "t_uint96",
            "src": "contracts/domain/ProfileAuction.sol:49"
          },
          {
            "contract": "ProfileAuction",
            "label": "usdc_",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:51"
          },
          {
            "contract": "ProfileAuction",
            "label": "publicMintBool",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:52"
          },
          {
            "contract": "ProfileAuction",
            "label": "genKeyWhitelistOnly",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:53"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:55"
          },
          {
            "contract": "ProfileAuction",
            "label": "contract2",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:56"
          },
          {
            "contract": "ProfileAuction",
            "label": "contract1",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:57"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:58"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:59"
          },
          {
            "contract": "ProfileAuction",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:60"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyClaimNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:62"
          },
          {
            "contract": "ProfileAuction",
            "label": "lengthPremium",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:63"
          },
          {
            "contract": "ProfileAuction",
            "label": "ownedProfileStake",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:64"
          },
          {
            "contract": "ProfileAuction",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/domain/ProfileAuction.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "14848aea8ce9908ccce3fa00ca8c373106481be536ed420851da93a6d6c1b88f": {
      "address": "0x3B95F6236033d39C173E80a3E9b89936Fd0FaFbA",
      "txHash": "0xe8d820067ad256338cdacda4685f57d664cb1bc41ebc178722e00facc97c956f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftResolver",
            "label": "nftProfile",
            "type": "t_contract(INftProfile)19385",
            "src": "contracts/domain/NftResolver.sol:15"
          },
          {
            "contract": "NftResolver",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftResolver.sol:16"
          },
          {
            "contract": "NftResolver",
            "label": "_nonce",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftResolver.sol:19"
          },
          {
            "contract": "NftResolver",
            "label": "_regexMap",
            "type": "t_mapping(t_enum(Blockchain)19428,t_contract(IRegex)19421)",
            "src": "contracts/domain/NftResolver.sol:20"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerAddrList",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(AddressTuple)19434_storage)dyn_storage))",
            "src": "contracts/domain/NftResolver.sol:22"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerCtx",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressTuple)19434_storage))",
            "src": "contracts/domain/NftResolver.sol:23"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerNonEvmMap",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_bool))",
            "src": "contracts/domain/NftResolver.sol:24"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerEvmMap",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/domain/NftResolver.sol:25"
          },
          {
            "contract": "NftResolver",
            "label": "_approvedEvmList",
            "type": "t_mapping(t_address,t_array(t_struct(RelatedProfiles)19439_storage)dyn_storage)",
            "src": "contracts/domain/NftResolver.sol:27"
          },
          {
            "contract": "NftResolver",
            "label": "_approvedMap",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "src": "contracts/domain/NftResolver.sol:28"
          }
        ],
        "types": {
          "t_contract(INftProfile)19385": {
            "label": "contract INftProfile"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_enum(Blockchain)19428,t_contract(IRegex)19421)": {
            "label": "mapping(enum Blockchain => contract IRegex)"
          },
          "t_enum(Blockchain)19428": {
            "label": "enum Blockchain",
            "members": [
              "ETHEREUM",
              "HEDERA",
              "POLYGON",
              "SOLANA",
              "TEZOS",
              "FLOW"
            ]
          },
          "t_contract(IRegex)19421": {
            "label": "contract IRegex"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(AddressTuple)19434_storage)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressTuple[]))"
          },
          "t_mapping(t_uint256,t_array(t_struct(AddressTuple)19434_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct AddressTuple[])"
          },
          "t_array(t_struct(AddressTuple)19434_storage)dyn_storage": {
            "label": "struct AddressTuple[]"
          },
          "t_struct(AddressTuple)19434_storage": {
            "label": "struct AddressTuple",
            "members": [
              {
                "label": "cid",
                "type": "t_enum(Blockchain)19428"
              },
              {
                "label": "chainAddr",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressTuple)19434_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressTuple))"
          },
          "t_mapping(t_uint256,t_struct(AddressTuple)19434_storage)": {
            "label": "mapping(uint256 => struct AddressTuple)"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes => bool))"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(RelatedProfiles)19439_storage)dyn_storage)": {
            "label": "mapping(address => struct RelatedProfiles[])"
          },
          "t_array(t_struct(RelatedProfiles)19439_storage)dyn_storage": {
            "label": "struct RelatedProfiles[]"
          },
          "t_struct(RelatedProfiles)19439_storage": {
            "label": "struct RelatedProfiles",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "profileUrl",
                "type": "t_string_storage"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "dafb07b82efdb322077fcf381c62860b832215918ce2356babdb4ae425262914": {
      "address": "0x60D0070b319c1Fe1D08EecD9C0c4b4D3909c17c6",
      "txHash": "0x96c9dff7037b225267ae326a647eb1c115da78ec7ed504d1afe0413bbabe41b6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuction",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:47"
          },
          {
            "contract": "ProfileAuction",
            "label": "yearlyFee",
            "type": "t_uint96",
            "src": "contracts/domain/ProfileAuction.sol:48"
          },
          {
            "contract": "ProfileAuction",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:50"
          },
          {
            "contract": "ProfileAuction",
            "label": "yearsToOwn",
            "type": "t_uint96",
            "src": "contracts/domain/ProfileAuction.sol:51"
          },
          {
            "contract": "ProfileAuction",
            "label": "usdc_",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:53"
          },
          {
            "contract": "ProfileAuction",
            "label": "publicMintBool",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:54"
          },
          {
            "contract": "ProfileAuction",
            "label": "genKeyWhitelistOnly",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:55"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:57"
          },
          {
            "contract": "ProfileAuction",
            "label": "contract2",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:58"
          },
          {
            "contract": "ProfileAuction",
            "label": "contract1",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:59"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:60"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:61"
          },
          {
            "contract": "ProfileAuction",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:62"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyClaimNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:64"
          },
          {
            "contract": "ProfileAuction",
            "label": "lengthPremium",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:65"
          },
          {
            "contract": "ProfileAuction",
            "label": "ownedProfileStake",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:66"
          },
          {
            "contract": "ProfileAuction",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/domain/ProfileAuction.sol:67"
          },
          {
            "contract": "ProfileAuction",
            "label": "publicMinted",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:68"
          },
          {
            "contract": "ProfileAuction",
            "label": "emptySlot",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:70"
          },
          {
            "contract": "ProfileAuction",
            "label": "maxProfilePerAddress",
            "type": "t_uint96",
            "src": "contracts/domain/ProfileAuction.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a3fc13656a568eb1d067ff30b6e5162d31f9b62e22e9e8724ee7c6f6775c6de5": {
      "address": "0x67f731097831BA45561f230065C1B1F36004d78B",
      "txHash": "0xb49f76de7a8e06bb7663122113ae6b5deeefcae4a3b0fcea1d7dc707c0b3c3a0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)15702_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)15711_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:721"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/archive/GenesisKeyOld.sol:38"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint96",
            "src": "contracts/archive/GenesisKeyOld.sol:39"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/archive/GenesisKeyOld.sol:41"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "initialEthPrice",
            "type": "t_uint96",
            "src": "contracts/archive/GenesisKeyOld.sol:42"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/archive/GenesisKeyOld.sol:44"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "finalEthPrice",
            "type": "t_uint96",
            "src": "contracts/archive/GenesisKeyOld.sol:45"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/archive/GenesisKeyOld.sol:47"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "publicSaleStartSecond",
            "type": "t_uint96",
            "src": "contracts/archive/GenesisKeyOld.sol:48"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/archive/GenesisKeyOld.sol:50"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/archive/GenesisKeyOld.sol:51"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/archive/GenesisKeyOld.sol:52"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/archive/GenesisKeyOld.sol:53"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "lockupBoolean",
            "type": "t_bool",
            "src": "contracts/archive/GenesisKeyOld.sol:54"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint64",
            "src": "contracts/archive/GenesisKeyOld.sol:55"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/archive/GenesisKeyOld.sol:57"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/archive/GenesisKeyOld.sol:58"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "_genesisKeyLockUp",
            "type": "t_mapping(t_uint256,t_struct(LockupInfo)9479_storage)",
            "src": "contracts/archive/GenesisKeyOld.sol:59"
          },
          {
            "contract": "GenesisKeyOld",
            "label": "latestClaimTokenId",
            "type": "t_uint256",
            "src": "contracts/archive/GenesisKeyOld.sol:62"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_struct(LockupInfo)9479_storage)": {
            "label": "mapping(uint256 => struct GenesisKeyOld.LockupInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(LockupInfo)9479_storage": {
            "label": "struct GenesisKeyOld.LockupInfo",
            "members": [
              {
                "label": "totalLockup",
                "type": "t_uint128"
              },
              {
                "label": "currentLockup",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)15702_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)15702_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(AddressData)15711_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)15711_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "5514e018c21ba27debad9f91d2f8284b824f156af173901e391c1c0d15a42c3b": {
      "address": "0x0E2580756b0313324AF844346b504102a10C0dBB",
      "txHash": "0x8f3fc92ebcdd2994e64c1e22537110d503580476ebc239cfb71a8982007e656d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftResolver",
            "label": "nftProfile",
            "type": "t_contract(INftProfile)20080",
            "src": "contracts/domain/NftResolver.sol:15"
          },
          {
            "contract": "NftResolver",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftResolver.sol:16"
          },
          {
            "contract": "NftResolver",
            "label": "_nonce",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftResolver.sol:19"
          },
          {
            "contract": "NftResolver",
            "label": "_regexMap",
            "type": "t_mapping(t_enum(Blockchain)20125,t_contract(IRegex)20118)",
            "src": "contracts/domain/NftResolver.sol:20"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerAddrList",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(AddressTuple)20131_storage)dyn_storage))",
            "src": "contracts/domain/NftResolver.sol:22"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerCtx",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressTuple)20131_storage))",
            "src": "contracts/domain/NftResolver.sol:23"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerNonEvmMap",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_bool))",
            "src": "contracts/domain/NftResolver.sol:24"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerEvmMap",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/domain/NftResolver.sol:25"
          },
          {
            "contract": "NftResolver",
            "label": "_approvedEvmList",
            "type": "t_mapping(t_address,t_array(t_struct(RelatedProfiles)20136_storage)dyn_storage)",
            "src": "contracts/domain/NftResolver.sol:27"
          },
          {
            "contract": "NftResolver",
            "label": "_approvedMap",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "src": "contracts/domain/NftResolver.sol:28"
          }
        ],
        "types": {
          "t_contract(INftProfile)20080": {
            "label": "contract INftProfile"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_enum(Blockchain)20125,t_contract(IRegex)20118)": {
            "label": "mapping(enum Blockchain => contract IRegex)"
          },
          "t_enum(Blockchain)20125": {
            "label": "enum Blockchain",
            "members": [
              "ETHEREUM",
              "HEDERA",
              "POLYGON",
              "SOLANA",
              "TEZOS",
              "FLOW"
            ]
          },
          "t_contract(IRegex)20118": {
            "label": "contract IRegex"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(AddressTuple)20131_storage)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressTuple[]))"
          },
          "t_mapping(t_uint256,t_array(t_struct(AddressTuple)20131_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct AddressTuple[])"
          },
          "t_array(t_struct(AddressTuple)20131_storage)dyn_storage": {
            "label": "struct AddressTuple[]"
          },
          "t_struct(AddressTuple)20131_storage": {
            "label": "struct AddressTuple",
            "members": [
              {
                "label": "cid",
                "type": "t_enum(Blockchain)20125"
              },
              {
                "label": "chainAddr",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressTuple)20131_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressTuple))"
          },
          "t_mapping(t_uint256,t_struct(AddressTuple)20131_storage)": {
            "label": "mapping(uint256 => struct AddressTuple)"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes => bool))"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(RelatedProfiles)20136_storage)dyn_storage)": {
            "label": "mapping(address => struct RelatedProfiles[])"
          },
          "t_array(t_struct(RelatedProfiles)20136_storage)dyn_storage": {
            "label": "struct RelatedProfiles[]"
          },
          "t_struct(RelatedProfiles)20136_storage": {
            "label": "struct RelatedProfiles",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "profileUrl",
                "type": "t_string_storage"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "5a85303c0e38ffac2f10fe5a83ffe12bb666a47c5cbbde123ba13a370bc6a438": {
      "address": "0xBB63FE3442268Dbedb8580b96dA82ACCA20a5D3A",
      "txHash": "0x3171bf0c11e744dc4079d34c963eed63adad6541ecb090c35ae706dbfcedc878",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftResolver",
            "label": "nftProfile",
            "type": "t_contract(INftProfile)2725",
            "src": "contracts/domain/NftResolver.sol:15"
          },
          {
            "contract": "NftResolver",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftResolver.sol:16"
          },
          {
            "contract": "NftResolver",
            "label": "_nonce",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftResolver.sol:19"
          },
          {
            "contract": "NftResolver",
            "label": "_regexMap",
            "type": "t_mapping(t_enum(Blockchain)2760,t_contract(IRegex)2753)",
            "src": "contracts/domain/NftResolver.sol:20"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerAddrList",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(AddressTuple)2766_storage)dyn_storage))",
            "src": "contracts/domain/NftResolver.sol:22"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerCtx",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressTuple)2766_storage))",
            "src": "contracts/domain/NftResolver.sol:23"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerNonEvmMap",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_bool))",
            "src": "contracts/domain/NftResolver.sol:24"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerEvmMap",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/domain/NftResolver.sol:25"
          },
          {
            "contract": "NftResolver",
            "label": "_approvedEvmList",
            "type": "t_mapping(t_address,t_array(t_struct(RelatedProfiles)2771_storage)dyn_storage)",
            "src": "contracts/domain/NftResolver.sol:27"
          },
          {
            "contract": "NftResolver",
            "label": "_approvedMap",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "src": "contracts/domain/NftResolver.sol:28"
          }
        ],
        "types": {
          "t_contract(INftProfile)2725": {
            "label": "contract INftProfile"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_enum(Blockchain)2760,t_contract(IRegex)2753)": {
            "label": "mapping(enum Blockchain => contract IRegex)"
          },
          "t_enum(Blockchain)2760": {
            "label": "enum Blockchain",
            "members": [
              "ETHEREUM",
              "HEDERA",
              "POLYGON",
              "SOLANA",
              "TEZOS",
              "FLOW"
            ]
          },
          "t_contract(IRegex)2753": {
            "label": "contract IRegex"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(AddressTuple)2766_storage)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressTuple[]))"
          },
          "t_mapping(t_uint256,t_array(t_struct(AddressTuple)2766_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct AddressTuple[])"
          },
          "t_array(t_struct(AddressTuple)2766_storage)dyn_storage": {
            "label": "struct AddressTuple[]"
          },
          "t_struct(AddressTuple)2766_storage": {
            "label": "struct AddressTuple",
            "members": [
              {
                "label": "cid",
                "type": "t_enum(Blockchain)2760"
              },
              {
                "label": "chainAddr",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressTuple)2766_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressTuple))"
          },
          "t_mapping(t_uint256,t_struct(AddressTuple)2766_storage)": {
            "label": "mapping(uint256 => struct AddressTuple)"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes => bool))"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(RelatedProfiles)2771_storage)dyn_storage)": {
            "label": "mapping(address => struct RelatedProfiles[])"
          },
          "t_array(t_struct(RelatedProfiles)2771_storage)dyn_storage": {
            "label": "struct RelatedProfiles[]"
          },
          "t_struct(RelatedProfiles)2771_storage": {
            "label": "struct RelatedProfiles",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "profileUrl",
                "type": "t_string_storage"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "9c13cbbd09f466f9998bccbe4a724312fc8532f9b9fb3ff9516c5b6873eed548": {
      "address": "0xDc89033b1362E28D3A32bE42b3844e2c3b658439",
      "txHash": "0x93a91988065b0f06412faddbbd52dfd1ff12bea390320810392f912a68fe3eb9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftResolver",
            "label": "nftProfile",
            "type": "t_contract(INftProfile)20574",
            "src": "contracts/domain/NftResolver.sol:15"
          },
          {
            "contract": "NftResolver",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftResolver.sol:16"
          },
          {
            "contract": "NftResolver",
            "label": "_nonce",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftResolver.sol:19"
          },
          {
            "contract": "NftResolver",
            "label": "_regexMap",
            "type": "t_mapping(t_enum(Blockchain)20619,t_contract(IRegex)20612)",
            "src": "contracts/domain/NftResolver.sol:20"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerAddrList",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(AddressTuple)20625_storage)dyn_storage))",
            "src": "contracts/domain/NftResolver.sol:22"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerCtx",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressTuple)20625_storage))",
            "src": "contracts/domain/NftResolver.sol:23"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerNonEvmMap",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_bool))",
            "src": "contracts/domain/NftResolver.sol:24"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerEvmMap",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/domain/NftResolver.sol:25"
          },
          {
            "contract": "NftResolver",
            "label": "_approvedEvmList",
            "type": "t_mapping(t_address,t_array(t_struct(RelatedProfiles)20630_storage)dyn_storage)",
            "src": "contracts/domain/NftResolver.sol:27"
          },
          {
            "contract": "NftResolver",
            "label": "_approvedMap",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "src": "contracts/domain/NftResolver.sol:28"
          }
        ],
        "types": {
          "t_contract(INftProfile)20574": {
            "label": "contract INftProfile"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_enum(Blockchain)20619,t_contract(IRegex)20612)": {
            "label": "mapping(enum Blockchain => contract IRegex)"
          },
          "t_enum(Blockchain)20619": {
            "label": "enum Blockchain",
            "members": [
              "ETHEREUM",
              "HEDERA",
              "POLYGON",
              "SOLANA",
              "TEZOS",
              "FLOW"
            ]
          },
          "t_contract(IRegex)20612": {
            "label": "contract IRegex"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(AddressTuple)20625_storage)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressTuple[]))"
          },
          "t_mapping(t_uint256,t_array(t_struct(AddressTuple)20625_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct AddressTuple[])"
          },
          "t_array(t_struct(AddressTuple)20625_storage)dyn_storage": {
            "label": "struct AddressTuple[]"
          },
          "t_struct(AddressTuple)20625_storage": {
            "label": "struct AddressTuple",
            "members": [
              {
                "label": "cid",
                "type": "t_enum(Blockchain)20619"
              },
              {
                "label": "chainAddr",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressTuple)20625_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressTuple))"
          },
          "t_mapping(t_uint256,t_struct(AddressTuple)20625_storage)": {
            "label": "mapping(uint256 => struct AddressTuple)"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes => bool))"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(RelatedProfiles)20630_storage)dyn_storage)": {
            "label": "mapping(address => struct RelatedProfiles[])"
          },
          "t_array(t_struct(RelatedProfiles)20630_storage)dyn_storage": {
            "label": "struct RelatedProfiles[]"
          },
          "t_struct(RelatedProfiles)20630_storage": {
            "label": "struct RelatedProfiles",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "profileUrl",
                "type": "t_string_storage"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "f9d422a2b1f892b816c512c3eda4e0626e23e431845e8fd9244ca644afbca245": {
      "address": "0x7927190920E74259d96f9be470A34a79e9bf49AF",
      "txHash": "0x16730b1ab08109e3e9d5589217a2aa070541d24e1f891934fbd05559146a3b46",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftResolver",
            "label": "nftProfile",
            "type": "t_contract(INftProfile)21503",
            "src": "contracts/domain/NftResolver.sol:15"
          },
          {
            "contract": "NftResolver",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftResolver.sol:16"
          },
          {
            "contract": "NftResolver",
            "label": "_nonce",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftResolver.sol:19"
          },
          {
            "contract": "NftResolver",
            "label": "_regexMap",
            "type": "t_mapping(t_enum(Blockchain)21548,t_contract(IRegex)21541)",
            "src": "contracts/domain/NftResolver.sol:20"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerAddrList",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(AddressTuple)21554_storage)dyn_storage))",
            "src": "contracts/domain/NftResolver.sol:22"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerCtx",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressTuple)21554_storage))",
            "src": "contracts/domain/NftResolver.sol:23"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerNonEvmMap",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_bool))",
            "src": "contracts/domain/NftResolver.sol:24"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerEvmMap",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_bytes_memory_ptr,t_bool)))",
            "src": "contracts/domain/NftResolver.sol:25"
          },
          {
            "contract": "NftResolver",
            "label": "_approvedEvmList",
            "type": "t_mapping(t_address,t_array(t_struct(RelatedProfiles)21559_storage)dyn_storage)",
            "src": "contracts/domain/NftResolver.sol:27"
          },
          {
            "contract": "NftResolver",
            "label": "_approvedMap",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "src": "contracts/domain/NftResolver.sol:28"
          }
        ],
        "types": {
          "t_contract(INftProfile)21503": {
            "label": "contract INftProfile"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_enum(Blockchain)21548,t_contract(IRegex)21541)": {
            "label": "mapping(enum Blockchain => contract IRegex)"
          },
          "t_enum(Blockchain)21548": {
            "label": "enum Blockchain",
            "members": [
              "ETHEREUM",
              "HEDERA",
              "POLYGON",
              "SOLANA",
              "TEZOS",
              "FLOW"
            ]
          },
          "t_contract(IRegex)21541": {
            "label": "contract IRegex"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(AddressTuple)21554_storage)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressTuple[]))"
          },
          "t_mapping(t_uint256,t_array(t_struct(AddressTuple)21554_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct AddressTuple[])"
          },
          "t_array(t_struct(AddressTuple)21554_storage)dyn_storage": {
            "label": "struct AddressTuple[]"
          },
          "t_struct(AddressTuple)21554_storage": {
            "label": "struct AddressTuple",
            "members": [
              {
                "label": "cid",
                "type": "t_enum(Blockchain)21548"
              },
              {
                "label": "chainAddr",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressTuple)21554_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressTuple))"
          },
          "t_mapping(t_uint256,t_struct(AddressTuple)21554_storage)": {
            "label": "mapping(uint256 => struct AddressTuple)"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes => bool))"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_bytes_memory_ptr,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(bytes => bool)))"
          },
          "t_mapping(t_address,t_mapping(t_bytes_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(bytes => bool))"
          },
          "t_mapping(t_address,t_array(t_struct(RelatedProfiles)21559_storage)dyn_storage)": {
            "label": "mapping(address => struct RelatedProfiles[])"
          },
          "t_array(t_struct(RelatedProfiles)21559_storage)dyn_storage": {
            "label": "struct RelatedProfiles[]"
          },
          "t_struct(RelatedProfiles)21559_storage": {
            "label": "struct RelatedProfiles",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "profileUrl",
                "type": "t_string_storage"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "d4f8def4e0d5ae910e35eb664eec8cb7275b57050edd93df16ffbcb6e2feb7e8": {
      "address": "0x149c5E6A61A323465B56f862FbdB2AdB2181de88",
      "txHash": "0x600df3fa286a73beb8e8188487ab745a87cf3e05983696649b8b9350f9c74114",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "MarketplaceRegistry",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/aggregator/MarketplaceRegistry.sol:8"
          },
          {
            "contract": "MarketplaceRegistry",
            "label": "marketplaces",
            "type": "t_array(t_struct(Marketplace)9461_storage)dyn_storage",
            "src": "contracts/aggregator/MarketplaceRegistry.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Marketplace)9461_storage)dyn_storage": {
            "label": "struct MarketplaceRegistry.Marketplace[]"
          },
          "t_struct(Marketplace)9461_storage": {
            "label": "struct MarketplaceRegistry.Marketplace",
            "members": [
              {
                "label": "proxy",
                "type": "t_address"
              },
              {
                "label": "isLib",
                "type": "t_bool"
              },
              {
                "label": "isActive",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "bde2c7b1b4fce4b48590b7cf8b4377ea3c3047e042b975b5894f15627e7e71ef": {
      "address": "0xd677C712852543db9f31f6cabfBC2dF0DAdb85Aa",
      "txHash": "0xe8c1bf251b4deb0661b208c41d05a8621ef74cd98c7efabbf4dc566beb99b483",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "SpecialTransferHelper",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/aggregator/SpecialTransferHelper.sol:103"
          },
          {
            "contract": "NftAggregator",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/aggregator/NftAggregator.sol:29"
          },
          {
            "contract": "NftAggregator",
            "label": "marketplaceRegistry",
            "type": "t_contract(MarketplaceRegistry)9642",
            "src": "contracts/aggregator/NftAggregator.sol:30"
          },
          {
            "contract": "NftAggregator",
            "label": "baseFees",
            "type": "t_uint256",
            "src": "contracts/aggregator/NftAggregator.sol:31"
          },
          {
            "contract": "NftAggregator",
            "label": "openForTrades",
            "type": "t_bool",
            "src": "contracts/aggregator/NftAggregator.sol:32"
          },
          {
            "contract": "NftAggregator",
            "label": "openForFreeTrades",
            "type": "t_bool",
            "src": "contracts/aggregator/NftAggregator.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(MarketplaceRegistry)9642": {
            "label": "contract MarketplaceRegistry"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "501c934a2a4fb834a138d0d58b8f416d5d2b9dd196e9b948428128220d9dda83": {
      "address": "0x11b4feF96EC56aF895452cF1858245F46e0A290F",
      "txHash": "0x96678a83b71aad498c0d48c08484a6db666dacf5fa73be624c2293751f0a11a7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "SpecialTransferHelper",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/aggregator/SpecialTransferHelper.sol:103"
          },
          {
            "contract": "NftAggregator",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/aggregator/NftAggregator.sol:27"
          },
          {
            "contract": "NftAggregator",
            "label": "marketplaceRegistry",
            "type": "t_contract(MarketplaceRegistry)1504",
            "src": "contracts/aggregator/NftAggregator.sol:28"
          },
          {
            "contract": "NftAggregator",
            "label": "baseFees",
            "type": "t_uint256",
            "src": "contracts/aggregator/NftAggregator.sol:29"
          },
          {
            "contract": "NftAggregator",
            "label": "openForTrades",
            "type": "t_bool",
            "src": "contracts/aggregator/NftAggregator.sol:30"
          },
          {
            "contract": "NftAggregator",
            "label": "openForFreeTrades",
            "type": "t_bool",
            "src": "contracts/aggregator/NftAggregator.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(MarketplaceRegistry)1504": {
            "label": "contract MarketplaceRegistry"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1c1f5b1fbbda4a4d7db59223af61034592ed837e96547c9a8c4b19e5b3c9be5d": {
      "address": "0x1Ea675312D2ca133248D0968be719E8225B62deb",
      "txHash": "0x0cbf01c7a70e11d76ba3dae014b158a09999b2f7a1db72df1b44830ad77a39ec",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftResolver",
            "label": "nftProfile",
            "type": "t_contract(INftProfile)21561",
            "src": "contracts/domain/NftResolver.sol:15"
          },
          {
            "contract": "NftResolver",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftResolver.sol:16"
          },
          {
            "contract": "NftResolver",
            "label": "_nonce",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftResolver.sol:19"
          },
          {
            "contract": "NftResolver",
            "label": "_regexMap",
            "type": "t_mapping(t_enum(Blockchain)21606,t_contract(IRegex)21599)",
            "src": "contracts/domain/NftResolver.sol:20"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerAddrList",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(AddressTuple)21612_storage)dyn_storage))",
            "src": "contracts/domain/NftResolver.sol:22"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerCtx",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressTuple)21612_storage))",
            "src": "contracts/domain/NftResolver.sol:23"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerNonEvmMap",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_bool))",
            "src": "contracts/domain/NftResolver.sol:24"
          },
          {
            "contract": "NftResolver",
            "label": "_ownerEvmMap",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_bytes_memory_ptr,t_bool)))",
            "src": "contracts/domain/NftResolver.sol:25"
          },
          {
            "contract": "NftResolver",
            "label": "_approvedEvmList",
            "type": "t_mapping(t_address,t_array(t_struct(RelatedProfiles)21617_storage)dyn_storage)",
            "src": "contracts/domain/NftResolver.sol:27"
          },
          {
            "contract": "NftResolver",
            "label": "_approvedMap",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "src": "contracts/domain/NftResolver.sol:28"
          }
        ],
        "types": {
          "t_contract(INftProfile)21561": {
            "label": "contract INftProfile"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_enum(Blockchain)21606,t_contract(IRegex)21599)": {
            "label": "mapping(enum Blockchain => contract IRegex)"
          },
          "t_enum(Blockchain)21606": {
            "label": "enum Blockchain",
            "members": [
              "ETHEREUM",
              "HEDERA",
              "POLYGON",
              "SOLANA",
              "TEZOS",
              "FLOW"
            ]
          },
          "t_contract(IRegex)21599": {
            "label": "contract IRegex"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(AddressTuple)21612_storage)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressTuple[]))"
          },
          "t_mapping(t_uint256,t_array(t_struct(AddressTuple)21612_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct AddressTuple[])"
          },
          "t_array(t_struct(AddressTuple)21612_storage)dyn_storage": {
            "label": "struct AddressTuple[]"
          },
          "t_struct(AddressTuple)21612_storage": {
            "label": "struct AddressTuple",
            "members": [
              {
                "label": "cid",
                "type": "t_enum(Blockchain)21606"
              },
              {
                "label": "chainAddr",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressTuple)21612_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressTuple))"
          },
          "t_mapping(t_uint256,t_struct(AddressTuple)21612_storage)": {
            "label": "mapping(uint256 => struct AddressTuple)"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes => bool))"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_bytes_memory_ptr,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(bytes => bool)))"
          },
          "t_mapping(t_address,t_mapping(t_bytes_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(bytes => bool))"
          },
          "t_mapping(t_address,t_array(t_struct(RelatedProfiles)21617_storage)dyn_storage)": {
            "label": "mapping(address => struct RelatedProfiles[])"
          },
          "t_array(t_struct(RelatedProfiles)21617_storage)dyn_storage": {
            "label": "struct RelatedProfiles[]"
          },
          "t_struct(RelatedProfiles)21617_storage": {
            "label": "struct RelatedProfiles",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "profileUrl",
                "type": "t_string_storage"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "2ccf30ff3e2d10a71c8fa5423733b60bfba892bcec1cfd445698855ce2e6d73c": {
      "address": "0xD2C34A867AE9759BD80A5Fbe136695DfFffE0443",
      "txHash": "0xd44ad3cc8f569cbf1ca3631712cdf2b2b2453baed2197b0409edc10c6f2aa4f3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "SpecialTransferHelper",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/aggregator/SpecialTransferHelper.sol:103"
          },
          {
            "contract": "NftAggregator",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/aggregator/NftAggregator.sol:27"
          },
          {
            "contract": "NftAggregator",
            "label": "marketplaceRegistry",
            "type": "t_contract(MarketplaceRegistry)9054",
            "src": "contracts/aggregator/NftAggregator.sol:28"
          },
          {
            "contract": "NftAggregator",
            "label": "baseFees",
            "type": "t_uint256",
            "src": "contracts/aggregator/NftAggregator.sol:29"
          },
          {
            "contract": "NftAggregator",
            "label": "openForTrades",
            "type": "t_bool",
            "src": "contracts/aggregator/NftAggregator.sol:30"
          },
          {
            "contract": "NftAggregator",
            "label": "openForFreeTrades",
            "type": "t_bool",
            "src": "contracts/aggregator/NftAggregator.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(MarketplaceRegistry)9054": {
            "label": "contract MarketplaceRegistry"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "26b70d59580ccc324aee4ed071c02f5de5f6431176c3dfecc9e0cd441563df74": {
      "address": "0x123dF6277AAd0E0C61472BA7086f20224d0673B3",
      "txHash": "0x67b39ef4d843724a1fc0b1f7e07bcca0bf33c6684792db98b47193ffd3a1238c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "MarketplaceRegistry",
            "src": "contracts/aggregator/MarketplaceRegistry.sol:9"
          },
          {
            "label": "marketplaces",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_struct(Marketplace)2394_storage)dyn_storage",
            "contract": "MarketplaceRegistry",
            "src": "contracts/aggregator/MarketplaceRegistry.sol:11"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Marketplace)2394_storage)dyn_storage": {
            "label": "struct Marketplace[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(Marketplace)2394_storage": {
            "label": "struct Marketplace",
            "members": [
              {
                "label": "proxy",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isLib",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 21,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ad89e5f6786657924f5663507c7e96d83ec5f450102b22406130a182c7417842": {
      "address": "0xf14D4B94fDaeD403a64C808af590122DB8855E84",
      "txHash": "0xe2f740f08155bb97c89a3600b338e8d6b3931d57c7b087429fb6dc3858e63825",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SpecialTransferHelper",
            "src": "contracts/aggregator/SpecialTransferHelper.sol:103"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "250",
            "type": "t_address",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:20"
          },
          {
            "label": "marketplaceRegistry",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(MarketplaceRegistry)1648",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:21"
          },
          {
            "label": "baseFee",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:22"
          },
          {
            "label": "openForTrades",
            "offset": 0,
            "slot": "253",
            "type": "t_bool",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:23"
          },
          {
            "label": "extraBool",
            "offset": 1,
            "slot": "253",
            "type": "t_bool",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:24"
          },
          {
            "label": "percentFeeToDao",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:25"
          },
          {
            "label": "converter",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:26"
          },
          {
            "label": "nftProfile",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MarketplaceRegistry)1648": {
            "label": "contract MarketplaceRegistry",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
