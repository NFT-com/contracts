{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x40023d97Ca437B966C8f669C91a9740C639E21C3",
      "txHash": "0x62d520ce797609dfb23db5a0357d801b2df1f05e4c7092f061a827fe421cc8d4",
      "kind": "uups"
    },
    {
      "address": "0x44Ab7157EA5aa43b538F00FF8E23B7cb9Bcd7C0D",
      "txHash": "0x8504b8a90c152d43af7bc935dba2f248b2e004ce04c4da220558cbef592d95d4",
      "kind": "uups"
    },
    {
      "address": "0x45d296A1042248F48f484c6f2be01006D26fCBF0",
      "txHash": "0x64a184186d6279eb3d7554b7adf88479b02a6482983ad0049949a9fc74949329",
      "kind": "uups"
    },
    {
      "address": "0x2EA52E1bE632c9f08407886ae566668B21933307",
      "txHash": "0xf8703f05ef2d27e3be4704b9bd2df9dd6778c1c6b7385ece8b15fb44a0e2e411",
      "kind": "uups"
    },
    {
      "address": "0x6128DB0DbaE46DD1Fa3712511a822b224692C1F1",
      "txHash": "0x3d7ee605fca3858125e56970af21213d5c6089004a104375ac2588731a615f46",
      "kind": "uups"
    },
    {
      "address": "0xa2a013dBd39652C9Af8C217536056A3B80E7eC1F",
      "txHash": "0x8410d29e6da5a6e3c82675414889e6763268ce578527bef84dbe06a20a1f27d9",
      "kind": "uups"
    },
    {
      "address": "0x4DA56eDD742a3FD6d1aAd3E016D050E83DA1691C",
      "txHash": "0xf08f2d86e303ee9d3a33419920e6722dadb8755c75c94df9b9e573c8626bd267",
      "kind": "uups"
    },
    {
      "address": "0x38E5F095e1a4Bb02c87cb56E2b204E00f3bE5f8d",
      "txHash": "0x54f925e7dc4e9d807eeaabfe50bdfe6c444c64274aa13f7eb63650d1b8f0faad",
      "kind": "uups"
    },
    {
      "address": "0xc3920340c4236D749A600156Bf9419517D199527",
      "txHash": "0xe1e1a7a40945792dc8a785402178e2b6f31a3b5d98e23ba89ae648475a770726",
      "kind": "uups"
    },
    {
      "address": "0x7d4dDE9418f2c2d2D895C09e81155E1AB08aE236",
      "txHash": "0x3d6e40128a994081256099b8a0e7031e1c3d9477ce4f9e434a8b17263af04b20",
      "kind": "uups"
    },
    {
      "address": "0x9170DF8C1B8220854970B4d878497b23DeCc8e03",
      "txHash": "0xbcaf5f8cb2cf39ebed2c98189eae600b2d14a0c2c2f2d69f5987cfcc1673bf55",
      "kind": "uups"
    },
    {
      "address": "0x95E064204B5663711f659d1CeF8e60F14Ba1197c",
      "txHash": "0xea246f1a4a9538d234d730846ac8cd33d79e977b94d43943a11a2f3b3420dca8",
      "kind": "uups"
    },
    {
      "address": "0xbf5dAEC8DecD24e6e32B4123ce5aB708E2667316",
      "txHash": "0xbcd0c24b4db1818fa03ce9421ac2d35a05ad25b99ed2d370efc280154b1ad2a4",
      "kind": "uups"
    },
    {
      "address": "0x6F5E3F2283c21953CB8cdba0e077f30F7C4Bc681",
      "txHash": "0x3f4916421db240c8bddd9a5e8fcf80bb408f0b785792f48655e94879ec49b117",
      "kind": "uups"
    },
    {
      "address": "0xCD979ec33B43eCE6523B41BA5c9e409568eDFB97",
      "txHash": "0xa557735d1d9bd464004fa3554389a679b031536d395d694ade2c66af72a35d9f",
      "kind": "uups"
    },
    {
      "address": "0xC929a2E590C42db246Ca4D26058CdD7AD82fc847",
      "txHash": "0x3403f730629c9ba1522b39ec47fcd9d8430afb0eb921c10b3fd9ee028c8cf7e9",
      "kind": "uups"
    },
    {
      "address": "0x1D1F422aBC7ab5A269FBC7bC166B5A86F1328048",
      "txHash": "0x293c78cb78b9173a8f4ed83ef7e4e72a7431c40b847b276a98b312a2b3b093da",
      "kind": "uups"
    },
    {
      "address": "0xca2A56282ac2B8B42c506225c2bD4dbB8169aC25",
      "txHash": "0x376c39cdb41cb71c779a044e25d98219a098bc1809647d98c7b29929e9c4b777",
      "kind": "uups"
    },
    {
      "address": "0x9F6ED3d90D48573245d6a0c0742db4eCf27B6a56",
      "txHash": "0x2ba37d61459aa218f746414ddadc1d75a5f166b2ef557717121e127eafde9d02",
      "kind": "uups"
    },
    {
      "address": "0xc5782D87B3d353edbf1B03dEB001949Afd2e25E8",
      "txHash": "0x9f83f14364c3c5fb29d991f4c3bf07c64c02a2e8a82663995cf7f381ca6d6bf4",
      "kind": "uups"
    },
    {
      "address": "0x2295828BBB9270cF92D29ed79bA0260d64fdF23f",
      "txHash": "0xc67a06e1d588bbf7dd90448cd0745ea6d7a60c8948d3f81d493a753ab708c4be",
      "kind": "uups"
    },
    {
      "address": "0x59998f8085069b72a77E953452E1155797E39149",
      "txHash": "0x08b56900b26a5a43c34aaf715de926774ba2534914555fc84993e241028b675e",
      "kind": "uups"
    },
    {
      "address": "0x93DE38cdF2675972F38d94300c954Ea42E0639d0",
      "txHash": "0xee3a7f2684a7b87d50d2acb1f455ccaa409d732e8deef5098d9803b55d3b9524",
      "kind": "uups"
    },
    {
      "address": "0x0530a5462D2990953Dd7a7150F325b5fD74ECB30",
      "txHash": "0x05eeb57f8c06b8f345cd99b24dbb1670345be2e1349a6b691160731f52cbcbf4",
      "kind": "uups"
    },
    {
      "address": "0xA3509a064A54a7a60Fc4Db0245ef44F812f439f6",
      "txHash": "0x0d37f02bf27c0c8631c949d1b0cfda4f48071221980dbf32f26a4fbbe33e98e3",
      "kind": "uups"
    },
    {
      "address": "0xb5815c46D262005C170576330D0FB27d018fAd60",
      "txHash": "0x4b3f5484aeef5cf61fc4311e374aefc0987bf6893dc7ac6cd8f92361ac88af70",
      "kind": "uups"
    },
    {
      "address": "0xA2395cd351A8E7cbB3af729060FDB813738313ff",
      "txHash": "0x9bc1325ad89d45a71ddbb4f44cf8ce9e921a89b1aa84a3658cf764e38d4af5d4",
      "kind": "uups"
    },
    {
      "address": "0x941BA75176396e4Fa168750b7927EF42DF67FF0C",
      "txHash": "0x7d9819b4805339e45ad0e110f714fed620fc73ea185f825a6eca9518efaaca46",
      "kind": "uups"
    },
    {
      "address": "0xA3802263Ee1305de54c2E8b24a800EF82B564742",
      "txHash": "0x599bb7f33d2543d9942ea205b0ac647afc708fd71ecdc6b35d55fa4b6ce7869a",
      "kind": "uups"
    },
    {
      "address": "0x32B091f6Af61bfC0dC78D22DAfCc981e3403350c",
      "txHash": "0x65a71999aa519eb957d3e9a44b2494575fac406c223343592ad44b7cc8f03031",
      "kind": "uups"
    },
    {
      "address": "0x24AC307422b694c71242e37C297b7fD26E09f4cD",
      "txHash": "0xaab1af3cfbc6a3e5786c8c7610bde165548eaf92c84ca4a2e66e717dd6085a9f",
      "kind": "uups"
    },
    {
      "address": "0x5e6420d2EceF69265503797c6a3D1f6f6188b024",
      "txHash": "0x4ed53df1f97bc22295c30ec23399aaea89d17726a090337c404b520fb7994da5",
      "kind": "uups"
    },
    {
      "address": "0xDd84b04FeA34c7119077564215b6ebdAD93aeB32",
      "txHash": "0x5ba1e3d19ac47888f444c47b06077c6201c221140875bbd5472fc5986889f62c",
      "kind": "uups"
    },
    {
      "address": "0x031579cE4485170f053F772c0a293C2C62889540",
      "txHash": "0x06a0fddb4de89887a94edd9c0bb6961e833978d2e970f56f1d74635cbad84542",
      "kind": "uups"
    },
    {
      "address": "0x53Bf75Dbcc2E25A8223E78B9760Eca72d7Db9659",
      "txHash": "0xffb73bea9ad48d085ebf703f1f23524468d9caa0d4cd38ce437492867da304bd",
      "kind": "uups"
    },
    {
      "address": "0xeCafF1b04e88E00802167489d0c8577C78479dF8",
      "txHash": "0x21a4546a438a54dc41ad863fa396e43251da6179d29071b17da9c936492f3659",
      "kind": "uups"
    },
    {
      "address": "0x5f6b924793BB528808BDc64D753EC3bd7B36842e",
      "txHash": "0x8c93e4e8be657cb1835ea64447face3c37ad6af69e76dcb85b7e34d85b3a2758",
      "kind": "uups"
    },
    {
      "address": "0xBd3890Cb179c73f4A69bd59C3A709c06982626AD",
      "txHash": "0x74dfd4efc165ffee2808a81ab389040de853cbb2d977183234d5075038578aca",
      "kind": "uups"
    },
    {
      "address": "0x6b8Ae1C1a56F2286c6e5664507ce680F9E8056AA",
      "txHash": "0x8d903c66eac313ee45538d56af296564c8bb034c78662e5beaeda5c404e00901",
      "kind": "uups"
    },
    {
      "address": "0x4827e7627D64f9D7E1bcc202Ba444f47a5A92082",
      "txHash": "0x09e0b5df1b4bb1444596de29715a8a6d034232a75b0694999a33e411df35a303",
      "kind": "uups"
    },
    {
      "address": "0x30Cd409caCE94Ae1550CB2FCEe72489f02406F92",
      "txHash": "0xc0eb7e6961f57d4355a98092dc23f2acbbadb069f3eaedbab03c5f91d1d76a78",
      "kind": "uups"
    },
    {
      "address": "0xbEeB7221B6058B9529e0bde13A072f17c63CD372",
      "txHash": "0x76b6da5968e7c77cc62024c54e7342c5675007b85a6b26abffee65d678e88cdb",
      "kind": "uups"
    },
    {
      "address": "0x1fAac5F0b5Fb7AdC1313cdb542116F6439308c37",
      "txHash": "0x8aa4c15f1d2a3ce8f242856cc180833dbc134c847ba50da118e7ccb2981a6676",
      "kind": "uups"
    },
    {
      "address": "0xaa7F30a10D3E259ae9B14308C77dFe5aA2f5D9Df",
      "txHash": "0x620e6920fe3bda38e82c053b4f7fb44df06a6835eaeba9442d97debce543020c",
      "kind": "uups"
    },
    {
      "address": "0xc53884b5E8B9f29635D865FBBccFd7Baf103B6eC",
      "txHash": "0x9ee0c458f2b8712a36ed31289d0205bad7fd1a6a4519f3c701151dbd4c20d902",
      "kind": "uups"
    },
    {
      "address": "0x2302004af147967a99449d36e12B4831Af99b23E",
      "txHash": "0xb97a1660798a5f772ed809e1c78400f1ed4f595a731e1ef70ce6f79871efaf0c",
      "kind": "uups"
    },
    {
      "address": "0xAF09BE1A161E85808199000269c252267c15690E",
      "txHash": "0x9bba2b55f64dbbb6d84beabe55bd5d454e4c9383fc41fc1f3104c7a65802d1a1",
      "kind": "uups"
    },
    {
      "address": "0x20D02512FaAa170cB553E7B469af2a05856ef77C",
      "txHash": "0xcf6ad7bebdec97cfea381c2b5ef33239fb7d297543eb68154f15fce9f8ed143f",
      "kind": "uups"
    },
    {
      "address": "0xce789D5C9DfDdEBA2AA87b37f2dE25e26a767023",
      "txHash": "0x5573e15bbb8edef3e3a09a092874a24b01d582b8ada31034769415d8395a13af",
      "kind": "uups"
    },
    {
      "address": "0x8D42A1Af22ac1287aabFEb5D7BEEa956210Cf197",
      "txHash": "0xb37f340bc6b6bff51c7450a044e09092d44cbede3974391f6c1d2413b66fed31",
      "kind": "uups"
    },
    {
      "address": "0xC6F83d1D6D5a2aC7EE034483F8Ebe29646467Db7",
      "txHash": "0xa92f7e5ca30021a5052e96aa7cdc616fa23f8beb5085ec18c439335669ee8f12",
      "kind": "uups"
    },
    {
      "address": "0xAed146B7E487B2d64b51B6D27F75c1f52247050a",
      "txHash": "0x09cc61b7a49e076ee35cebb02f78edbff6b4fe6e7b326eeda67c8bdc5a58caca",
      "kind": "uups"
    },
    {
      "address": "0x4Defe27b42e870E36BD693Bd7d4514e80272bF1e",
      "txHash": "0x01920dab6d41c2b364ebda7157d85debca98c3be96ff2f2faeca3b67393d2a59",
      "kind": "uups"
    },
    {
      "address": "0x96c7a4c8babfA1f24f275Ad93a02319E76c395fe",
      "txHash": "0x1753dd86fc4b8641bff37f8d0e343316e00aac0767264432272d7e1d873f56ef",
      "kind": "uups"
    },
    {
      "address": "0x25af0Aca0830088CdD48aCA06143bA82826D7b55",
      "txHash": "0xf2b018b6313a293d5db2e89b6adcb2e8dfacd7a92135a1d6be6c62bf5dc3837d",
      "kind": "uups"
    },
    {
      "address": "0xaAb1808320B220fc1EEB48Ea4E03Ba44CA5ca3Ea",
      "txHash": "0xa71006ad237312731cc07d6f023fdeba99a939021ff26af216e4fe7069389445",
      "kind": "uups"
    },
    {
      "address": "0x9c9D896a63F92D034174205b2ab6288035e313e8",
      "txHash": "0x76bf8725ce910debe3793e797f31674c035b2b36dc31724df9ababd20f140dad",
      "kind": "uups"
    },
    {
      "address": "0x54d6c3C9Cefcfa96C9e9e020d456D6FF172807D8",
      "txHash": "0xf2aed7d9858f18a5227dcdb0700c82eb4d9e675311ada1cf51be4ceb91662652",
      "kind": "uups"
    },
    {
      "address": "0x8Bbf505ce08553A4F0083Fc1166195B0cB837Ab7",
      "txHash": "0x376e498b5de295e56f1f38df7f6444d4204a4a9ddb130e202fb89478b3d70fa2",
      "kind": "uups"
    },
    {
      "address": "0xc70090a2d719b4f9BB73084A48900510457d350E",
      "txHash": "0xd04672abf0f7741f6cc80bbf8530b704ac28ea171cbb53153b9187a2d8459ef5",
      "kind": "uups"
    },
    {
      "address": "0x6b43FA0d3CebC2438eAB79B7Cd950758ecc91741",
      "txHash": "0x9692012fa85726ccf51841cf21af8c265da41bc0824dd6db322eaa0ad2ac1bf2",
      "kind": "uups"
    },
    {
      "address": "0x590c571caC4ac4526771E7C8B515FEE0De1e91d1",
      "txHash": "0x390fa925658019594bd06698627d718ca0490ad8d3b8bc085f4087391a0a3def",
      "kind": "transparent"
    },
    {
      "address": "0xD6aAF7392410b627FC3678cbdbF04a6A5ed1A8ED",
      "txHash": "0x2c74350f3384daede15392490a14b76228e8c16458406d45d97de3894eec70a6",
      "kind": "uups"
    },
    {
      "address": "0x6a1FcB3F8D445C9426D36B8D33c77f240ABF28e2",
      "txHash": "0xf661a9ca668f647639a336215beb8f27c27696e937c0d96d03a5ca3c9287dc0c",
      "kind": "transparent"
    },
    {
      "address": "0x52Ec5398c29d6627E543931C473Ba36c2bBE0f5C",
      "txHash": "0x3cfe7f03fd5e726c0bca7d762e84a9e3c948bc49fe2677930e32a508de677bb0",
      "kind": "uups"
    },
    {
      "address": "0xB4900656f35687352e042CafA06ecd4077cC9b5E",
      "txHash": "0xc40ac15f5d1094a53c679317495babb722a48a41e9834cb4cdb6b4a8d6b1161c",
      "kind": "uups"
    },
    {
      "address": "0x26E13D1c3D5B081CdFADB025324624753bC06c78",
      "txHash": "0xe280ecede5dcc805d96df0d9335008ddbc72b5bab9b7f9eed716685d4b09655d",
      "kind": "uups"
    },
    {
      "address": "0x386B1a1C8Bc6d3Ca3cF66f15f49742a9a2840CA2",
      "txHash": "0xc0c73f802c676d636f3b07feb27ff19eaa29c957dc3a6ffe9a018cd89f6f06bd",
      "kind": "uups"
    },
    {
      "address": "0x4a51678cf2c371cbA05F00f7BdDe60634Aa25cf4",
      "txHash": "0x64757ebe7356d51d0d61acd26a1fbbd26ade3f0af94040b48e7107279808bc8d",
      "kind": "uups"
    },
    {
      "address": "0x8C6AA8aeEf01C5Da6E47F910394BE9Ac0e99Ca88",
      "txHash": "0x7e63fbbdf77ec74615d2ab5ee9d89e434408c90636e989e0a7bb1c7dc47bd6c8",
      "kind": "uups"
    },
    {
      "address": "0x88487620a85acd08E05EAe9Ac3100764cfCF711A",
      "txHash": "0xeb3003a6e0895d10c6bc52ddc4c28131638604269d41f847dc20ce3ec7d62ef2",
      "kind": "uups"
    },
    {
      "address": "0x8793B5B9B8e54D1C5aeD40b679d021ef47c2D20B",
      "txHash": "0x890c884ca697769bbc22b87b9593c3628ee2d59db9077805746ae3233a08aba3",
      "kind": "uups"
    },
    {
      "address": "0x5fF8777B6B8DcA1616891BBCcdecF2aCcc6cF7b8",
      "txHash": "0x1df529253221b6573694117641e46215a5ddd6e7c7dc2f10e02eadac34b4d049",
      "kind": "uups"
    },
    {
      "address": "0xbb5fc6e4BdD97B11a1CB41C5EE7DE842744BCC9b",
      "txHash": "0xd3309d7df1e30e7cf61368c003c36c14793f843d532309f2a49e690687cad6e7",
      "kind": "uups"
    },
    {
      "address": "0x0484fC6b62294aAD07d659F805789C96C79ff82D",
      "txHash": "0x1c238194365a088c0eb0a3f4aa7246ea5fb81d2cd42a33f5de63ec36dfb07215",
      "kind": "uups"
    },
    {
      "address": "0x2B707CcFB06E498b867B5799dFa81FEceA15A135",
      "txHash": "0x05e118fef95cc83ad5e1711b8efd0446da403d8fa098b48660e4d18ee989b5e7",
      "kind": "uups"
    },
    {
      "address": "0xb2e8e382df819AA3EBb29906f613A8609F918e2e",
      "txHash": "0x4f089b4303a8eaaedff07402bf8bba917e754e1687b82dd5e206757502ba4d54",
      "kind": "uups"
    },
    {
      "address": "0x9c82765274a69C14d4abd6F75c0275D39F1a80A5",
      "txHash": "0x44b587fb56bcfd522a279c6832c509b37a23808fdf0540e9a27b21f929df0b35",
      "kind": "uups"
    },
    {
      "address": "0x655285344f8C70e60d371d1D3FaDBd8BA0f2f2Dd",
      "txHash": "0x78d46441839b221c2f7c7d51f96f7894e0167058ea0c2ee6c5c0323bfe4e46eb",
      "kind": "uups"
    },
    {
      "address": "0x058069538D35B3037bA373b3CAb9adc8e2388AdF",
      "txHash": "0x5010e8b092d0e8a93a314b71321bc3d5eb05ee0bc84103f32ebd802a7c99a152",
      "kind": "uups"
    },
    {
      "address": "0x1Db2b3f3d44B5f9875e0dcF1b2b29bb4C7d64715",
      "txHash": "0xfb0a766d003f57d69738c3c23577001514c541ce1a612c1ce798d631db258a09",
      "kind": "uups"
    },
    {
      "address": "0x12c86EaAcA5403eC6C7674aaCBCD2BC99463d19A",
      "txHash": "0xc729dc02c0fa777edd2c883dc10b81b54336b12f004e99897731ceb18391de0e",
      "kind": "uups"
    },
    {
      "address": "0xb0Ae2A1F3B1cCA04EDa036090F8388B43BC15f5f",
      "txHash": "0x52918d83ea04c750cc9d14bbffa91d75da64738097719488def70330c12a30ca",
      "kind": "uups"
    },
    {
      "address": "0x15C0E02e11dEC15b1c5C79CFD4Ee4566A124B14A",
      "txHash": "0x619dcda700df16899774f317d7c7ee44f88d4b169ab2bc903f2bfeea3f4cc554",
      "kind": "uups"
    },
    {
      "address": "0xbAE022721cfa57024781c3362724D5fBCE7443Da",
      "txHash": "0xe4e5c87bde9374f3cd633b77da9a3348552f62de2f125978f484560e1e1b4e20",
      "kind": "uups"
    },
    {
      "address": "0x727908a072D469Fd38077Eaa0c16848731040ea0",
      "txHash": "0xafa4b04609d2f3606ed04404d2f073b5c82738962fd3c52bf9da2383c684ba00",
      "kind": "uups"
    },
    {
      "address": "0xa56e604700D62d7a270C625D4e04339e7609976f",
      "txHash": "0x0055e94c187a991a766326ace9c0efef51a149df35520078ae9b75cb63fbf77d",
      "kind": "uups"
    },
    {
      "address": "0x1d75aa7fc1cF395deb57E316108ECfE4FE359767",
      "txHash": "0x1d1dcee9a11535c1e624e6a2924ed7839e5bcb15ae7f261e8dd76626db8798b7",
      "kind": "uups"
    },
    {
      "address": "0xb7E2747605Aa0B93820aA391ef994F5a68C317d1",
      "txHash": "0x8d05e7dc95046bc27f9d6757c73abd740f6b6044c757020ac88a33470787790d",
      "kind": "uups"
    },
    {
      "address": "0xFCf4549370076C8B89E64F843d6716AEe4c7ff68",
      "txHash": "0xa4eff6fabc2d8ae099036b6463bd22f9dc500f1fd381a15ecc1711dce9671243",
      "kind": "uups"
    },
    {
      "address": "0xC81D5A50601545dcCaF51c2BCBe87A5DCf389Ef9",
      "txHash": "0x745dfa3c9e9632afba163ba6fded87c3f7b84d56d39844484bb6d29898b347a2",
      "kind": "uups"
    },
    {
      "address": "0xBcef584dB6c96867eda27c0D6600A27193304B01",
      "txHash": "0xa454fe79b3b7c8c43d6f2472028cd38a6e1b4069a3031445a1e9ec58ada203d6",
      "kind": "uups"
    },
    {
      "address": "0x7DCd99E98744296441ffdCAaf60E4Ac8407EAe27",
      "txHash": "0xac140943aecd7987d603dc3e2aaa905aeb17f4b640e17849d7ec4c3ed54be419",
      "kind": "uups"
    },
    {
      "address": "0x101D0A2AeE17b229Ce3473F620e740382C253aFa",
      "txHash": "0x83813acde9dab0b8cfc16c42b4041cbc646f4811644bb0ec75a60487120c6a8a",
      "kind": "uups"
    },
    {
      "address": "0xA33eFdf02F2ef6b65Ad48f7f80Cab1111CCf91FC",
      "txHash": "0x233d7912c9c3acbd921f11a932d6cb80ec738dec9d8e507e80ed358f995b274a",
      "kind": "uups"
    },
    {
      "address": "0xA6F03AfB2a99d967bc4CD603c5746D590EDc7136",
      "txHash": "0x96137de09b41238ba7b5922defce601b6e7863c3e094343ee1b5f19c8cc01296",
      "kind": "uups"
    },
    {
      "address": "0x2b7193F0a105285243220fD9f2F6C8D4549F4bC0",
      "txHash": "0xc34f2b2d610fe5e1bedc671450fbe02ddb562e930edd16935dcf8cd00e805986",
      "kind": "uups"
    },
    {
      "address": "0xDcC3C240F73C1Ba1e10e060D98b6dD26fCEC43C7",
      "txHash": "0xbc2ab2934e626195597a968b76ff6f45ce8b1d1778d7975a0a7b0ddeab5e0c45",
      "kind": "uups"
    },
    {
      "address": "0x1536592da7Ab96480242be8CB9115cEFE81b8e17",
      "txHash": "0x6ef78d8a58b1545d9156709f8b0ec87a6a7d8d278a25507679272172067a27de",
      "kind": "uups"
    },
    {
      "address": "0xE197428a3aB9E011ff99cD9d9D4c5Ea5D8f51f49",
      "txHash": "0x5a1796b7598b0d5bad184606c2e15e5889c4f0c17e7c15a7fc55c387f9032ecd",
      "kind": "uups"
    },
    {
      "address": "0x1c4fFEC2191F97B40721a37271dE59413D817319",
      "txHash": "0xe2ad2d455eda6944a37b1dfcc683900eab00cbf5152e2a012c2b3ece36982d5d",
      "kind": "uups"
    },
    {
      "address": "0x734a14f4df41f2fA90f8bF7fb7Ce3E2ab68d9cF0",
      "txHash": "0x1c0f2220b87b9340ea028878281751bbdc67cb6f55c76e3bd8e895027f169299",
      "kind": "uups"
    },
    {
      "address": "0xD954f115a212F328B0aBa249921f414Cb5eE3788",
      "txHash": "0xabefa68e3e5065bcd92151eb75c9c4957e70670ae38907ac252dc2df655ab9b5",
      "kind": "uups"
    },
    {
      "address": "0x35FC2A74dbb135c27Ab297E869A1B45944BCeFA6",
      "txHash": "0x8ae6bbef1a24240ca0109e2fba6692e17cfeaed3e61643092cc87db364247d67",
      "kind": "uups"
    },
    {
      "address": "0xF5cbB8C7955F513226E72524c7E86624Fd1b5ce2",
      "txHash": "0xe4d38bb66b9ae5b04dc1ff2648d32db625fb90efd0e074c34bcd23a784f37aa0",
      "kind": "uups"
    },
    {
      "address": "0x76F50139d3719194Ed882928DA2d929e39EbeB3c",
      "txHash": "0x3fe48ea668536ce47b87db617802bf20d751d5ffe9335a680c45ca23049dfd39",
      "kind": "uups"
    },
    {
      "address": "0x3d278bB7ee5BcEFE68759Cd578E572f3B6A5774C",
      "txHash": "0xd2d5e62420c8bba447ee3060520170e4d262e6b15aa1223c159b37ec3090771f",
      "kind": "uups"
    },
    {
      "address": "0x7E635aD1D67f68F4B8D1EAdDDb4577aC2aA686Aa",
      "txHash": "0x4195f311c656f22db8073dd65a7531d86eb3944b710394367f11c1fde5b071e1",
      "kind": "uups"
    },
    {
      "address": "0x181030092C8255b9325EAb48712c14D518D1dE6B",
      "txHash": "0x9f5ca2fb05d7c4d02fe7e7ff635e6d7e350e92edb04cebb3b7cb5d745bdd944e",
      "kind": "uups"
    },
    {
      "address": "0x37eb4cb864d63735794ed7cD16550A7C6EDdcbB3",
      "txHash": "0x1560f37eb741a331da5e7a6af104e703ec1e0ac0ca963e5677295997ddf4eb4a",
      "kind": "uups"
    },
    {
      "address": "0x8cE66A6Bb03Fb407D9E9D8327e266e54058d7362",
      "txHash": "0x45bfe012f82a938bda79cf2d887744788c2081c4075b030fd3ab76b70475b2b5",
      "kind": "uups"
    },
    {
      "address": "0x46b7f6864cD071845de69ce7E9D82EDBBDc7054F",
      "txHash": "0xdedecf1d031849443c62522a011691c84a77b94ec2011e902678e214857732d0",
      "kind": "uups"
    },
    {
      "address": "0xd7Fd5046a2523841Ee840d7574B54591300bAcB6",
      "txHash": "0xd82285c141243f089460ca87297792329ebd0cc0225bb7b7667271415e369d45",
      "kind": "uups"
    },
    {
      "address": "0xbc6BA73F5822abff07F6BABa7617E78a6C0729c6",
      "txHash": "0x6d84c9e01430fa5d7783f5eca16b9f958dcddf6ad12388eb7c9f9d3ff35f1aa2",
      "kind": "uups"
    },
    {
      "address": "0xb290FfddB496F05cCC115629055967b9C4D4E0E0",
      "txHash": "0xd9c44ec3a8443bb1bfea9e7c71d69b26dfa417595c6f75ee327660c77b097b62",
      "kind": "uups"
    },
    {
      "address": "0x6Da281301f7b4506ea1F7495ae9415348dA475cC",
      "txHash": "0x2fb3a5e3862036f84c06462f402697f8ebc59c20649438fb2a7246b2f92949ab",
      "kind": "uups"
    },
    {
      "address": "0x709D9970c45dED0F9D5F3FdB0b08BE4134552dB6",
      "txHash": "0x8dc0aa98018583b9e120077ff3ab7fde71490f51b71a686a928672627062fedd",
      "kind": "uups"
    },
    {
      "address": "0x10CF5F4C7cEeBb483A64E9500816f7356dC9379a",
      "txHash": "0x219ac1a7eb8568d23ccb37d290310d9696b7343c5cd6c2f5df9250ef417351f0",
      "kind": "uups"
    },
    {
      "address": "0x0Fae273409Ad108692d6515dd134A338364f1689",
      "txHash": "0xe10a42da1fb449f6dffb9d34f0fea316759c9f9a8a2f10e10cfb20fe544301d5",
      "kind": "uups"
    },
    {
      "address": "0x4dCF39912385A00ed722ce0b70A21d616eA6BAEC",
      "txHash": "0xbab4eec383c71b4ad7b91c2bafaccbb47311baf5139bd623d486be41e1362a01",
      "kind": "uups"
    },
    {
      "address": "0xBaa623C1876f918982599C215D6Eb4Fd8480a130",
      "txHash": "0x03dd0658182209ed4a49892e6c286f7f748be11c6548a98bfbc1b213a2994148",
      "kind": "uups"
    },
    {
      "address": "0x7B4517C94301223D2bFC009E4FCeCA2Cb0F54b23",
      "txHash": "0x134eb7bc34eb829a7ddec7defdb865dff50b7d23ba929e5727ff669098004861",
      "kind": "uups"
    },
    {
      "address": "0x4a096ddF693c45d67eC625c8C0c16CCD2c388C50",
      "txHash": "0x1920dd3e9f761019404f1d50a697e7856897331c07dcaecc23a9e96b7917ff31",
      "kind": "uups"
    },
    {
      "address": "0xb6465bA958C768b4153DB0b43967335ca5ab5cC5",
      "txHash": "0x14d5021b82ef232721e89706f4cbd279650e780f8bd3eb89680ba65473ec6107",
      "kind": "uups"
    },
    {
      "address": "0x7033C867fB817aD7F0B56DE09fc084f3Ea3aA7EE",
      "txHash": "0x381cb6017327ef31c09d15c9fc9ac8882be8f5267c91ee61a1a143a7efb0d992",
      "kind": "uups"
    },
    {
      "address": "0x5B64d7433A59a71130a53A50Fe96358EF29B2F6F",
      "txHash": "0x0cf472051876e02c34bd6d53fe19d64ff94ef1a28db4f52f4c81835b56ed3853",
      "kind": "uups"
    },
    {
      "address": "0x8A8b722B8966E479E820612359875b17202518c6",
      "txHash": "0xbd38d60561b02019536e1440008f2a8a2c2521bcf6dba13e26c7e70e8991e36f",
      "kind": "uups"
    },
    {
      "address": "0xCA781eBb142e7c67a0334c0C1dA1FFe9688001FC",
      "txHash": "0x98a4b4aab830c728b12fee69f3350661d879f243108f4af9180c801d8bb248d1",
      "kind": "uups"
    },
    {
      "address": "0x4259444450E25a9341853F6F19167d1fc0B280ED",
      "txHash": "0xd9be3cf53078b19bb7bbd033f7763a50559796dacd0b67339ea1de59f657d859",
      "kind": "uups"
    },
    {
      "address": "0x2f367496fa82832FB3EEf42D594E3D20BBC3c52D",
      "txHash": "0xea61d9ca7f634c4c51d4f426c5572cd3841f2ec19b118ed75365d2fbb2be5429",
      "kind": "uups"
    },
    {
      "address": "0xe539C5Fd406889469860E5AF9c0b336B5fa53E8F",
      "txHash": "0x44d43d2a905b87531e8f7e18d9322730168c07b649a2bf91422212df0fea2464",
      "kind": "uups"
    },
    {
      "address": "0x1DD4121DA7dbA0266726f211BA006210CA111F5E",
      "txHash": "0x92d1993531f25fb5ea1150cd1a516d62477231731246e12c8683f2daa19f379f",
      "kind": "uups"
    },
    {
      "address": "0x20FC7ad1eE47245F0FEE579E1F4bEb2dC5380068",
      "txHash": "0x6480bdccf2aeb8b53189e4e05fa2fa3d9ed2ab8a1f6e1c406ce7522ad1f3696b",
      "kind": "uups"
    },
    {
      "address": "0x798d55538Fcc3c1666b0b28960bCdF38B817eaB4",
      "txHash": "0xbe0dca6b0340708f12a46767ef7f47c8bcb72bf65579880589574475ffd3476e",
      "kind": "uups"
    },
    {
      "address": "0x860Da2aF29a6Ac738246e2fc340Bbf99754C6aAc",
      "txHash": "0xb6b11cd6a81327181d1662ae40cc9d98d5928bc4f099928e1d6edc192032fa37",
      "kind": "uups"
    },
    {
      "address": "0xc49134c613dcF782F4df562A828cf623Eec7ff82",
      "txHash": "0xd6f31dfd1c00c54e5ad0c11407e523b2f0bdb836e51f603075a50bf296498bc8",
      "kind": "uups"
    },
    {
      "address": "0xE3358113292D8b30e962d2aa5634C0F93E2B3b7D",
      "txHash": "0xf170f838163c9ed076848f0e79ebb597785ba23f73326b7b39fd19dce599c452",
      "kind": "uups"
    },
    {
      "address": "0xB8E2b1357e9cbEC37a2D6d94A60459C97f59C8ed",
      "txHash": "0xff16abef82894e2dd668e3954000cf1578db74f336273de28fe380c84dbd4209",
      "kind": "uups"
    },
    {
      "address": "0x6466b3a1A6826E97e18083Fe13FD05d9A14C62Fb",
      "txHash": "0x43e9bf44035da0197439a044216d6d8a84f2d59a6515ffefc56f99b8cd96cd02",
      "kind": "uups"
    },
    {
      "address": "0x5a889cfed56101A994Ef01b98318EB6e47328703",
      "txHash": "0x86943fa2b1f6d177fcfb2c582b2b1eb009b05f1556634d130e10a3de7da9c7fc",
      "kind": "uups"
    },
    {
      "address": "0x6aca5606f9418fe663465390BFda47ce3a1aFEC5",
      "txHash": "0xb2ed3a0483a205ed0b3795efb9dbc033c2695ada2b7777ab2e3b9ed2d8fddb53",
      "kind": "uups"
    },
    {
      "address": "0x2FfE65F8Fb7E65471479F1D80FC0c60cb86a6fDF",
      "txHash": "0x8587aa5ae9633012aaf4d0dfca9d49c7e981efa77fc2d839d070881bab17face",
      "kind": "uups"
    },
    {
      "address": "0xeCaA3d2B0D5b7D929316E6532BBeF7D5D4FA3C38",
      "txHash": "0x173b4a0e45eba25f04bb181cb373a4343d333a36fdb15d8ad463ca8e53498b0a",
      "kind": "uups"
    },
    {
      "address": "0x483d9729c15bd7A4e749F20066235f0D6974eA78",
      "txHash": "0xb82d9c56c6535aed6926e140bd58b22079c3a4b655fd9ca95e32726e09bdaca0",
      "kind": "uups"
    },
    {
      "address": "0xa7D4dEd902E081c5Cc14e9628252705614bE8906",
      "txHash": "0x1c2489d09f8d22def1a5a73025b97ae1e5a2f7f32719f04356a39a4bc4d7ed8f",
      "kind": "uups"
    },
    {
      "address": "0x3b6b2ddC1878dACbC99b9Bfb099A7c3DcfB76da5",
      "txHash": "0xde5b7ed5fd597998cb6788042c13643cc288767b61a1b5a6ab883e601eceb86a",
      "kind": "uups"
    },
    {
      "address": "0x530E404f51778F38249413264ac7807A16b88603",
      "txHash": "0x56021f4841dcd80c6d88e18c3a0da93b86e39fb9a975a71e182a05f2e7080707",
      "kind": "uups"
    },
    {
      "address": "0x41E3E44e2Db9fFC7b69CF459441C80F95Cb25fCc",
      "txHash": "0x754879be9c5cef595071a0cf09046d0e2c008dbffe0b27bf8f84a5e45ffe997b",
      "kind": "uups"
    },
    {
      "address": "0x7e229a305f26ce5C39AAB1d90271e1Ef03d764D5",
      "txHash": "0x237204300a54d77ed7025f7fa9ad9bf9df3ba6440c5d77ed96905b7149453c0a",
      "kind": "uups"
    },
    {
      "address": "0x1338A9ec2Ef9906B57082dB0F67ED9E6E661F4A7",
      "txHash": "0xe9b842bb9a7b1b322c7ed04a1df1dd38bdccc10dac6512354043bc00104f7d02",
      "kind": "uups"
    },
    {
      "address": "0xA89d7a85A2502e2eb63a91883C7D96169cc7F92C",
      "txHash": "0x464f840c512f235a6dae9e423e1c604c0d30f0887b9298767753b89923deeb27",
      "kind": "uups"
    },
    {
      "address": "0xCb7a9Ee12d1d22C3026EAFccDf8ab69379429d9e",
      "txHash": "0x23f631b6e4d25d44e3d4c4b417b4390be1ced8935d65f22acadde01f19d37079",
      "kind": "uups"
    },
    {
      "address": "0xa982496268a66F7a649Cbb726576AF05a54dc72A",
      "txHash": "0xd47a38a59eb1270cf45ddc8f8dd9cf27c7b1b2a4222534fa52ba75433e1fa732",
      "kind": "uups"
    },
    {
      "address": "0x6579A513E97C0043dC3Ad9Dfd3f804721023a309",
      "txHash": "0xaf7fe060347eba9661e4db9fb12f901518df415dec810efee8b7bc50f534dcef",
      "kind": "uups"
    },
    {
      "address": "0xd8B246FB3b9E0c5Fa5e6587ce909B5Dd16Df344B",
      "txHash": "0x9c7f8a98073876d1f3add091a6f20604b8cc876eb347a8543f79c8955c76fcfa",
      "kind": "uups"
    },
    {
      "address": "0x624548A10332fAe8B1e3D064F2fdD23eD4c4E645",
      "txHash": "0x0adddc9dfa3d7f39846c62055d0bc9e2d9f2adb49d896d0d9a8f865ae8e3d04b",
      "kind": "uups"
    },
    {
      "address": "0x3F15E5e9cCE275213365e5109168eD7B368f67Fe",
      "txHash": "0x0ee0896f6c80d4ea45e142edaee65d3c77873b93e95fc4a5b298c8a47cfe0f31",
      "kind": "uups"
    },
    {
      "address": "0x324F573715282a19Ef1D2adDa1E8f637b1a3e8aB",
      "txHash": "0x809b6dd1a641d8deb64c44243090f355676cc94963da36a6263faa5b46a1ba70",
      "kind": "uups"
    },
    {
      "address": "0xF579F547f656385C5CAD740a7e7D37dD47A66c31",
      "txHash": "0xd2f80c71eb8275344b36182461b4a7d6e81657eb0c8e578abd376233518548e2",
      "kind": "uups"
    },
    {
      "address": "0x21F1950aFec168b6a6224a27D91AB99579AD98c9",
      "txHash": "0x8deca6c132ace6552ea8d26be16b0f47865159f11cd8141856c170cb46625a80",
      "kind": "uups"
    },
    {
      "address": "0x38E640b0FEAc638344Ca8d1223F4ef604b8c39AE",
      "txHash": "0x756123f5a9050499a3c435d7e12b28316cac58334f1ba819dd990a465d01e64e",
      "kind": "uups"
    },
    {
      "address": "0xf7e73474C742E50553559A6CB40b27c4B5c8ad73",
      "txHash": "0x8cb95c7e4daf2d32414a036ff55a1dea94e247f0751fc948ba5611ef00c88ed6",
      "kind": "uups"
    },
    {
      "address": "0xeC7774b47B61295e93f9A5Ff60C99C7a575a1a18",
      "txHash": "0xd078e11c1b79598184ca9e3223a1f391e09e433c57ca909a9794515dfdcb4f1e",
      "kind": "uups"
    },
    {
      "address": "0x0B1Ce637Dc9aD1736E3DE2502eAAb838a5e99110",
      "txHash": "0xfe001136860fe4b10fd161f7c75991301edb68026434ab6b1a93f6960902aaac",
      "kind": "uups"
    },
    {
      "address": "0xD8e4121DF0BB5A64267ab674259A23E05479D7fE",
      "txHash": "0xe9408afccb71aed9b4acff4e228d1f8893010aae9c3d4c8f6e356d0574bc51f0",
      "kind": "uups"
    },
    {
      "address": "0xD5D30c93FC05487f6F3d9C38a0F76a7e53E1b2E7",
      "txHash": "0xa0bd66842683f3827f1ec0041a6cf35df70dfcd5b31a83ed3de2788368766593",
      "kind": "uups"
    },
    {
      "address": "0x473D083887CB02aCF1e250F80DfD1375dD731Cc7",
      "txHash": "0x4213803277133ff67725b94b7d533e28c0dee61c7d3724385d97b9490fc00396",
      "kind": "uups"
    },
    {
      "address": "0xD58465C71976C5FFA4C063c8Fa2ffff6108e1Bf9",
      "txHash": "0x69b45d740ac10d9b6631d24bdea537aa4ce2a540bdfb63a7897c028f491087a4",
      "kind": "uups"
    },
    {
      "address": "0x5B20BA46c6247b9adf34534Be05421194Fdc982c",
      "txHash": "0x947b0185aa6a7ee7459ee7af3497fca4e9ca46d9db8b0cfbca5c793aa5255856",
      "kind": "uups"
    },
    {
      "address": "0xC49197427411D74590ffb3914049Db87F0AD18b0",
      "txHash": "0x28e45e1a2fd2827011ea7492724360315a6f3911b63e0ba34f94d60fabf4d77a",
      "kind": "uups"
    },
    {
      "address": "0x57C2eb0D6a8bA54f6DF9F4fE9f1125da247AFe3F",
      "txHash": "0xf176d8bc2608a24fdbcb504b864f545d5fa94e83a72e96b8970252645710ef64",
      "kind": "uups"
    },
    {
      "address": "0x28dA5d519f5064609f38Ca208716c35eaAe1eBB1",
      "txHash": "0x65141b78a7f2f0bec05cf091119567fbdd1f54cfa5c25adbb5c7553d991d1420",
      "kind": "uups"
    },
    {
      "address": "0xf145D4a9E6fD7CE25155BD522Cb74a8014De9585",
      "txHash": "0x1aea8bfafacf30d7bb9a41a00d4f47ad064bced0d6842339b9a7bb07da6e5d74",
      "kind": "uups"
    },
    {
      "address": "0x58Af42D76860380A8809604F135eA2c0A94c068E",
      "txHash": "0x775b727ee0899d736268940892d938b994bf8cfe7a37f61677e32c91ed3e5234",
      "kind": "uups"
    },
    {
      "address": "0x77F8e8061E7b00F4Eb85742be975067f5f821d99",
      "txHash": "0x78ca50adba2541fcc793fb9bb6f32e9c1b82b42e31a7aaaec82d4295f5ba302f",
      "kind": "uups"
    },
    {
      "address": "0x33893C0517Ab9a3C7876E24D942f630D5CfC1cf3",
      "txHash": "0x1a2dfcd251fd5a59b4528de62cba57b1a61e8498f93304a5453241b93d45cc36",
      "kind": "uups"
    },
    {
      "address": "0xd890b05fd59d8388133cb20a4B193A2D235C14d2",
      "txHash": "0x95b09a121ea19803e6fe9bb706c7d33f07f0669e92e68ad440a307c0793ab979",
      "kind": "uups"
    },
    {
      "address": "0x771D85788857569cE04d9c58eF46fdf8435Ff19F",
      "txHash": "0xdfffa0367d3d9d04c11140a8f59464c83c94db1a741cff5685a7a077186ad0fd",
      "kind": "uups"
    },
    {
      "address": "0x2a7008B4a4AfD5Cebc42C695e57a4013ecEC8Ff0",
      "txHash": "0x284f643542436c5470a4ce57d83699f48b02146ed537573061ae8a93eaee416d",
      "kind": "uups"
    },
    {
      "address": "0x1DCDbf46BAA31D5eCa56c3D41E6E2AE8f0Fac3eb",
      "txHash": "0xd6f32b97097d9471e76aa0ce8cdfffd7b28856c3bef72d2bcffc4a9fe0b42152",
      "kind": "uups"
    },
    {
      "address": "0x9D5929A936F976956566E0C2F22338781Dc73904",
      "txHash": "0x5aba792e852e522ae9f2c8ad85c7f3ff6bc7c8a4f32ecab50571929f26a117d2",
      "kind": "uups"
    },
    {
      "address": "0xD1f8AF6e38978bcC7d72A8111b45A8A7e1a7AFA5",
      "txHash": "0x5b75f1822e75b169574a8bfa84e769a9f48c3f79bcd2e9fa2600ed88af778e81",
      "kind": "uups"
    },
    {
      "address": "0xb4181Ee2BA7274cFE270db88C2719a83215F0A39",
      "txHash": "0x29fb90b78f706c5c778ff8426a3e98634afa0cd266dc236059e3368f03040450",
      "kind": "uups"
    },
    {
      "address": "0xDBa435a60d8A29ae9aC5AF84515f25F959024c6F",
      "txHash": "0x942b9a973cee448585d1ab6d5d8f7d5e097fd6808b33b90e10c09ef4b2ce5f4a",
      "kind": "uups"
    },
    {
      "address": "0x65e9ABF9A2ce456b9c85b55be3Fd53e1C2832B79",
      "txHash": "0x1668552cbb7b4ae2e3eb53e1c5a268f11ff040eedf0c25f1b12e6f7bf7e69d7b",
      "kind": "uups"
    },
    {
      "address": "0xE309bBF15f8a6B776E6246a71ddCddD80bF9CBBe",
      "txHash": "0x4c025f251bd2834289aa7115928bed1ea3bce97956a19562459180273fe67200",
      "kind": "uups"
    },
    {
      "address": "0xc4411E589cDBBaD18d898937CF811709746444A8",
      "txHash": "0x6694ca79a71433de7f2ad108a8e8fc4a25655290fe59f765ccbc9b473063e84e",
      "kind": "uups"
    },
    {
      "address": "0x138054Fe13cf29c40adE9BD6b9b184141958A6D4",
      "txHash": "0xfa9a3e719d05adcf68b65d664f7882675076d662b2146243518a5b7ced4ce9a0",
      "kind": "uups"
    },
    {
      "address": "0x8d38DF0c05F4DD448Dc5066f12Add9dbcd4357E9",
      "txHash": "0xb4f64aac0de9f3e35de9c1e25b0fafe28f807550bf008a0d6d336120ce3a0122",
      "kind": "uups"
    },
    {
      "address": "0x2fE40E7421C35f149462E7ce9fcE12A6B2f2a313",
      "txHash": "0xcebe620f66a9f31087c0ff7095b3cde34c87ffc359d009ee477b36e3903d217b",
      "kind": "uups"
    },
    {
      "address": "0x13AEeD5fc9b953103F324E5c1942Cb642fAeA8AF",
      "txHash": "0xd6130802a4708aa378ae3cba6754e5b7093275cc01d614ac58612d9d59443abf",
      "kind": "uups"
    },
    {
      "address": "0x1D5D2a044841326f9cc582f596C7032d555eb1D5",
      "txHash": "0x6e6ba5208e71e78c31f326df6b9eba05eccc00417a30423137620198d64abafc",
      "kind": "uups"
    },
    {
      "address": "0x6eF4ecf3448d68730BE8f1797Ff1EA7cAd701CC9",
      "txHash": "0xaca5b9e40cfe5113c9eaf1423bfc8daff7f7fe092d41b72df0d0bdf87bdde1a0",
      "kind": "uups"
    },
    {
      "address": "0x3827c78E9974BcBcaEd5B11666b520C5b3aa20D2",
      "txHash": "0x8eb76bb5c191fd93d0ebb3501d552773a7e99c5456a1597c845a3bd57b53ae3d",
      "kind": "uups"
    },
    {
      "address": "0x3009941240e1cBB44c41610fcDFd45fe884bB337",
      "txHash": "0x6cc5ce3c5c9fdb6a658059db37b4a58bfe2dfea4b45045923be26130086fc300",
      "kind": "uups"
    },
    {
      "address": "0xF75D430347F8991e3b2E6d9E1BE597D9334b6079",
      "txHash": "0xc84549129318da16e630b04d6f5212c86309ba3c78a2734e4eb1ebec71869b19",
      "kind": "uups"
    },
    {
      "address": "0x3B266370d7a7401c0EBCBbfFEfBa618EC50C1008",
      "txHash": "0xa8582ce83f8ecb93bf986c148a553f9e4b96a195393df69651d593cfaefcc531",
      "kind": "uups"
    },
    {
      "address": "0x4b55c695716C799fd1eC271969632Dd3B3d8bf32",
      "txHash": "0x8bd38e95d82ba1df2c0fe78909eb83149192d7b7ef93ec565cf7c8cae8b6bc67",
      "kind": "uups"
    },
    {
      "address": "0x857f841F2c633430a42EE6ACe2c8bD3d3b7d51Bc",
      "txHash": "0x970e06173523c8af2c3e39926d2c102b810b745c488d46e53b99cde0fa13ea81",
      "kind": "uups"
    },
    {
      "address": "0x8DB073812775f860495b02d8afba0a3f52354c11",
      "txHash": "0xe9b7fd7636d1844ba855e475d54fb0c6c7e0bf14d68606406a6b898766c39b10",
      "kind": "uups"
    },
    {
      "address": "0x7ff163E935aeA6587b82e641A53F4A21B6b797Ab",
      "txHash": "0x1beb44d5e413f46ed668a16197f6421fd381c92b80e616001fef1430a06da613",
      "kind": "uups"
    },
    {
      "address": "0x979081226940d873bcC3950D062C788229Cb2B0b",
      "txHash": "0x27137636ff022c013d5283dc05d94f05899fe8f283e6b50bd69ffb9aa21601ea",
      "kind": "uups"
    },
    {
      "address": "0xD96Fa7BdCA4B34Db84b012e84acC38A25988d55f",
      "txHash": "0x07f2eca47bcc32409cc4c0e8fa63e688bdbbd07c7d892ea9e97b0403ea8adae4",
      "kind": "uups"
    },
    {
      "address": "0x8C3582f9F379395198451FD34ECbffA160D3F928",
      "txHash": "0x634d7fc877bc7d2a831448eff025b0ec7de0de3e8d4cf6c22142ec60ddc4354a",
      "kind": "uups"
    },
    {
      "address": "0xf436B24C65960762a0D4F3323C8f8908a21EE95F",
      "txHash": "0xe3030ac776537de6a1be9eb6b30884e29492d645e4c07d58989f484cfad14e0c",
      "kind": "uups"
    },
    {
      "address": "0xA77002bCA337C2dc7a94394c182a48b061a700ba",
      "txHash": "0xbd6a1aa9940653ad02739086d43ed06682fa3e3946694b2f134c3bf27cd5cea0",
      "kind": "uups"
    },
    {
      "address": "0x133F59D9642fd0c70825C8c0782823AB889C49ba",
      "txHash": "0x9def74992cbb5f9bdb31685dec7e5e9c7a9d8b7fb883525794c4221dbad63b69",
      "kind": "uups"
    },
    {
      "address": "0x854C134BC79D931DF43f093bD0A0024df3ef6C6D",
      "txHash": "0x5b3d19ce474f494123a19551daa5cf4bba5d6325b197dcf346639a223f9863ec",
      "kind": "uups"
    },
    {
      "address": "0x3DD9Bd30D831254F4d2b09d763251528CfdF80e6",
      "txHash": "0x6d324c5f12d4ed18f688fcc677334009bbbb01b5e51b9ab90ef23f6a16ae133b",
      "kind": "uups"
    },
    {
      "address": "0xb5ee7c1C1Cab5F722b371Dfe8956f58f39bC3364",
      "txHash": "0xf0e0492ab2fabd708181fd26c9e4ccd89a23dcde10e873891b19cf1bc01b34b7",
      "kind": "uups"
    },
    {
      "address": "0xD8865B7CC95515FcaF6C021dA2e437602f94cF34",
      "txHash": "0xe2fa841c51ad6b5485e71d02dcbc9641ee1421f201066aef7e39c0c5f68e60ed",
      "kind": "uups"
    },
    {
      "address": "0x4eFb026E857fF2da34d40cAf932d04593cDE0149",
      "txHash": "0xaf70e190db1cc46f5f1b1836358d0a2e248fdb8f7ee542a71f84da2a8938ab2f",
      "kind": "uups"
    },
    {
      "address": "0xC7F1886802D1455913f5A3E2663E1aC26E776F29",
      "txHash": "0x162d8ac19f99e1712d6b7248bb76f6cf200eb76648827030598afc678643cca7",
      "kind": "uups"
    },
    {
      "address": "0x3714e0129E422863Fd24555340d29eb2C4379f72",
      "txHash": "0xc93a6b67a955c7667594dc5fc079123938ea9f6f5da1cb9c63e7d2f2306ccae0",
      "kind": "uups"
    },
    {
      "address": "0x48206B69c1Cc78791dc51Ca09B9b6E806c76fe80",
      "txHash": "0xeb0e077ffbb81cfa2ad8e57a5c447cadc64f698bfc9ca26d070a505af0a71dba",
      "kind": "uups"
    },
    {
      "address": "0xd5c308dBC7F129D8368d6099731420080aedF5f3",
      "txHash": "0x9f180c33caf5cee9b6e1f373c60acb96478db9b4c89116da3f588e896e7f198e",
      "kind": "uups"
    },
    {
      "address": "0xed91e0C49232b98916674a29E52555a1d54dc713",
      "txHash": "0xea285855c4e43bb70a2769bce20ff27ce2a9138815461917cf32c9dcf06e0a94",
      "kind": "uups"
    },
    {
      "address": "0xA12f5C2246Cd83C2662a6f53C882576F4eD6fc1D",
      "txHash": "0x36e43185d6f4f7c0a02abb5e04c068831566b8bece8328b1fea5ba16216cc7ab",
      "kind": "uups"
    },
    {
      "address": "0x0B371fE089bBB0aad1347af3A4370ae709d65FC1",
      "txHash": "0xc4e173d302613538888ab7a41360d3e514bf835618776fd6db4624ea5117d52c",
      "kind": "uups"
    },
    {
      "address": "0x2Bae3adf743Ddd168f527824A27D11524e584cF2",
      "txHash": "0x808748b2bb8d618fcb867239f790cebd0741528d919fc195b9aada829eb542f5",
      "kind": "uups"
    },
    {
      "address": "0xCc0FBA8765C44c0248c8C9Ac695251ab08Cda813",
      "txHash": "0x5fe60f60c3d5b1a261f5b16b89750b0cfedae28e0eab8ed9a1670358c07a312d",
      "kind": "uups"
    },
    {
      "address": "0x132cc496cf89e6cD53B0d9575453D26b81D13673",
      "txHash": "0x0adb627320609db8006f80da97a8d7a4be8c9cf06ea9f06f2f5da2937df8bd55",
      "kind": "uups"
    },
    {
      "address": "0xDbF11ef85B833E9896636203B4b5e91a42CEb6E0",
      "txHash": "0x816abc769af4f82c341309417858b97ab1a1bc151e7e9cbcddf2a75805ba408d",
      "kind": "uups"
    },
    {
      "address": "0xbB74770c85F7Eb1394eD360E1D681Bf4f73e836B",
      "txHash": "0x123623fd0b5c896e9dd381612e4e228a592a26bf83296563f460ad13d713c034",
      "kind": "uups"
    },
    {
      "address": "0x4A862e325594277f9818dDD856A6cff5320Ca7c1",
      "txHash": "0xd44d4a6da644ed8f627ed8c7bcfb6a4e11e083b267f1e3e61c1be9ef47858b27",
      "kind": "uups"
    },
    {
      "address": "0x7762f8feF1BAa334C6640C74DBd97270b45e75C4",
      "txHash": "0x39702c9515856f3aafdf10d5aefa2a506daa56f17834b0c85d16f580b5e29e33",
      "kind": "uups"
    },
    {
      "address": "0x6DBe2127B260e3C29a3171C2CBEfC182fdFC1f85",
      "txHash": "0x3da5bfe0360c5b638171ca19ad9e2867811f57180bd5b64a441109a98955545b",
      "kind": "uups"
    },
    {
      "address": "0xE3C59f4C4826416f393A55EA137cd3f3bE3379a4",
      "txHash": "0xe815aa782987a2fd0d124dc2f21d75ad5b5417c6077e563ff65a35abc00408bc",
      "kind": "uups"
    },
    {
      "address": "0x716e1A77f4dA1BC0B588ceE0E4008CE4bF75cFFa",
      "txHash": "0x83ba569c561c638bb714d197192093f49767fc78971116ea99c8781d2b0c06dd",
      "kind": "uups"
    },
    {
      "address": "0x8F7447E97AdD8FEE1793DaB6A71E9c385Dd79818",
      "txHash": "0x3f53f40b3b77bc480c37c47b0828abbbe3bc3b3b35c76024a8613d99c3bf21c7",
      "kind": "uups"
    },
    {
      "address": "0xF5357BCC92F75208c11Ff43b25Dc430B3D1582CD",
      "txHash": "0x9daa146f3dcd58a92df6ffc2bda866668a4b6fbcc92ecc2b86cd9ff9fdb459eb",
      "kind": "uups"
    },
    {
      "address": "0x9b409487E7463E220CC6740e4381069D5904E79B",
      "txHash": "0x388d873c86193f3ae084065ea2b577c6efbd2016e29165f5a067d40092804696",
      "kind": "uups"
    },
    {
      "address": "0x9D56e2579D6ab746AbbC5c1291Bba4e425f976BE",
      "txHash": "0xb8859b925d2b588c3d01c240643639ff587aa6ed07f44115c3e4d259fa62f0e7",
      "kind": "uups"
    },
    {
      "address": "0x4F582227F034680881c3eBf7dE517a711692f776",
      "txHash": "0x00eaa595ffdace082d3bc7da20910bab29e9f0853c542e459994c0328ce78c39",
      "kind": "uups"
    },
    {
      "address": "0xb36c72052dD51e87E8447B8029Be54009833fa26",
      "txHash": "0xda7e39decd76b5d7512303be4b11c333e8c159f3e2d955f366605d229104a75d",
      "kind": "uups"
    },
    {
      "address": "0xFbec044acaDE31E39D6cdB5C6A06AdfAFB276e3B",
      "txHash": "0x2bb98075e2d9f38cbe8e3b1e0dae1134ba36ae367439743b59fa060b0054e0e8",
      "kind": "uups"
    },
    {
      "address": "0xc62EC4c953505Fd40cc8FF92BF10f8Cf083465dD",
      "txHash": "0x481902cbd36df5549c47be7ed899f872ece5c074ebafa4f4fbcdcfd6bdc240b8",
      "kind": "uups"
    },
    {
      "address": "0xAF94455ece7453eD1D201774f7f232462F26Cdb7",
      "txHash": "0xd93f301e2abf27a3899e000db7d127abe3d6cfa23b7a962d594b9b81e1236335",
      "kind": "uups"
    },
    {
      "address": "0x4E34E65a7918aDd9343A47642E3e84F8c1d3FC99",
      "txHash": "0x3ed0600781cad51d3ce6c7970d455649bec6613463dab26d5056f47634f76a05",
      "kind": "uups"
    },
    {
      "address": "0x796e58114b4CB219C55534ecDbdF2D9AE4AAa05b",
      "txHash": "0x122dbc12b12de1bba0c0bc9d4889d9220464cf2c2ea08379cf9d32f14addf3cc",
      "kind": "uups"
    },
    {
      "address": "0xba1D4Ea2adaB13BFa2829936099fC7Bab5725894",
      "txHash": "0x32933c4525b6f59a913879fc3f9eb30e3288fb154984cd7b409769171bc415d0",
      "kind": "uups"
    },
    {
      "address": "0x0e02c447970D8bb0360aEe6925C8640bAA8dA345",
      "txHash": "0x722e93ab4d3ce4727a2439e92a7722e4dfaa71efdb4e76ff96237025a232a49c",
      "kind": "uups"
    },
    {
      "address": "0x407Ed5EB21bCD374B98BcB1EfC1b88a73258DD6B",
      "txHash": "0x47858f8c8c256360b860b982ba43dd98b01a3f79a100facb252005d0adfda0f7",
      "kind": "uups"
    },
    {
      "address": "0x7615ffA8a1cC00F52d7BbDbB430D174042F53679",
      "txHash": "0x354db2c01610d72161e1614b74d35adfb78e5408855a7e176532cb37845bb043",
      "kind": "uups"
    },
    {
      "address": "0x0fE6bA512B9dEfC22c776F1d7923ED61B321aAE2",
      "txHash": "0x9fa8854df4ab4c8c90f2e2a14f0f009097e022aeeb7089fcb76a50f31806a076",
      "kind": "uups"
    },
    {
      "address": "0xece232f4d0c454f5Da8B30DCfA71fc465d45858F",
      "txHash": "0x4fc0b027687adb51ea794247778eb305bbd566fac25f6c6fabd6854f42e543e6",
      "kind": "uups"
    },
    {
      "address": "0xfC32bcbd8f95F45718F2772c498DDE27F24152dF",
      "txHash": "0xceea3aeb67ec5b00e956f33cac2efc6587f8ef307f873fbd4f69d93d21c27511",
      "kind": "uups"
    },
    {
      "address": "0xd9B99654A9f612AE03Cb8B9373C7BAf15b87ca30",
      "txHash": "0x0129c527d56303a4e1dc91cd446ac6d4d3f2d3fa25368c69bbb7d0539bbed184",
      "kind": "uups"
    },
    {
      "address": "0x46f6775e5195a308F5891C8B3582DD45F1Fedf65",
      "txHash": "0xb0d379c30c5a9cbb94931838520712d8679c41e284cd64e07fcc04b3a7cf86a0",
      "kind": "uups"
    },
    {
      "address": "0xD84bF650919f36b5211006FcFaaca4F63a5Ad8A8",
      "txHash": "0x1f4fbbe326c53d0e1c3b7ff0bcc698581e34f8ededa2c53f6c61f8ee18d67d32",
      "kind": "uups"
    },
    {
      "address": "0x5242aCefF9e3DcC1Bb6063Fa8C85dA526797d104",
      "txHash": "0x02a1af30a6ee918f555bb746f281ca5135c5ad0e5d54e53c9ad5f54e7112af09",
      "kind": "uups"
    },
    {
      "address": "0x155E2029a0d22d68Af6EaA31Bbd9c4768559721A",
      "txHash": "0x0d1cf73c73c29ede80e13c6751a5a9d675cbdfff9519a413bee0a1365a72651a",
      "kind": "uups"
    },
    {
      "address": "0x40167d6aaB9a160F5A71DA6b5008BfE3C0DAA4EA",
      "txHash": "0x086aa94e0d1e548199f09e1c605673f8967436311fb1fdd47e908cb6841e3bcb",
      "kind": "uups"
    },
    {
      "address": "0x40413e740190D1443183b092E44Ce01C26fEA5Bd",
      "txHash": "0xc78e1cf1c2d9f121dec5db56c849a0168c1c36ad108ec8faeacaed6e1990e046",
      "kind": "uups"
    },
    {
      "address": "0x415Fbb13d2A9eE7FF07A549d2eF802CF16D58dA8",
      "txHash": "0xe8e72f6a72341a051bb2b6b3880a829ce52313a4440866fd3df2dad6f39f7e11",
      "kind": "uups"
    },
    {
      "address": "0xc243Af15830625fee09d35deB388B0D1a725F993",
      "txHash": "0x7e3c20fe7689a18937ae6a2970bac129e2d026c4796cbdbee6ce0d2713fd1e89",
      "kind": "uups"
    },
    {
      "address": "0x685877BE62Cf0AC948f5A62830ef3b3899fF3360",
      "txHash": "0xf6a4af29b8461372cb870ba531d50b9bbb2684df349d1748a176f29222bf7531",
      "kind": "uups"
    },
    {
      "address": "0x625fD17727C1Dc9dc3Eb5fF147593552Af7060e2",
      "txHash": "0xf2180a2e69c86b07f6a7631e954053bbe4ca37a24f30febb460ad36efefe5c65",
      "kind": "uups"
    },
    {
      "address": "0x526aD2987505B90C1882627F57745eDC661d0DBc",
      "txHash": "0x823745ce432f6e4afbe149998e79e806d19d2f84ecc82911d8bc3119df446f68",
      "kind": "uups"
    },
    {
      "address": "0x5E49b42169c99c3C8522cf1786833BEF33504dab",
      "txHash": "0x6240bb0579ab4d97bdb8d2366661f1cb3cc9c4c485e57d3d5cf746b3f996a389",
      "kind": "uups"
    },
    {
      "address": "0xeC7f5eb8Ca1568e9c64BC1978e72222d225349F4",
      "txHash": "0xe7965a07bd22687cce2217c0a28668523a799097ca92863e517d4f98624c20d7",
      "kind": "uups"
    },
    {
      "address": "0x84811D774b269A0e5A8A12ECE4957544D0d85dbf",
      "txHash": "0xe0fd8d06fd2d6b4d55dc9e1384f808a6d187723344e0d804febefce4a8f7802c",
      "kind": "uups"
    },
    {
      "address": "0x891cb31c9a8d2ab46bE2CdF7AcB23A4F080bE09F",
      "txHash": "0xd51ae7c8650054080df0134f9fb72d8ba205e82fd4c5188f3e58768a1c83e29f",
      "kind": "uups"
    },
    {
      "address": "0xcc6a97967bc94E53d0EcE6bC3947f518717d5ae6",
      "txHash": "0x3ce7a6377034aea7e58a646ff57820025e8930ba10a8aafa3de6ac67a216e05b",
      "kind": "uups"
    },
    {
      "address": "0xEfEac35B68339625BeF1051Bb5e3DD5F548937fe",
      "txHash": "0x165abca6c148c5ea7bf556718bedd81a92975097e131154008e81fddab68d69b",
      "kind": "uups"
    },
    {
      "address": "0xB18a25Cd25A9B4454E456e610161578f18333FC2",
      "txHash": "0x69a4cf89e7387a577ae7009048adeb9363e59b03ff0e3aa1b7239c35d338a673",
      "kind": "uups"
    },
    {
      "address": "0x373973c02944884dD0Ef13d9260D129566fC69cE",
      "txHash": "0x4a4919701cf965b5654dc416493e9718e853fdf503d57c03795f456cc4d9bb93",
      "kind": "uups"
    },
    {
      "address": "0x2ab2CE22400E5b8E8df09187ECe809231175D98c",
      "txHash": "0x1706edf5de2efcb394c2dcc96bace5e6960719de8de896222ccf6f760a9ebab9",
      "kind": "uups"
    },
    {
      "address": "0x1d79A76a95597654D5d7B5Cbb697bD4786D2b58b",
      "txHash": "0xf990c92a39b1dd64aaf8c3ac256254509fbbb88fa5d02c5628c148d2150ed5e5",
      "kind": "uups"
    },
    {
      "address": "0x8502FDb6568aD351030Ab205aC1F972185C93cca",
      "txHash": "0x5615afedc94bbff994ec427dcfd9e5a1038f9e5e8b30018e853868b5b590708c",
      "kind": "uups"
    },
    {
      "address": "0x9f7Fd0de3f277f01c8409f50909b2C5CC98c191b",
      "txHash": "0xdf3b7746de84adfd26061f4fa74f307d3e2e620465557cb8316486ecaa179f7d",
      "kind": "uups"
    },
    {
      "address": "0xc7162C037c816187CBaAF653AC4277A868ba35e0",
      "txHash": "0x1ef1f3cbe25189b2bf33b50a776a3224d34258c429d744e229e44a66e200ee95",
      "kind": "uups"
    },
    {
      "address": "0x80811cC2D567C37e0070A1Cc7FA4162D196B9DB8",
      "txHash": "0x26f9432c73bffa2f772c06a379460a9e77112f72da8284b105abc7e03aff29f2",
      "kind": "uups"
    },
    {
      "address": "0x83764d53b5D828D2B68Fee651A8de34bcDa2D37a",
      "txHash": "0xac770245b7bcc26511ab7475c1af237bf746ae31ce8ae90b48acf8999f2c7d0d",
      "kind": "uups"
    },
    {
      "address": "0x2A65f1acCe0302c88e617ad80d36a8E2e168D02e",
      "txHash": "0xd7ccd441665f37b6d2aaa66695c3bde484c9cdb3e496124c98b98b47108cf850",
      "kind": "uups"
    },
    {
      "address": "0x00eCE49a689bfA733d8463010F7Deb1663223E3C",
      "txHash": "0x434c31be5c2145a963deb02dab25e1a7ba9bad2508ed51eb62862b634f9fa122",
      "kind": "uups"
    },
    {
      "address": "0xBeD28aA7448F4EAcC5E4D922c3c67186F95D5933",
      "txHash": "0xf7f079186dd7ff80d437f284f243a47b393b1cc3ce23f0321b42622ad4212901",
      "kind": "uups"
    },
    {
      "address": "0xa4E0572eDf11AFCcCa4510f039Aa5eA001328FdA",
      "txHash": "0xe93ceaa30f5ccdb490c40cddd6c3e2c604ecc351642bd54c775790ea4095d9ab",
      "kind": "uups"
    },
    {
      "address": "0x540Fc68C687367893cb31e8B8e803ABB52501D71",
      "txHash": "0x8391ed64e56f20b147f684176f1cae4768e49cf3b0030b287d6bb3a983d37183",
      "kind": "uups"
    },
    {
      "address": "0xBC06F2e65812eCCc52b66FF4249BDc35606d085A",
      "txHash": "0x23c9014a56af23fe9496b8132796167c3adfbc327f3a12c777bf257e23319291",
      "kind": "uups"
    },
    {
      "address": "0xcf8dB11CEB37C991201742047EE0Ba60D109c7A1",
      "txHash": "0x3f6143fe0cc474add24a4ca000acf387a14ed3e8f24d64b138341ac643b94e1c",
      "kind": "uups"
    },
    {
      "address": "0x78E8f7A9167DFafEA82dD3E5C984E9Cba8d1A4D4",
      "txHash": "0xd0bcca2edcc9e674f59316d6c1bad40f18e6d1cfad2826aebadf3c5f46b4986a",
      "kind": "uups"
    },
    {
      "address": "0xEdc346C1Ddc9Ec012b8FA634578ad97337EfB0E8",
      "txHash": "0x56c97e036e4fe8c779feccde3cd80b1ec9f514b6e653f3c2c98d5f5131885e3e",
      "kind": "uups"
    },
    {
      "address": "0x1180387025a1e831539e6941282b408D2757744D",
      "txHash": "0x60101055c3b755b4f3baaa0f70414023acc42f182edb73a51813eefa4b1d0623",
      "kind": "uups"
    },
    {
      "address": "0x1Ed844d32088440b3B61BDfc65Cd59da9b0Ac3fB",
      "txHash": "0x6d85cdbec51c5e1ce0eb6a1f5a2912c4b3438ac7e63ce4934b0c47eb389499a9",
      "kind": "uups"
    },
    {
      "address": "0xe10063b15E5BcBff54c3aD26a71363609F0688D7",
      "txHash": "0xbccea6534d8f2694316bbf0d06ed381fa6dfb6d1a94987f202b8ba9274274b35",
      "kind": "uups"
    },
    {
      "address": "0xC56E5eC31f2951d23f9d5F26AE1BF7d8E8C2fE46",
      "txHash": "0x0b4f5d23ffa526e51137d04dff40bb3afc4495798ee49de87d3896e15ebd38dd",
      "kind": "uups"
    },
    {
      "address": "0xF12c342E77bDBd21B4fA7a0bf32ba231E2317b49",
      "txHash": "0x0a07cae621a8ac15b1cd902d0bbd6662946d735208adcb4024e00517fdd97d29",
      "kind": "uups"
    },
    {
      "address": "0x45ebb594BEF7b6f4F9E0eFE5A6F4b8ba837aE60a",
      "txHash": "0x69bf338be5b6c6d052c5b031b197bef744de9aaed70d4b60fa1a72718d20f286",
      "kind": "uups"
    },
    {
      "address": "0xba6AFb78D3b586ff1b8A5a7F5817a6a4036A5f8D",
      "txHash": "0xbc3ac24898b3cc9a60d50b274f47db8f9f0df5747a46f494ff9e7536d64d319b",
      "kind": "uups"
    },
    {
      "address": "0xf0fe0Bf23174925dBB14f1A71047d330fA903CEe",
      "txHash": "0xe8e9b22502e11b8d3ec88b8773f4cea49a6051896c70614b2a058bf6d237b19c",
      "kind": "uups"
    },
    {
      "address": "0xf9ef207F5B597535F8e415D49275108Af8FDc073",
      "txHash": "0xd233d6851ac5e4e2874ba8c582113103263576d0aa638f7280fe899fcd8a4fb9",
      "kind": "uups"
    },
    {
      "address": "0x2FaB410b1E02537d4ADFB41c8870c040b268e682",
      "txHash": "0x171d0b5983bd825114d9e10bcca3cabc098d6dda354f00fa39398a2116f86d62",
      "kind": "uups"
    },
    {
      "address": "0x89cCA7C9646a291c5dE63E510486B7151F6EA97f",
      "txHash": "0x5506212905ca9221aeced533c92d8e8093b43e744dfa7f85112504b1054586a6",
      "kind": "uups"
    },
    {
      "address": "0x1c298bE107B6867C1289fd3769BeB4912709B93a",
      "txHash": "0xebd4e9c88cae6dded7839965fd5de4817ff7e16175f029c2ea2c701eddb6320a",
      "kind": "uups"
    },
    {
      "address": "0x09A633aff443B5BC557b41e5bA45a0Bc3e336EF1",
      "txHash": "0x0cb8fae6f988692e6455a12e1a433018b38f406bad7005889c74fd89042038cd",
      "kind": "uups"
    },
    {
      "address": "0x7e4AF660E9aF57a0Df90Ee076104bE77Acad6785",
      "txHash": "0x8f123681e5ca13c3fc5b593e5f4a4e4ba16009d31e964ca7cc13b6a261efba3b",
      "kind": "uups"
    },
    {
      "address": "0xa9088A8c37bd140901572bF355d1D9272Fa8E664",
      "txHash": "0x87e446e0edb5f75691914a82e4a32f2d9c8d1e8afbeb2de6d335341d30daba43",
      "kind": "uups"
    },
    {
      "address": "0x8401a5DC6bB074318D6CEEf7d195b4B74f392eb9",
      "txHash": "0x31d97a0af070f8c54ab1ca26e7cafb8056778a02162b06e1b28379bd31b6b2b0",
      "kind": "uups"
    },
    {
      "address": "0xF693561E320ad989Cd3B9730605CA64d01b57f18",
      "txHash": "0xcb6ded290244b9bdfda8696350a51a5d5b2351e2dde1485c8d232acbf82b1b9c",
      "kind": "uups"
    },
    {
      "address": "0x052d033FdaeF79760Ca6Af43dF260A6f867941f9",
      "txHash": "0x71da22cd4e61f41724e61b76563e934f712c8ee9d7a34a0f0e84b37974533031",
      "kind": "uups"
    },
    {
      "address": "0x25Aad2f30e38bDcF4Aa3c4635a10ea4c9af6aB44",
      "txHash": "0x68819aa09b31ef0129973a2d4ea1da60a38c38781b23310b1ea58be9226c9030",
      "kind": "uups"
    },
    {
      "address": "0x36a5c71fEB4ACa7231e83B0D61c14A98161730A4",
      "txHash": "0x2d67be593f3ac7030814a4977ad00c0789c3e90eb4b44b61620fe04966cba358",
      "kind": "uups"
    },
    {
      "address": "0xFb0d63FB5e38Fb3434718D0E2CccD1485a47a658",
      "txHash": "0x13e5f2d132ed1b585f5915b7a6aea9cd366af0bee25ff4ab5ff5e1a7e3ffd3ea",
      "kind": "uups"
    },
    {
      "address": "0x2Ad7bd107A1dFAF57E5CFc1aD1F68D080F3C366F",
      "txHash": "0xcf3d5afc0ece1cb4e7d5a09ba02305d6df63a477314e4b2a672137c43c9f1b9a",
      "kind": "uups"
    },
    {
      "address": "0x8F4DA396e01003137aC19019c0429B5f7D5E27e2",
      "txHash": "0x453e84cf33cf88828c03d36c8ec4c03b82dc72c90a57146d896ca1c75bbd4846",
      "kind": "uups"
    },
    {
      "address": "0x58f28898d277Bff5f9A70EE43dDF57565D89F4e7",
      "txHash": "0x266ecef0d5a67eb154325cecedba706e6178f0e431a4960d22f339b61b2e25c2",
      "kind": "uups"
    },
    {
      "address": "0xC697F6EAb181b177Db8F4bd82c1A6A14cAa9E16f",
      "txHash": "0x9798762c83a0777a5ee5530da2a6898488d15a1ac141530c4e7f1fc7582331e2",
      "kind": "uups"
    },
    {
      "address": "0xeD43de95B6e7A9b9134e3DA70599E5abcCf1Ee85",
      "txHash": "0x85fa21a86e6cab67d31633137affd6d5e5fc28716e42566d776c4bcd30313a11",
      "kind": "uups"
    },
    {
      "address": "0x2c98F48d7914AB83cace2460eBc2D716AC301c6f",
      "txHash": "0xc7e5053edba7971f92d989ee523095e8299f5f6eedac609c16a14b747a81a85d",
      "kind": "uups"
    },
    {
      "address": "0xfc7D46a4E0715D0637d95533eAd5a065d86aDff7",
      "txHash": "0x23db743638283b44cb01a6cc5e8e178b69cdf3b86547d29a8af706a3f3592fb6",
      "kind": "uups"
    },
    {
      "address": "0x72edad6FB25231f3deed9feFF1C97B65Fe3bC994",
      "txHash": "0x494683f3b782c4295fcbf973649aeaedf6d586f38d40cc2e0cbe0c4486b4d452",
      "kind": "uups"
    },
    {
      "address": "0x1fa744Ee36a4f60F6CB795BC27a3c51Edb78a886",
      "txHash": "0xecd8b092565bae0955fd5d50d406b9fb2d6fb0d9b1fff4fe5cc7873f3dd69733",
      "kind": "uups"
    },
    {
      "address": "0xB29E292cC483304fF6509b4C9472c265e0Bcd9cD",
      "txHash": "0x42129dd2bdecb14f15a9ad7a083f1b1126372754e6488f11881a6307bc9fc6d3",
      "kind": "uups"
    },
    {
      "address": "0xb7055c03fdA70B1bFCd4Cf692BC08E9B596EA55B",
      "txHash": "0xb517dca1b5bcce9496f93477b3f750b29a38332a278baf74cfd3ed6f328f45d9",
      "kind": "uups"
    },
    {
      "address": "0x941e4B8e541B87F8e9787C797E9E22C81c88F5cc",
      "txHash": "0x12754a76b449a673349634fcc5bfa86ff4fdabf4c9fa6afb5141e805b144c4ef",
      "kind": "uups"
    },
    {
      "address": "0x57d6b35dFC866dB87431b55f6321bED9C491d81e",
      "txHash": "0x76ee31280e38554523e905572868c980b719b464af2ace40cc58ff5433c985c9",
      "kind": "uups"
    },
    {
      "address": "0xbc7F312bfB52310905aD3a53E6A76EdE5D1b1d2E",
      "txHash": "0x3e67ec7710951ecc280ae75f1049c2d31b6f22d645c7b8653d774640fd477e43",
      "kind": "uups"
    },
    {
      "address": "0xf11Ec5CDe01AfDD3a57be4D6742cF86f653BD3B8",
      "txHash": "0xa3807aa9fbc2fc78f5f5ccea43b463da615983af9025a12ade865e9e6becc6f6",
      "kind": "uups"
    },
    {
      "address": "0xC51bB5AA9c93B289C80E3550D9bb836e6B4894C6",
      "txHash": "0x5a56c2c02fd68a6b56a381e4e5b8558e6ae60c13e5fecf7422b78478642ddce9",
      "kind": "uups"
    },
    {
      "address": "0x535Cc9346101CdFF4D7aa4e61d8F75bBE2F8258b",
      "txHash": "0xf8106165ba805be09b225bbe49831d27d80f054d707a9f3e386b5ddbf969eaee",
      "kind": "uups"
    },
    {
      "address": "0xb0381789fE55091792E28404AA0E07af3D482762",
      "txHash": "0x267cc296c2659d056d4c09bc7a47e6a0a51105449c93ff48e6641a81eaf5128e",
      "kind": "uups"
    },
    {
      "address": "0x6D0E18cc19f0814090EC6C2cc6a6E0d91e5AdB95",
      "txHash": "0xffadb6df0974b965a7e5ed7a9e9204cda80dc8eddb517bfe544a74612313755f",
      "kind": "uups"
    },
    {
      "address": "0xF9925aE9bE58Ba5127b35b38A85EB7A2Dba2077D",
      "txHash": "0xe4d83574ec0bc3bb6b288049566aaa2006657cdf92363a66a34dc12db0436150",
      "kind": "uups"
    },
    {
      "address": "0xF505B33A703D05792245eEF4d2f3374463c80D5C",
      "txHash": "0xdb19ddb80ae09c9ae4d553f7dd3841424458ced641788de2fe7a72d0d2817a7c",
      "kind": "uups"
    },
    {
      "address": "0xC66Ed70F2890E5C7A6b44FF987EA24e5572e570c",
      "txHash": "0x0a9845b8602a1365ee05ef045df83e97bf04a0239f3e78033bd07afe7bd1d94c",
      "kind": "uups"
    },
    {
      "address": "0xf592a8DB49bd45cE687284fe8AE24f9671D98E04",
      "txHash": "0x81f5ef59403a5a3f4d6cb0e080b82418e32c5c77152145b540f6aebd4a2f2ae6",
      "kind": "uups"
    },
    {
      "address": "0x724E83c770140927F356221fF16018Ef00B4B29f",
      "txHash": "0xb1f1638d2f032bd1ea20bbd194c00482da78dbc8005460d0dd1a919cbc3e468f",
      "kind": "uups"
    },
    {
      "address": "0xECCf9636Ea2745Ac00B604957D4722949c997389",
      "txHash": "0xcf95b8be22eda658d843eb695dd457468410424c3afa8fd12eea86dd46ea1632",
      "kind": "uups"
    },
    {
      "address": "0x3D409c1c42f2a97d0b2Ff487eAb316895835de15",
      "txHash": "0xf9a0a1e99c0630cff4dfd6f3f093649fba64eb8260c8a995c19b6b715ccd2eed",
      "kind": "uups"
    },
    {
      "address": "0x69c661B97a70e4780299d128880Fcd6027725A6B",
      "txHash": "0x6c4fcbced99eb4c0b4ecfbe7b512044b2c7808baf416de03f136338402cc91dd",
      "kind": "uups"
    },
    {
      "address": "0x8EC7A5d4F43C0680Aa181fA81C69cDc7De3CE52F",
      "txHash": "0x9632233fac05c22e4a518b43e81ef11d41390401952e9cf7d07b6c16d07f88ad",
      "kind": "uups"
    },
    {
      "address": "0x57718463CA9c31b5608023407688fdafd58B90E6",
      "txHash": "0x07abb49ab076b44b721830a6b80b73ba3d7b948e1b7658b991df18c1caef6bde",
      "kind": "uups"
    },
    {
      "address": "0xC4B8Ce4d238DC56f7ceB919a277aCde0f09d24a9",
      "txHash": "0x0a1a5fc6da5d047ead525a7a2d8671c2aae2274431442c83c30614f038d7b494",
      "kind": "uups"
    },
    {
      "address": "0xb8Da091CA500CeB65669a4Fa60f94b816ac25998",
      "txHash": "0x5cb01634c8862ba80db3a1687550f6372aa5a941435ad69f07d13347c8743fb5",
      "kind": "uups"
    },
    {
      "address": "0xECa0ddFC22fA33b5822a865f3f933957597c91D9",
      "txHash": "0x11303332dc78c969ca6da916bb92796bf18cdc2d56f744521bf6747e800a401f",
      "kind": "uups"
    },
    {
      "address": "0x829CEA5a61B2E431215458Bb23b7c6Eef87982Fd",
      "txHash": "0xd7117e4b17ba0910f554fcee6c61cf82e17c66fb84aaa0d28a79b2c417f8ce26",
      "kind": "uups"
    },
    {
      "address": "0x29D9b4FBD854131161967eB1F342a738869f03b6",
      "txHash": "0x63b2ab9b7359a1de1a88b7c96b38bab20930bb126050a73cdd03b6588d73f483",
      "kind": "uups"
    },
    {
      "address": "0x32a205BbDEE6E09857a88dd109A1E7466EF59119",
      "txHash": "0xe69a3d15706d8e4f57ef1c0f4d43c107229f02d4c8acebefbbf3dc1558f0d944",
      "kind": "uups"
    },
    {
      "address": "0x171E04807e0758D93EbB0Bb93714602B0a17f397",
      "txHash": "0x66cfd634806863b075631de9c134c37f6a3494eaa4fc2ded1520dc1b85820d7a",
      "kind": "uups"
    },
    {
      "address": "0xf2Ba4e10A61d02B62B40A0aA646F62e98D57f501",
      "txHash": "0x4abade1aebd80b277595aa9b0918ffaccae336222b68e0f08a27f12329c94f5c",
      "kind": "uups"
    },
    {
      "address": "0x7B2988b1be8d4bF3d54608D508076d10B02Bfe60",
      "txHash": "0x875b7147d0b33e18368444b0b223b404f9b912bdf32cf2c7247e75cfb27d41a6",
      "kind": "uups"
    },
    {
      "address": "0xf7fC213eDc5a1714617bB7955821961c164fbC27",
      "txHash": "0x5a9c3683f98808ec3e6af1d618b5ee323177df3dd12380b4179ae047cb27d774",
      "kind": "uups"
    },
    {
      "address": "0xbC9d20c5d8395f46665D63994fdAc17f32C89EA8",
      "txHash": "0xcb82821f189cee84e1b590394540f84646e590996ba60724655e520cd5f002bd",
      "kind": "uups"
    },
    {
      "address": "0x42642453C59BE0211A72094dd10977313C73A75C",
      "txHash": "0xd2272789d8c0899f8cc4c2bafb12590434faa92a8ff1aa8a16f6168c839af474",
      "kind": "uups"
    },
    {
      "address": "0x873Fdd647de2626f061ceE68a37d3B9B7670Acbb",
      "txHash": "0x81f0a58ccf1ce010aa343ee436bbdc1e08b08de7824d87d326c6bdd1ace74ed7",
      "kind": "uups"
    },
    {
      "address": "0xbB72C0e9EaC835088064Bb5f0577AA66828Ff135",
      "txHash": "0x252b2d2bf2fd1282dda8f7d2368c5384b8e60ad69da9806f25ff3ffc54b7d295",
      "kind": "uups"
    },
    {
      "address": "0xf1807614a18437F530325f3407b1B582886e1b44",
      "txHash": "0x16a02f4871933820625e53866a2328e7931c17125070c26c89ee92516889c605",
      "kind": "uups"
    },
    {
      "address": "0xBB6AD48a75B458fB2B1FBe1Aa300D3efa90F7BC6",
      "txHash": "0x0eb1ee4811aed457810ab0684f1819cabd0542794d7bbcf6b6ad43aaff28109c",
      "kind": "uups"
    },
    {
      "address": "0xBcB69eef7Bb96EE4c2E761c44F3D2e66E4e77E85",
      "txHash": "0x4b0b54f61e215b1b53672a60a8c8116a6535acf3e610ecf0775d1c06ce4259a1",
      "kind": "uups"
    },
    {
      "address": "0x748334b8a6EBEFa7F54F1015762B9cb8c3566061",
      "txHash": "0x3f487df7b680bb060c674d2d2f5fafec0dd286e109104f4e72ef722527f88f01",
      "kind": "uups"
    },
    {
      "address": "0xF24dFa64e5fca213FdEb3d8cCcCA6a8c2309E2d7",
      "txHash": "0x38dfd1571be58caf16e1f5ca6dde8833a2234bf75d2f9168ed971f5c5d4d9bf4",
      "kind": "uups"
    },
    {
      "address": "0x136b2Ae0D3d305566F1A2ABBDAAF1C0BA4974462",
      "txHash": "0x9d48ad7840d25a330778b66a3831be73fbf1b216847e1921fe7a8c3589a4510d",
      "kind": "uups"
    },
    {
      "address": "0x26C7c397021d05CE46F16A5ED2CA609288861537",
      "txHash": "0x7077650d38f3818f98ff7e0f77976393461bf0fcae0220cb421f842b5e5c662c",
      "kind": "uups"
    },
    {
      "address": "0xb979459676203e2e492fDED964c7d47417b0b8C4",
      "txHash": "0x259451793156507062435911121e2bcd053ecd6b194637a12d285364d7743c87",
      "kind": "uups"
    },
    {
      "address": "0x26BC0D2c0e12036c1a02b3D68572dF2E486A067f",
      "txHash": "0xc89874bedcabf58548319b04b7914fa9da51221149468e9f5d8f40013934d6ae",
      "kind": "uups"
    },
    {
      "address": "0x5A426BcFA5259e6F38CDF4B42b429dFF08C8691e",
      "txHash": "0xb9bc2a29ada9d279a4198ec724a7d286737c79d1df062673c8753e7f0677f5ff",
      "kind": "uups"
    },
    {
      "address": "0x1A43dc48C5dDE1aBd8e928eBBEFDFeF2eB6BcA58",
      "txHash": "0xe160851b723e51edb96a3d6a3feb12f01aa01e6f828a21951bb95273e31f1448",
      "kind": "uups"
    },
    {
      "address": "0xc675F73F4a29ABed8954F2390e4ece5A75618c6b",
      "txHash": "0xfbb9c9f679a27aaa812406e4ab54bbcce9ebebc1f675fb36514396a79fcd65d7",
      "kind": "uups"
    },
    {
      "address": "0x71C5Edd111CE58F3197a37e0B47Cc3A4DB15ab6a",
      "txHash": "0x23c61907c46978893e0543b8f435fff566b57cbda3ef23e5a0dcc7bcf8ac5bcb",
      "kind": "uups"
    },
    {
      "address": "0x2B2285633CB172b225ae6Bf1e1036cE485747397",
      "txHash": "0x9b955682f43a2394b1e56641d0a2ffce16e8f98310de361a6ee9095f78f7b069",
      "kind": "uups"
    },
    {
      "address": "0x830B268A1775A0E8D033768f63D6acd18ef844b2",
      "txHash": "0xf54131452179f0770d4e4932f590a44b38926b6bcbf3e836b7727b6262aa665c",
      "kind": "uups"
    },
    {
      "address": "0xbFB64F8e984618929bE93A9a58455D4E87215Cb6",
      "txHash": "0xb0aaa9c99d5ea5a375c98bc4e923610358ea66d0d7f93ab2e150c477b5c02113",
      "kind": "uups"
    },
    {
      "address": "0x7921B4992609Ff4cC67696Dd79cd6a6b1C1BA10D",
      "txHash": "0x1cef305b0351b6b995b70b645330cd1adf3eb45db87b0df75029cc79eb4809d4",
      "kind": "uups"
    },
    {
      "address": "0xD4230c556739D51ADb017F779fa664819aDd36e5",
      "txHash": "0x48ea25e99c95f7ca4817efe3bb8cb6e066b9615b5b39a59024b3e4e1a579e5a2",
      "kind": "uups"
    },
    {
      "address": "0xA390c08089cA664cA9fDa0602eDc98A470008786",
      "txHash": "0x2243db5ef46a9a2add2ab1fe68af8c14fe59eb51b5f54229b57370d77a1769c7",
      "kind": "uups"
    },
    {
      "address": "0x6B13fC7Bd6d525bE14035a5c17E81a3a72b55Ea7",
      "txHash": "0x28544e835dce015199fc78e28445a64046c285e7153a49d53cb3c8e47bfbe6c4",
      "kind": "uups"
    },
    {
      "address": "0x7960Cf5282D079c4A9a6C0639f6901470891ab82",
      "txHash": "0x0c5c948b7c90308127b54921d9531430e3cd8928b396291ffbec21b731e48587",
      "kind": "uups"
    },
    {
      "address": "0x2899b2696367BA2C0e77e4FBe9Ca25C890A4659d",
      "txHash": "0xdb92df5f844efa47203dc353ca1411b2171b36c1df20206c36d45c9659b9d6e5",
      "kind": "uups"
    },
    {
      "address": "0xC1d42ec9F39Af0b3Cb1d8Ed8f7128Cfc340c50c2",
      "txHash": "0xe3d1a60bd42d3976fafa403bf8d42d13218260dfa701b61cc89e06140844dbfd",
      "kind": "uups"
    },
    {
      "address": "0x2c882f06e6f05EdA6dB3FE98A3aB8e21552e16C9",
      "txHash": "0xaf0d7ad5de4aaa0f6b1683b09fe361461684a7a0f55ac264217bf5a0fca7ded8",
      "kind": "uups"
    },
    {
      "address": "0xfCA12ae397b44ccBf20108AC3D73c6728dd0B42d",
      "txHash": "0x0a5aca554c8d3de5d52a44c34d6d8acb77bd597d56912c078003c8bfde95a6c5",
      "kind": "uups"
    },
    {
      "address": "0x1a2B152D19F113Fee69b6Aa75388B9f3C2E97600",
      "txHash": "0x30b1c45b9897ff1820dd1caf54cc91a56fba77c74916038aaedf4ec9df146d5c",
      "kind": "uups"
    },
    {
      "address": "0x966DEE44336Caa89bcfF44788c91Eb694e38976e",
      "txHash": "0x1f95b9848b3cacbed679afe0a6ebe20518c2de6b10082b87f254e8c51a10029e",
      "kind": "uups"
    },
    {
      "address": "0xC3E7dd5B609b996343109aD34B6904a038764bC3",
      "txHash": "0x768fef39a03b2c56604e8fb2da3b9fd6fb9989e76a6c2d4899249e51a2dc79b9",
      "kind": "uups"
    },
    {
      "address": "0x8368e338F89f7860507D2BeC7AFC67C96bCBE546",
      "txHash": "0xca37bd2937a58a5be92b9fe3a1837452500be5c7491ed04f8524d5515083498c",
      "kind": "uups"
    },
    {
      "address": "0xebDEa6185d998E6Be0c8297D60C1f107F59c774D",
      "txHash": "0x9bc419f7aa4a2877a6ead5ca29fbdf5ebaa3d89954fe8d1731ccf8a0c8a9102d",
      "kind": "uups"
    },
    {
      "address": "0x7D383Eb7a48316e850859ECF83272c063B88d5d5",
      "txHash": "0x76bcbc1dddbbdfc7ba16bed7a8c51e07741ccec8c53a1d443a4f6bc97bc585d9",
      "kind": "uups"
    },
    {
      "address": "0x098f999090697Ab55815699F07bF00b986Fa0941",
      "txHash": "0x281d391548c5442c867c65a36ffdeb78d4e898291de689bb066bb9cd161699f5",
      "kind": "uups"
    },
    {
      "address": "0x0d95E67335cb38A5dA33D02AC203CfA8F67C0531",
      "txHash": "0xc9229e39f48e922ee432f6476a311c31658893fe6b431b107fdcc3c6a6726321",
      "kind": "uups"
    },
    {
      "address": "0x69373e9074ee8d51f548F9AcC31d4BF557591a25",
      "txHash": "0xd4bbb15ec5d686d5a74d1fd6b2fb9781a257d9654444e7e4858a965943821646",
      "kind": "uups"
    },
    {
      "address": "0xd62C623D421CB19fe9a80C94CDa5A1C8f31C93bE",
      "txHash": "0xe1109293a18ff19ae183ef480f5bed0cbda6be3b2cc826db432728cc2c2c6fc8",
      "kind": "uups"
    },
    {
      "address": "0xAf3cA997D7e0b9B32145b5c50E15BFbdb2c1F07A",
      "txHash": "0xbe70c2e5215057c577c4ab216037ae7e7bfd9b188a1cc3af4bbb904a8e811265",
      "kind": "uups"
    },
    {
      "address": "0x341F4D380708E11916d4e17536c6cAb572A49B5d",
      "txHash": "0x42df45a0e626f0fa20d55da452ea3f4f3033656fc06e94ec61d146faf766db45",
      "kind": "uups"
    },
    {
      "address": "0xA5B7C17C1De5fdC77f2c9d5a18b60f39fF86d7d5",
      "txHash": "0xee8c60b2d44a420a514e62a447379510676b8228372a2ae2e3d101ba9c7f01d4",
      "kind": "uups"
    },
    {
      "address": "0x48A582640E410fF7e35478728A6e7264976aa31a",
      "txHash": "0xd14cc911c4f1f488fbfd386dbdaa3134a3030ba9358363433a842ecee7985367",
      "kind": "uups"
    },
    {
      "address": "0xd8090cFc3309405DeB5804AcAF5a538f8574c9A3",
      "txHash": "0x60a9f705220179a2eb7dc822cc3125fbc6dc35c04aa351182ea564e16b9b5cd1",
      "kind": "uups"
    },
    {
      "address": "0x973E54299cbb68c4Ec235434Bc23394e334Ee2bb",
      "txHash": "0x279548c9b5783c2786ec50fc77e2c1a4484f75129b250c88f86f97b045fe8497",
      "kind": "uups"
    },
    {
      "address": "0x3a2d1CDA10771f3159082036a814fA4e542fFAfc",
      "txHash": "0x3a2428010e0979549be49898be67cee9621e1cc31ebb53ebe4bde9494d95904a",
      "kind": "uups"
    },
    {
      "address": "0x06117C9563928651fd7852AaE704789EA7806E4d",
      "txHash": "0x1dc930076a7e7891b9c4a278d3e26a6555ed23276164baa30d3cb10aa5df0429",
      "kind": "uups"
    },
    {
      "address": "0x38BAb3834711454F80f42D7717bC9A52fc504fbA",
      "txHash": "0xc9eefe9eabee238362c57fc560b1452e3972c18327a3b5a73f487623be84059b",
      "kind": "uups"
    },
    {
      "address": "0x203eB92bF0368e56210C890a26020848FF73c7E6",
      "txHash": "0xd4c9760265fb31f8f9f3eaa1d566e999a3bd7391094716bf742aa3e97a37758c",
      "kind": "uups"
    },
    {
      "address": "0xfC6Cf565ddC54C6776Dde56127d6FcfD470a4369",
      "txHash": "0x0a67f5c84c0dbc46a80df2c1830bf41d36614e998bd24e533defb38bbb887b9d",
      "kind": "uups"
    },
    {
      "address": "0x00886EcE6769f73c5200FD4479E606e366bb83F1",
      "txHash": "0x657841e17712ee9dcb11d64037a5d9a96321bb1cab2d115984793ded1f22d6a6",
      "kind": "uups"
    },
    {
      "address": "0xf589499821C69889341408f0cDd17A15A14C3ae5",
      "txHash": "0x1700f24028ec6a1f8adec077df11ed8b07c60f9317633f7737279e9bdf431466",
      "kind": "uups"
    },
    {
      "address": "0x891a0D9afeC668b8F19FD4F65A90eC029aac0171",
      "txHash": "0xa448eaa67360b8953f0b4300236340e8757179d9c061138f841d64d8fba5ca42",
      "kind": "uups"
    },
    {
      "address": "0x386ea4786883CbD1A22992f23291F00Eb843B34a",
      "txHash": "0xaa7447ecad94418339d54e43cabbc2fe7c27e0cb8121ed8dd288056f5e9442b7",
      "kind": "uups"
    },
    {
      "address": "0xb6B50c4d90864734bD231936d29764CeE3F8b69c",
      "txHash": "0xaf2198bfab5be0af0488ffff4e9c249f4a3c97ca4add326c7de12856f7b4ae1c",
      "kind": "uups"
    },
    {
      "address": "0xe8F571dAe11C2e41AB863333223D19D63Fad8C7A",
      "txHash": "0x6bcdd6fed0528d40f48e203234b2f190de42fc7238547348788ad78c7907ca68",
      "kind": "uups"
    },
    {
      "address": "0xcb757bc632135f44fB37c62830B7579d44d757f1",
      "txHash": "0x57828f88e506a86555e9b2430f536e292a589a34b1f07340436b111fb2f9fef8",
      "kind": "uups"
    },
    {
      "address": "0xc2F4E406Eac2b36daA793172389CB25cbb622517",
      "txHash": "0xeb5d135ead54622a2ce5b9e7c6fdfec313c999fda16b01e30dab3cae8e0e4203",
      "kind": "uups"
    },
    {
      "address": "0x0F74d4e2b925740aa4C0eAA71f6f2EdebC759471",
      "txHash": "0x29aac1e043bbc9f3cf98bf8fda146c13c10c14540a19a01be8893c80efcb1f62",
      "kind": "uups"
    },
    {
      "address": "0x20cd6cb478D17F07cA8287F33850db5f1da118D4",
      "txHash": "0x74da793013fb734f3cc248b98236106fdaa587cbdc5414346484c5dbcf9f60e1",
      "kind": "uups"
    },
    {
      "address": "0x0012e3fCAfBa161ee1895182e42a7A5eA2191b68",
      "txHash": "0x6a140a4ed0b820db923d8c2d0cab67585e57970c172f8f66271b76424f1f2a4f",
      "kind": "uups"
    },
    {
      "address": "0x2CaFdb8D2118eBB8a8e53a85d3f3687aC05B15C3",
      "txHash": "0xae74edb7da4fc4ae761076d2db9d29892d982d9c0a9a524544576c7c850ea1d2",
      "kind": "uups"
    },
    {
      "address": "0xE2c238CaCa0a0de0CDF33F75f5d6785D2a84321A",
      "txHash": "0x03e00c83453d7d9523dbb752dab77d7237e8a9b5627232894ae57660e74520bc",
      "kind": "uups"
    },
    {
      "address": "0xdB0d42e932DCc35C414713644A0E2BCaF3Fdbba1",
      "txHash": "0x3448c725a7a05870c9aec3d25f40280e1b1eb3e11981a6fbbd7efb7d7c965a93",
      "kind": "uups"
    },
    {
      "address": "0xb910626b5FFe28C7147Be05E64e3efc3AddCf60F",
      "txHash": "0xcdb34a0295175aa53b39e7d2f6a36c219f7692398d9c84ed225bd947745fce2b",
      "kind": "uups"
    },
    {
      "address": "0x547Da8Ed3F7280F6a37531DC3E0dBf0069f1AEC7",
      "txHash": "0x2d1b93c0daac750128dddb2c677db3c959b979f877ba6e4e3b1db7a3392a1d88",
      "kind": "uups"
    },
    {
      "address": "0x0239909732ecda6Ba16539fA4a531D03e9E90a38",
      "txHash": "0x99ae4b4eb666c15f6b380f2b463ca244ef7b9bec7c801cf807248b4d9a1cb333",
      "kind": "uups"
    },
    {
      "address": "0x4CE4c83856D48BA3A4e7576b79bC6A123aDB871b",
      "txHash": "0x6a988396ff7c3748b600f2a226fd108ab179b0a71995bd4e340dba3743e56326",
      "kind": "uups"
    },
    {
      "address": "0x68D6E843A07b0afaCd295F3bD9251839E5A928BF",
      "txHash": "0x3858db83f358a2db7979c14f1531312cfb0aca75593c9e804c9b3cfcd2b1c09a",
      "kind": "uups"
    },
    {
      "address": "0xb971f40b53D83958179e71973d12Bcfc80a0385B",
      "txHash": "0x8b8e994cd28c376b79d3e5e15da5f57e2f7faca142a704b52bfa91d9406de41e",
      "kind": "uups"
    },
    {
      "address": "0x10fBFCB7C991f364D3a0CF51fc84E376C93EE4FD",
      "txHash": "0xbb57445fb20d24af0a31fae23e05d3376c6c82d9ee69c69e7baf9b0f2e21810c",
      "kind": "uups"
    },
    {
      "address": "0x59577c90274CB5d56e6A9829f8E9e9b694B537c4",
      "txHash": "0xd7df3a0d2c43fe54a8e85ccc0ece55ed38b63223aae81f43d16c881128970925",
      "kind": "uups"
    },
    {
      "address": "0x699a6c44C93589c2F79F1a7DbEaC6c1EDC43B23B",
      "txHash": "0x11b9e27705795cf38f4b9d20074c610c0841a2e65d00125554e2f6289fc39eeb",
      "kind": "uups"
    },
    {
      "address": "0xfc9144348531d4aa21E8ca4A9b13791ed8960f52",
      "txHash": "0x92f0991afad36976c8b7184ca25d7fab550e641b55c37bb65bcf4ab9ebcfca3b",
      "kind": "uups"
    },
    {
      "address": "0x18a131fDfAd176f4C972640E595a8F8F7e7D160D",
      "txHash": "0xd8c933b450d35b9ff62fd7da357c505a7899d348cf51ac1b5a98627e6a714363",
      "kind": "uups"
    },
    {
      "address": "0x17e18E1d13b593d9c405f68e8134441d90EB0170",
      "txHash": "0x1cb36d8df4b3e628c9ff4422e41a878f63c8dd5b5d14737de352f494001b9bd9",
      "kind": "uups"
    },
    {
      "address": "0xB1567Ca12Df16bFD063C2A6463F8951f6042F4e8",
      "txHash": "0x5a785e54fa4ece7ba7f6498f66e2467d152bb934af051f74ed7a5154a9fc2b79",
      "kind": "uups"
    },
    {
      "address": "0xf1528E33231EF0BC75c4ef2615e47B9579f6a348",
      "txHash": "0xa079e56df2532d6b0afa838efefd63db6252a9befa9865ba7d2bfa3cef6d3c6c",
      "kind": "uups"
    },
    {
      "address": "0x0Dc370fF348936A68298Bb9EcA9533F243415109",
      "txHash": "0xbef209e5aba00d80d6fc16b7068bce5c08af984fc90c13b2a850d029c7bc5c8b",
      "kind": "uups"
    },
    {
      "address": "0xf0C8B2DD241901676912672D0CdBFA9d41A53a24",
      "txHash": "0xc6e0198e5151106a1f6a96d7df316b8903212e4d695684662f50cc02777a1c50",
      "kind": "uups"
    },
    {
      "address": "0xbB4e0a7b35fcD70e25fc45cF7f079Fef0a664885",
      "txHash": "0xdb097f1ac8d07e022d368d17a3b704b2378b1c147b1661ae1aea41fd94771157",
      "kind": "uups"
    },
    {
      "address": "0x02E52f3ae3bb8A5EA1d0Fc419Ac85745B7dCE64C",
      "txHash": "0x80216d2ee39e518734d170f691610b5d736670264eb3532de6c18081ffe3e08f",
      "kind": "uups"
    },
    {
      "address": "0x57a0B9061733864D3FACD358e8Aca50d1d06aAbE",
      "txHash": "0xa3639f8bc336c6bf3f3bedf0801ba719eac2efd8888ae27544ec661a1ccdbcea",
      "kind": "uups"
    },
    {
      "address": "0xF90A7DD703517E0DDcb8cC5C562e89B574bfb0C6",
      "txHash": "0xb79b623aa490d25a6e8726a4a34e2043df6cf6d2b74a84265efc52658253b219",
      "kind": "uups"
    },
    {
      "address": "0x6761CdE940d01f583130e6dDE2a4Dbb4fb70b93F",
      "txHash": "0x40ea9b33e017168d48670ef5f637baa37d964cd8870a9cb092ebd4102bdf1a14",
      "kind": "uups"
    },
    {
      "address": "0x95120520701f11020210A4154c55362b6f91330D",
      "txHash": "0xeb36595e939b114ae91048e94efdda797c22dabba85c89329e569c63af341c70",
      "kind": "uups"
    },
    {
      "address": "0x7a8D8ef44BF585950dBE1BBc7343aE39075aBD74",
      "txHash": "0x4302235adcb5c564c1685bca4f361efe479e2f340a9b7e12adcbeb88259faddb",
      "kind": "uups"
    },
    {
      "address": "0xb7EbBa916827F5b4b58fD28a24d3762C9b8Ef2ca",
      "txHash": "0x196d35d90db4e5d84863d425d318eeafa62436e397b7af3b157b3c1e619ceb43",
      "kind": "uups"
    },
    {
      "address": "0xC34c5A600505221BE3E11CB93cBc7350Aa9f4008",
      "txHash": "0x89fc1384c3425dce38185bfde19ba616fcc000dd1a8c49be769268ce15c8098c",
      "kind": "uups"
    },
    {
      "address": "0x098B00Df1a820b0aE7889a6b66aC5D97aeaB16EA",
      "txHash": "0x9f8ef435f4397546b1534539e26401d032c0189fefacfcc0bb6a24d34df466a3",
      "kind": "uups"
    },
    {
      "address": "0x3cD49c93153b098d7A947E4b3812B015EF018E24",
      "txHash": "0xcb721c3956feca22441e77c241884a72a6d74051fbc9125cabba4c52699aac17",
      "kind": "uups"
    },
    {
      "address": "0xd73ee3D02BaEd62C4982dB2b74767A8D4c9EF133",
      "txHash": "0x31894bfa62da7a3c960bd09ea8c384ecfdd6d6d9d5cdc61eb6626f24ac432be3",
      "kind": "uups"
    },
    {
      "address": "0x8Cf14300A22D0Bc5e24bA3E840bfa840474873d4",
      "txHash": "0x4753be7d7262167069e375857f7fbdc974dbde8b0b3c9b51fbe1efa56aa65d5f",
      "kind": "uups"
    },
    {
      "address": "0x7AF2df957DC00a974B79af8e6354e1D8578115ea",
      "txHash": "0x5503af303f9d542ed2af7df4480b05b7a5bbca50d9667eecc13bf2f327f38a34",
      "kind": "uups"
    },
    {
      "address": "0xF427969B3485F79495EF5a3BC73B862A9c4C62b5",
      "txHash": "0x1b00d6b31330afe5c4e84cc89ef30d4a59261aec64e5d317719d56667073aca2",
      "kind": "uups"
    },
    {
      "address": "0xd38189bb4852E3746dd7F025704783ED755BB54f",
      "txHash": "0x2bc92fd3d097aaa51bab6647e5376f10c1c618d3fba1c0b1bcf1e6f7fdfefb13",
      "kind": "uups"
    },
    {
      "address": "0xa19B868D8E8056582433A919521875c3C618A479",
      "txHash": "0xa9272e7f7abb11af2dce006317e5994754e7d2e51708f95b640595c23b0bf0de",
      "kind": "uups"
    },
    {
      "address": "0xc33CCFbD519c3e5FC72306982ce83Ca50e58f57b",
      "txHash": "0x8f8122ebb7e11aa66cd75eaa802e43891bc860cf283b258a0411457427a5c4ce",
      "kind": "uups"
    },
    {
      "address": "0xa3aed54093d0259AbA5e6e8597Ea6251524E3D82",
      "txHash": "0x8678c1f50645977f1fcbe8840173c71fd4730e099aeeee0172534876a68aba11",
      "kind": "uups"
    },
    {
      "address": "0x7fa63E2c46abC06cFF5bf7b16B02CBEE41DC2a32",
      "txHash": "0x83b8f94632ded338925c45a9e3d7fb04cf32e89ad57752862995c72685e26ef5",
      "kind": "uups"
    },
    {
      "address": "0x0afb6F125cFf4583D2c154E1eeeF6FE61134C7D7",
      "txHash": "0x2035227e3a87ff5c8f885a287be6adff00f6060e417a1f810dec4a35aec7af4e",
      "kind": "uups"
    },
    {
      "address": "0x3007CcF78Ef6DbB47EEb3a108Cd38cEbE4776947",
      "txHash": "0xa76b73aff56a36058555327551461776e235be29b0e9b83cedab1af44faccc6e",
      "kind": "uups"
    },
    {
      "address": "0x4c1bBdb98eD0cE587cb453c651303ce004Df9265",
      "txHash": "0x9b10988ee26280f4e550baae1a9673b3dfed9754aaa53c174f8698ce31acff8c",
      "kind": "uups"
    },
    {
      "address": "0xf3cb1CD9c75B719af3800d3A77C2172899aE0952",
      "txHash": "0x31db621de99f3b8a72c2937bd005c66e3068be1bd68e2f65ce1371c5d655ef78",
      "kind": "uups"
    },
    {
      "address": "0x3f6fca5CB77c764a02107e6ad836B7680b54eCc3",
      "txHash": "0x102f25c1b671784bef6bcaefa8dbdbdc3f23b05654bef12a8c16cb542fc4e2c4",
      "kind": "uups"
    },
    {
      "address": "0xE047CD4b77D2dDeE5896F6D2Cb9C66f723561333",
      "txHash": "0x6a4f0f40942a2c7660d79c28f614e080940bbd065734bff4fe3b95e172bc939f",
      "kind": "uups"
    },
    {
      "address": "0xAff15aC017F4662C1f6f43503777df73619c7F36",
      "txHash": "0x62974eb3eada670d9b739f1790f40702b24da38031601fa0f49308bbd70f906d",
      "kind": "uups"
    },
    {
      "address": "0xE7BC270E2f5375b8a9a9a2B213Ca233639Af651c",
      "txHash": "0x46755be02f2536dc1a34846e7ad7630136769e912fc904c1ae62234abcd698a1",
      "kind": "uups"
    },
    {
      "address": "0x01A1B08c6f62457Ae250d933B3E68dD456196d9E",
      "txHash": "0x5e6242537a6eefe83d4c15a57f12af33b7267f31c48d2b85f2b0874d5ebbdb22",
      "kind": "uups"
    },
    {
      "address": "0x1F9E8C8271c8E096C6a4a90c77A2249eC1E98D21",
      "txHash": "0x00e21bda05e6d56fb3c4073fefdba5606f8a32f45ac0097232f0a61a82367463",
      "kind": "uups"
    },
    {
      "address": "0x94eAdbaC85eD9173Ff45Bb76F40691A09e2E20ff",
      "txHash": "0xb5a0dacc6f66cd4661225fc192e39f5a778cee92b3075188d2c0890f53b5858c",
      "kind": "uups"
    },
    {
      "address": "0x6b6bb57687325B770b2932083f43b96940b17379",
      "txHash": "0xf650f1b9f211d5d37eacc5c1029d9c31522da6cee874c05705ac4c62a08ae53a",
      "kind": "uups"
    },
    {
      "address": "0x428A3060A0aeE26d14b90545B327871DF75545bC",
      "txHash": "0xcb0c6d078eac8a3f50d553332b2ca25d101394f98051e545c2706a365745666b",
      "kind": "uups"
    },
    {
      "address": "0x889fdAf67b7fa0F5559203593Ec13dE30E81a2EA",
      "txHash": "0x81ad713989eaefe5e5559530b08973affd12f5fb8b5acead4da799fff59b056a",
      "kind": "uups"
    },
    {
      "address": "0x166ca09701E1071f88bf36De311e3190Ca3c102A",
      "txHash": "0x87f2eb63a458a84eaa86ec70c3ffafb2f820621acd2a356c9866365948af2987",
      "kind": "uups"
    },
    {
      "address": "0x5a5b5Bb51C2691DA1BD8f07dF368d67960B29d8c",
      "txHash": "0xfa6edc5bc23545e70cf6d04eebe8fbe59dfe8b0ab43a9303e2fdcb8ac95cca9a",
      "kind": "uups"
    },
    {
      "address": "0x0654a41691d8bB8A06f0B950345A6305c59fb6E9",
      "txHash": "0x54e99d237870da8800b9c5fc59d18c9223f4ab5023988081ce4d3dea0d2f2f26",
      "kind": "uups"
    },
    {
      "address": "0xcf6F8B52e5D9e1d5AC17c35cfB5D56ea0D89d7E4",
      "txHash": "0x9e7ab2337d56ac036cfbb2345e96c0e87264a8fbe1297c7dd75ac393112bd162",
      "kind": "uups"
    },
    {
      "address": "0xE33b304C1e6c8D43E3b4dd54603095d6794Fd59B",
      "txHash": "0x2bcea7cb55c3b43d6ac2ad770685f0b3a03f14a31166ccc2883198582f2ce29e",
      "kind": "uups"
    },
    {
      "address": "0x40E9EA800db4FCc2EFd7fEa0f2Dc480829c005D1",
      "txHash": "0xf7774e2062796e9c72a284a9c6cb734368704fc0bf334a6fbfaaba5c04bd62f9",
      "kind": "uups"
    },
    {
      "address": "0x08BfE50C3cD3bf1cDe80555652294aeabbc2Eb2C",
      "txHash": "0x2fbe1f4fcedb2922fab85021ebcd431dcf3ec9281aae256f8627613ce2ef56c9",
      "kind": "uups"
    },
    {
      "address": "0x2950aa655A9404509E2569703d3fD83A9A698c6d",
      "txHash": "0x35ec8e2149238a518c797ee601b5142433237576f0ade07d85b73a21a4824221",
      "kind": "uups"
    },
    {
      "address": "0xE0AA1dE8bCF583D3CC09665928933bc08C8c5E6F",
      "txHash": "0xb948b4a41762f2fd7ddcf7f34e27a8766f7b8330d6f23aa7c6b2eb91bd8fd07e",
      "kind": "uups"
    },
    {
      "address": "0x00343F35f151C6a09d9eADE01d0EFD39bfca3Fba",
      "txHash": "0x3f1bbdd6f35a466d115ce892e3a750069a9ed7035751d5785fb9ec1d773e69e7",
      "kind": "uups"
    },
    {
      "address": "0xc6A3fE370ec7D7Fc9C85e3bD84f86Af461aA3b81",
      "txHash": "0x85b6dcfedbcf2d19d7ce4603a4ec8e16d321459cb4333fb8f89a703bb56e9fc9",
      "kind": "uups"
    },
    {
      "address": "0xb29c6DaaA0fc4C3F1DBEF5Da7d62B3d4DdB7c4Bf",
      "txHash": "0x1c8d582a88a6defd4e8a944214b3901e98e304b7a6b31fff8d4a93413fa5fc3b",
      "kind": "uups"
    }
  ],
  "impls": {
    "8edbe6ae5c1e85199f8194efcbd77bed04431b8eaf7b085b6f9dd61818d27373": {
      "address": "0x3efb23c05DD34035fDb23cC74D85Ec586A2e7068",
      "txHash": "0x02901c830dbb0d528ffd92d93e6b3648431073323a6c0fcd3f8cb44158040c2a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:111"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)3729_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:25"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:93"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "NftTokenV1",
            "label": "openMigrate",
            "type": "t_bool",
            "src": "contracts/NftTokenV1.sol:15"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(Counter)3729_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_struct(Counter)3729_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "ced5ebfba352ba8ae0f0c22276581b313ca8cb75c192f484aacd3b71cf6d9d1b": {
      "address": "0x9Ef7A34dcCc32065802B1358129a226B228daB4E",
      "txHash": "0x4c76c20fd6a4e5e5e3bf02f8b7a2d3820ac706cc33757cc67fa6c3be793ba746",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:111"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)3729_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:25"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:93"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "NftTokenV1",
            "label": "openMigrate",
            "type": "t_bool",
            "src": "contracts/NftTokenV1.sol:15"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(Counter)3729_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_struct(Counter)3729_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "f549cdd27289603460da7b479cb26779f09cc54e3098a33e8d48773a2ff06d63": {
      "address": "0xB1045EFb6deac88A4e0F1Ebcc0558a2AE4e5BD8D",
      "txHash": "0x9b0b49a699ebacac06e28f142411c4d15cb17b42c9c57c517019f1675a8f9668",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "NftProfileV1",
            "label": "_profileOwnerFee",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/NftProfileV1.sol:29"
          },
          {
            "contract": "NftProfileV1",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/NftProfileV1.sol:30"
          },
          {
            "contract": "NftProfileV1",
            "label": "_tokenUsedURIs",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/NftProfileV1.sol:31"
          },
          {
            "contract": "NftProfileV1",
            "label": "_creatorCoinMap",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/NftProfileV1.sol:32"
          },
          {
            "contract": "NftProfileV1",
            "label": "_profileDetails",
            "type": "t_mapping(t_uint256,t_struct(Bid)5716_storage)",
            "src": "contracts/NftProfileV1.sol:33"
          },
          {
            "contract": "NftProfileV1",
            "label": "stakeContract",
            "type": "t_address",
            "src": "contracts/NftProfileV1.sol:35"
          },
          {
            "contract": "NftProfileV1",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/NftProfileV1.sol:36"
          },
          {
            "contract": "NftProfileV1",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/NftProfileV1.sol:37"
          },
          {
            "contract": "NftProfileV1",
            "label": "profileAuctionContract",
            "type": "t_address",
            "src": "contracts/NftProfileV1.sol:38"
          },
          {
            "contract": "NftProfileV1",
            "label": "_bondingCurveContract",
            "type": "t_address",
            "src": "contracts/NftProfileV1.sol:39"
          },
          {
            "contract": "NftProfileV1",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/NftProfileV1.sol:40"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Bid)5716_storage)": {
            "label": "mapping(uint256 => struct Bid)"
          },
          "t_struct(Bid)5716_storage": {
            "label": "struct Bid",
            "members": [
              {
                "label": "_nftTokens",
                "type": "t_uint256"
              },
              {
                "label": "_blockMinted",
                "type": "t_uint256"
              },
              {
                "label": "_profileURI",
                "type": "t_string_storage"
              },
              {
                "label": "_blockWait",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "7b7b1d115e493521046a2048ef0eedcc6684a9f9b53aee62103e7bc455d1654d": {
      "address": "0x3B95F6236033d39C173E80a3E9b89936Fd0FaFbA",
      "txHash": "0xe8f4d13b3e4c7760bf847ec539cefc90e4f44c380ec2c0acc40d7131420722eb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "_bids",
            "type": "t_mapping(t_address,t_array(t_struct(Bid)3369_storage)dyn_storage)",
            "src": "contracts/ProfileAuctionV1.sol:24"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:28"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:29"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "publicClaim",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:30"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "staticFee",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:31"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "profileFee",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:32"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "blockWait",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:33"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:34"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "coldWallet",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:35"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_struct(Bid)3369_storage)dyn_storage)": {
            "label": "mapping(address => struct Bid[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Bid)3369_storage)dyn_storage": {
            "label": "struct Bid[]"
          },
          "t_struct(Bid)3369_storage": {
            "label": "struct Bid",
            "members": [
              {
                "label": "_nftTokens",
                "type": "t_uint256"
              },
              {
                "label": "_blockMinted",
                "type": "t_uint256"
              },
              {
                "label": "_profileURI",
                "type": "t_string_storage"
              },
              {
                "label": "_blockWait",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3b705fd90103eeb2da1ccdb618128d6c2b01b669bff8b6b3991769e86486dd87": {
      "address": "0xA1911857D4831934C4f9467501F6004F5DFaF291",
      "txHash": "0xe1deae7503816df8819fe6093b06c11c400f394c5033b038f0ec103faf7ddd25",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProfileAuctionV1_1",
            "label": "_bids",
            "type": "t_mapping(t_address,t_array(t_struct(Bid)3389_storage)dyn_storage)",
            "src": "contracts/ProfileAuctionV1_1.sol:24"
          },
          {
            "contract": "ProfileAuctionV1_1",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1_1.sol:28"
          },
          {
            "contract": "ProfileAuctionV1_1",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1_1.sol:29"
          },
          {
            "contract": "ProfileAuctionV1_1",
            "label": "publicClaim",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1_1.sol:30"
          },
          {
            "contract": "ProfileAuctionV1_1",
            "label": "staticFee",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1_1.sol:31"
          },
          {
            "contract": "ProfileAuctionV1_1",
            "label": "profileFee",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1_1.sol:32"
          },
          {
            "contract": "ProfileAuctionV1_1",
            "label": "blockWait",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1_1.sol:33"
          },
          {
            "contract": "ProfileAuctionV1_1",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1_1.sol:34"
          },
          {
            "contract": "ProfileAuctionV1_1",
            "label": "coldWallet",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1_1.sol:35"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_struct(Bid)3389_storage)dyn_storage)": {
            "label": "mapping(address => struct Bid[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Bid)3389_storage)dyn_storage": {
            "label": "struct Bid[]"
          },
          "t_struct(Bid)3389_storage": {
            "label": "struct Bid",
            "members": [
              {
                "label": "_nftTokens",
                "type": "t_uint256"
              },
              {
                "label": "_blockMinted",
                "type": "t_uint256"
              },
              {
                "label": "_profileURI",
                "type": "t_string_storage"
              },
              {
                "label": "_blockWait",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8e217c816cd491c8e41da7b6f6b0a16b79759ec3997e9eeae17b8ba979243384": {
      "address": "0x67f731097831BA45561f230065C1B1F36004d78B",
      "txHash": "0x62c728d18a17714aeb5344601484d201dd12c787419a86f9d10fb1e7fec6d366",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "_bids",
            "type": "t_mapping(t_address,t_array(t_struct(Bid)7590_storage)dyn_storage)",
            "src": "contracts/ProfileAuctionV1.sol:24"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:28"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:29"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "publicClaim",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:30"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "staticFee",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:31"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "profileFee",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:32"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "blockWait",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:33"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:34"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "coldWallet",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:35"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_struct(Bid)7590_storage)dyn_storage)": {
            "label": "mapping(address => struct Bid[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Bid)7590_storage)dyn_storage": {
            "label": "struct Bid[]"
          },
          "t_struct(Bid)7590_storage": {
            "label": "struct Bid",
            "members": [
              {
                "label": "_nftTokens",
                "type": "t_uint256"
              },
              {
                "label": "_blockMinted",
                "type": "t_uint256"
              },
              {
                "label": "_profileURI",
                "type": "t_string_storage"
              },
              {
                "label": "_blockWait",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "81c9377c591ba7a40b488a18d3c737159980db1a677badc4eb43a22bfa2cf293": {
      "address": "0x06c98Fdf57d26570A08c6160C1a9A12258cE0f1f",
      "txHash": "0xb34db0779480054155d2e43f3ebf1bd051da8ce748f7ae539e8fc4114092d272",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:111"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)3196_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:25"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:93"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NftTokenV1",
            "label": "openMigrate",
            "type": "t_uint256",
            "src": "contracts/NftTokenV1.sol:13"
          },
          {
            "contract": "NftTokenV1",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/NftTokenV1.sol:14"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(Counter)3196_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_struct(Counter)3196_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c47a0a15bb168b76780119af075038c529e9a222d500e87a4bab7dc32ca1e2fa": {
      "address": "0xB835060775400deB8a7C1C8D8e74230379AA2b9c",
      "txHash": "0x75072f5aefc30f7fabd279905ed6bd580e1a82c5aa66e5b79c5cf4d076990092",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NftProfileV1",
            "label": "_profileOwnerFee",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/NftProfileV1.sol:27"
          },
          {
            "contract": "NftProfileV1",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/NftProfileV1.sol:28"
          },
          {
            "contract": "NftProfileV1",
            "label": "_tokenUsedURIs",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/NftProfileV1.sol:29"
          },
          {
            "contract": "NftProfileV1",
            "label": "_creatorCoinMap",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/NftProfileV1.sol:30"
          },
          {
            "contract": "NftProfileV1",
            "label": "_profileDetails",
            "type": "t_mapping(t_uint256,t_struct(Bid)5182_storage)",
            "src": "contracts/NftProfileV1.sol:31"
          },
          {
            "contract": "NftProfileV1",
            "label": "stakeContract",
            "type": "t_address",
            "src": "contracts/NftProfileV1.sol:33"
          },
          {
            "contract": "NftProfileV1",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/NftProfileV1.sol:34"
          },
          {
            "contract": "NftProfileV1",
            "label": "profileAuctionContract",
            "type": "t_address",
            "src": "contracts/NftProfileV1.sol:35"
          },
          {
            "contract": "NftProfileV1",
            "label": "_bondingCurveContract",
            "type": "t_address",
            "src": "contracts/NftProfileV1.sol:36"
          },
          {
            "contract": "NftProfileV1",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/NftProfileV1.sol:37"
          },
          {
            "contract": "NftProfileV1",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/NftProfileV1.sol:38"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Bid)5182_storage)": {
            "label": "mapping(uint256 => struct Bid)"
          },
          "t_struct(Bid)5182_storage": {
            "label": "struct Bid",
            "members": [
              {
                "label": "_nftTokens",
                "type": "t_uint256"
              },
              {
                "label": "_blockMinted",
                "type": "t_uint256"
              },
              {
                "label": "_profileURI",
                "type": "t_string_storage"
              },
              {
                "label": "_blockWait",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "b5647a6170f907c77ab76f0b8420899113209f16bbda3241f5265432bc99e596": {
      "address": "0x2EF95E0f32DF400e37FC2FA5351D7F79974bb70A",
      "txHash": "0x55264929488297406a2c672dd75d8edc75994015ba5b120c2e291510098ebd3f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "_bids",
            "type": "t_mapping(t_address,t_array(t_struct(Bid)2654_storage)dyn_storage)",
            "src": "contracts/ProfileAuctionV1.sol:20"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:22"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "minter",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:23"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:24"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:25"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:26"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "publicClaim",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:27"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "staticFee",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:28"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "profileFee",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:29"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "blockWait",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:30"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:31"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "coldWallet",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_struct(Bid)2654_storage)dyn_storage)": {
            "label": "mapping(address => struct Bid[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Bid)2654_storage)dyn_storage": {
            "label": "struct Bid[]"
          },
          "t_struct(Bid)2654_storage": {
            "label": "struct Bid",
            "members": [
              {
                "label": "_nftTokens",
                "type": "t_uint256"
              },
              {
                "label": "_blockMinted",
                "type": "t_uint256"
              },
              {
                "label": "_profileURI",
                "type": "t_string_storage"
              },
              {
                "label": "_blockWait",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "db94f164ea686ede43ded9efaad1ddc1a6d08326f55fe3dba1f8d2a88c72fa33": {
      "address": "0xCf78Ea3A66bC587C55eD6FE9c181c76024d10b38",
      "txHash": "0xae91d5865639dcafeb337f0d82793b9da74cee0edd1c0c1ba81ad03fdec78063",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "_bids",
            "type": "t_mapping(t_address,t_array(t_struct(Bid)7353_storage)dyn_storage)",
            "src": "contracts/ProfileAuctionV1.sol:20"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:22"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "minter",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:23"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:24"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:25"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:26"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "publicClaim",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:27"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "staticFee",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:28"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "profileFee",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:29"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "blockWait",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:30"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:31"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "coldWallet",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_struct(Bid)7353_storage)dyn_storage)": {
            "label": "mapping(address => struct Bid[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Bid)7353_storage)dyn_storage": {
            "label": "struct Bid[]"
          },
          "t_struct(Bid)7353_storage": {
            "label": "struct Bid",
            "members": [
              {
                "label": "_nftTokens",
                "type": "t_uint256"
              },
              {
                "label": "_blockMinted",
                "type": "t_uint256"
              },
              {
                "label": "_profileURI",
                "type": "t_string_storage"
              },
              {
                "label": "_blockWait",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "72616a868975e3eed8b6afa8aca55ee7e8104b5f1ce2430b851b3b64b5d88308": {
      "address": "0xE1186846C9d78f7d605e72Da36F8d6e6a5FF4054",
      "txHash": "0x21c7b08dc86bf10bfdeb32126bb25eaae8f8d426797fc46504dfe0754e6f9160",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NftProfileV1",
            "label": "_profileOwnerFee",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/NftProfileV1.sol:27"
          },
          {
            "contract": "NftProfileV1",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/NftProfileV1.sol:28"
          },
          {
            "contract": "NftProfileV1",
            "label": "_tokenUsedURIs",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/NftProfileV1.sol:29"
          },
          {
            "contract": "NftProfileV1",
            "label": "_creatorCoinMap",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/NftProfileV1.sol:30"
          },
          {
            "contract": "NftProfileV1",
            "label": "_profileDetails",
            "type": "t_mapping(t_uint256,t_struct(Bid)5153_storage)",
            "src": "contracts/NftProfileV1.sol:31"
          },
          {
            "contract": "NftProfileV1",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/NftProfileV1.sol:33"
          },
          {
            "contract": "NftProfileV1",
            "label": "profileAuctionContract",
            "type": "t_address",
            "src": "contracts/NftProfileV1.sol:34"
          },
          {
            "contract": "NftProfileV1",
            "label": "_bondingCurveContract",
            "type": "t_address",
            "src": "contracts/NftProfileV1.sol:35"
          },
          {
            "contract": "NftProfileV1",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/NftProfileV1.sol:36"
          },
          {
            "contract": "NftProfileV1",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/NftProfileV1.sol:37"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Bid)5153_storage)": {
            "label": "mapping(uint256 => struct Bid)"
          },
          "t_struct(Bid)5153_storage": {
            "label": "struct Bid",
            "members": [
              {
                "label": "_nftTokens",
                "type": "t_uint256"
              },
              {
                "label": "_blockMinted",
                "type": "t_uint256"
              },
              {
                "label": "_profileURI",
                "type": "t_string_storage"
              },
              {
                "label": "_blockWait",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "31ed28026d911d8a07973bae793bddf0089972b4c173667317c99661d75c4666": {
      "address": "0x0F979AE8dBaB634a146E19EdB7b0EDb99B14C85d",
      "txHash": "0x704e4d466b72d38ce35147485d39c32bffea9f9ed9fb0642261d218d6e7a9ee9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "_bids",
            "type": "t_mapping(t_address,t_array(t_struct(Bid)2813_storage)dyn_storage)",
            "src": "contracts/ProfileAuctionV1.sol:24"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:26"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "minter",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:27"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:28"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:29"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:30"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "publicClaim",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:31"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "staticFee",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:32"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "profileFee",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:33"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "blockWait",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:34"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:35"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "coldWallet",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:36"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_struct(Bid)2813_storage)dyn_storage)": {
            "label": "mapping(address => struct Bid[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Bid)2813_storage)dyn_storage": {
            "label": "struct Bid[]"
          },
          "t_struct(Bid)2813_storage": {
            "label": "struct Bid",
            "members": [
              {
                "label": "_nftTokens",
                "type": "t_uint256"
              },
              {
                "label": "_blockMinted",
                "type": "t_uint256"
              },
              {
                "label": "_profileURI",
                "type": "t_string_storage"
              },
              {
                "label": "_blockWait",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "353f8d5f3d5852f9ae47f574764ecd3ce7199ce4de9b213a0c75c4a2505e0f08": {
      "address": "0x2B62E5Aaa3f90B6816D6b9AEeFF33eea89D20206",
      "txHash": "0xc6ae05e1c6299bf20aea6c1c5141b3b3b23da3b7bc635f45f992fb047db27f5e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "_bids",
            "type": "t_mapping(t_address,t_array(t_struct(Bid)7305_storage)dyn_storage)",
            "src": "contracts/ProfileAuctionV1.sol:24"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:26"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "minter",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:27"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:28"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:29"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:30"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "publicClaim",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:31"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "staticFee",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:32"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "profileFee",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:33"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "blockWait",
            "type": "t_uint256",
            "src": "contracts/ProfileAuctionV1.sol:34"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:35"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "coldWallet",
            "type": "t_address",
            "src": "contracts/ProfileAuctionV1.sol:36"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_struct(Bid)7305_storage)dyn_storage)": {
            "label": "mapping(address => struct Bid[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Bid)7305_storage)dyn_storage": {
            "label": "struct Bid[]"
          },
          "t_struct(Bid)7305_storage": {
            "label": "struct Bid",
            "members": [
              {
                "label": "_nftTokens",
                "type": "t_uint256"
              },
              {
                "label": "_blockMinted",
                "type": "t_uint256"
              },
              {
                "label": "_profileURI",
                "type": "t_string_storage"
              },
              {
                "label": "_blockWait",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f8c6aadc3ec45b8b3998ae071e702d623ed2f9e7e5b2acff975e9a98b6d8d7a3": {
      "address": "0xDfA0914E53b3C222fCBf67cD3cD89474e7B63bef",
      "txHash": "0x3d83a251ba6e1c4a88df7aadbb0f75982c5ce1f92cf5785433fa28a250882bcd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferProxy",
            "label": "operators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/TransferProxies/TransferProxy.sol:9"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "77584bbeab597ac519ad18aee70240da945c483d0d37813960ef31b8ba705505": {
      "address": "0xFecF248854c3A4e36A37CE04e7f025F718873509",
      "txHash": "0xf87fc88151b1a67b1d6c3deeea72122515c9275dc906facb3bfc4eb340cf562d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20TransferProxy",
            "label": "operators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/TransferProxies/ERC20TransferProxy.sol:9"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "681a36ca0cbd3ac10b0f7f7b4b3f6b00eeb699f19c981b1967eca28163b1e4b8": {
      "address": "0x67A59654E2ec02f12fbbcb6A2A758c7aB7c2c8E5",
      "txHash": "0x3b66ea4e0877f677df6bc1417248c58dac11e584d1bce8ce28db0ff6d08dab5f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "CryptoKittyTransferProxy",
            "label": "operators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/TransferProxies/CryptoKittyTransferProxy.sol:10"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "48715b6b0921d694da733d0053894d8ba083c6f9f5ccc52e331e09d80217a9ed": {
      "address": "0xcdCeB00D9D72390EdF03404110eF05C65b547cb9",
      "txHash": "0xa419f50773bc928ef3ee3cd857b7d14dfb9efa81f48fc1bae31e1a9742d40692",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "stakingContract",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:15"
          },
          {
            "contract": "TransferExecutor",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:16"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:17"
          },
          {
            "contract": "TransferExecutor",
            "label": "whitelistERC20",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:18"
          },
          {
            "contract": "NftMarketplace",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:29"
          },
          {
            "contract": "NftMarketplace",
            "label": "approvedOrders",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d9b2bd8e37cffbd078bc0e2b66ec7bc19ce06646a9e1f624121ead5bf4f3b3e5": {
      "address": "0x73994Fc4aC9EAb8e8E1c29E5C9d27A761D9Ab1eF",
      "txHash": "0xf2cf9af31c90addbcc603588763498f3a031304e5743886aee942a0173b14aa7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:42"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:45"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:434"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:178"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/GenesisKey.sol:23"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysForSale",
            "type": "t_uint256",
            "src": "contracts/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysPublicPurchased",
            "type": "t_uint256",
            "src": "contracts/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/GenesisKey.sol:45"
          },
          {
            "contract": "GenesisKey",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/GenesisKey.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "0113f77078108410e1fc623ee6cacd7f5745e7a148a5460b903531e893042844": {
      "address": "0x21339300DB87e1bE4ac9ee2a5f9EFC36A3F51bc7",
      "txHash": "0xa2f5c71c5a13cb523e168f2988ec4a457993f4904bbd85c9e6a074bceb8ad926",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:42"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:45"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:434"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:178"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:23"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysForSale",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysPublicPurchased",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:45"
          },
          {
            "contract": "GenesisKey",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/genesisKey/GenesisKey.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "4a19d7a7f702d736b560be23761ba8e8c72640114f41fdd783e04517b72a81d7": {
      "address": "0x0F78239245b45044d0f475A04c5cAA41E266c4eE",
      "txHash": "0xc3b320b14ed8cd60000cc7fa6972b1b0be3907d43345c51cb1c03ac0a9329453",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:42"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:45"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:434"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:178"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftProfileV1",
            "label": "_royalties",
            "type": "t_struct(RoyaltyInfo)9213_storage",
            "src": "contracts/domain/NftProfileV1.sol:29"
          },
          {
            "contract": "NftProfileV1",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/domain/NftProfileV1.sol:30"
          },
          {
            "contract": "NftProfileV1",
            "label": "_tokenUsedURIs",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfileV1.sol:31"
          },
          {
            "contract": "NftProfileV1",
            "label": "_profileDetails",
            "type": "t_mapping(t_uint256,t_struct(Bid)12794_storage)",
            "src": "contracts/domain/NftProfileV1.sol:32"
          },
          {
            "contract": "NftProfileV1",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/domain/NftProfileV1.sol:34"
          },
          {
            "contract": "NftProfileV1",
            "label": "profileAuctionContract",
            "type": "t_address",
            "src": "contracts/domain/NftProfileV1.sol:35"
          },
          {
            "contract": "NftProfileV1",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/domain/NftProfileV1.sol:36"
          },
          {
            "contract": "NftProfileV1",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftProfileV1.sol:37"
          }
        ],
        "types": {
          "t_struct(RoyaltyInfo)9213_storage": {
            "label": "struct NftProfileV1.RoyaltyInfo",
            "members": [
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint24"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Bid)12794_storage)": {
            "label": "mapping(uint256 => struct Bid)"
          },
          "t_struct(Bid)12794_storage": {
            "label": "struct Bid",
            "members": [
              {
                "label": "_nftTokens",
                "type": "t_uint256"
              },
              {
                "label": "_blockMinted",
                "type": "t_uint256"
              },
              {
                "label": "_profileURI",
                "type": "t_string_storage"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "04df48b639870ffd66df46776df032fb6ea7e4f8b12cf5cc89f6b71136f7199d": {
      "address": "0x8ab56e61Aa87a8391b4bCE7Ec0155d740986810A",
      "txHash": "0x96969796125f1cddfcfbdf0504d001181a6d5e66a58dd612ff1e40fa3d86df0a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/domain/ProfileAuctionV1.sol:24"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/domain/ProfileAuctionV1.sol:25"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "approvedBids",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/domain/ProfileAuctionV1.sol:26"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV1.sol:28"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "minter",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV1.sol:29"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV1.sol:30"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV1.sol:31"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV1.sol:32"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "genesisStakingContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV1.sol:33"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "publicStakingContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV1.sol:34"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV1.sol:35"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "coldWallet",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV1.sol:36"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "genesisKeyContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV1.sol:37"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "genesisKeyPercent",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuctionV1.sol:41"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "publicPoolPercent",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuctionV1.sol:42"
          },
          {
            "contract": "ProfileAuctionV1",
            "label": "minimumBid",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuctionV1.sol:43"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a14a8aaba6a5268a8f2616b2434cab4d00234e4c9f00b0b615e5a3da2a4c1507": {
      "address": "0x0c82A8a9e93101C5Bee4bece3771EE5c21e28837",
      "txHash": "0x252ee7a7e9b021727925a8e3cd92b55ade354da9539869684035412197a78526",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/domain/ProfileAuctionV2.sol:24"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/domain/ProfileAuctionV2.sol:25"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "approvedBids",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/domain/ProfileAuctionV2.sol:26"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV2.sol:28"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "minter",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV2.sol:29"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV2.sol:30"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV2.sol:31"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV2.sol:32"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "genesisStakingContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV2.sol:33"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "publicStakingContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV2.sol:34"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV2.sol:35"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "coldWallet",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV2.sol:36"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "genesisKeyContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV2.sol:37"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "genesisKeyPercent",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuctionV2.sol:41"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "publicPoolPercent",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuctionV2.sol:42"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "minimumBid",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuctionV2.sol:43"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "profilesToMint",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuctionV2.sol:45"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "eeaae65b5522c548ecc4878b5f02395985ac4c26b660e6128df34b3186aa32df": {
      "address": "0x0672ec7c27Bd28983444416ceB4D0DF3d2ECb849",
      "txHash": "0xc7d42b1bd1fc62b17e6fabfba7cc6bb3ae7623ab7d5caee86e9efc4014ffc1f8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/genesisKey/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/genesisKey/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/genesisKey/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/genesisKey/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/genesisKey/ERC721Upgradeable.sol:42"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/genesisKey/ERC721Upgradeable.sol:45"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/genesisKey/ERC721Upgradeable.sol:434"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/genesisKey/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/genesisKey/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/genesisKey/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/genesisKey/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/genesisKey/ERC721EnumerableUpgradeable.sol:178"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:23"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysForSale",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysPublicPurchased",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:45"
          },
          {
            "contract": "GenesisKey",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/genesisKey/GenesisKey.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "b8f9a40265e7df4f531dc949cec283ae355df98106b3027049303ae8887d4872": {
      "address": "0xD011F0fD7A843403165Bc9cBeb2343064a1A34d1",
      "txHash": "0xa0f0e661b302d63b74d2addd95c25b8249c802be02c966a2f6a072ed7e00939e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/genesisKey/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/genesisKey/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/genesisKey/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/genesisKey/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/genesisKey/ERC721Upgradeable.sol:42"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/genesisKey/ERC721Upgradeable.sol:45"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/genesisKey/ERC721Upgradeable.sol:434"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/genesisKey/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/genesisKey/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/genesisKey/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/genesisKey/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/genesisKey/ERC721EnumerableUpgradeable.sol:178"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:23"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysForSale",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysPublicPurchased",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:45"
          },
          {
            "contract": "GenesisKey",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/genesisKey/GenesisKey.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "5d5ab0e1bc66fe6ff684225a783cc7a75a8189915807d7ce6e4fb795872b97a9": {
      "address": "0xc3d64c2F994Df319F52f8158d787593E65872585",
      "txHash": "0x953d7cb0c02ed8dfd785191efe0bf091e7959187d5e853f1f7374dde62e445ec",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:42"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:45"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:434"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:178"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:23"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysForSale",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysPublicPurchased",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:45"
          },
          {
            "contract": "GenesisKey",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/genesisKey/GenesisKey.sol:46"
          },
          {
            "contract": "GenesisKey",
            "label": "claimId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingWhitelistClaims",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "d2bbe8eeaf3f4a50db4ec9720ce60a9cdb91457b754f89646f806fd01b1df944": {
      "address": "0xE73B373C251C8177D87758c2DfC7d10be8fFE553",
      "txHash": "0x8953c6eadccfcfbc65c5bd0bc71644cb65ee862f9d8867aa472609bbf7873cd1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/domain/ProfileAuctionV2.sol:23"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/domain/ProfileAuctionV2.sol:24"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "approvedBids",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/domain/ProfileAuctionV2.sol:25"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV2.sol:27"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "minter",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV2.sol:28"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV2.sol:29"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV2.sol:30"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV2.sol:31"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "genesisStakingContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV2.sol:32"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "publicStakingContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV2.sol:33"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV2.sol:34"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "coldWallet",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV2.sol:35"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "genesisKeyContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuctionV2.sol:36"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "genesisKeyPercent",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuctionV2.sol:40"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "publicPoolPercent",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuctionV2.sol:41"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "minimumBid",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuctionV2.sol:42"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "profilesToMint",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuctionV2.sol:43"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "oneTimeGenesisKeyMint",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuctionV2.sol:44"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "genesisKeyClaim",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "contracts/domain/ProfileAuctionV2.sol:46"
          },
          {
            "contract": "ProfileAuctionV2",
            "label": "genesisKeyClaimNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuctionV2.sol:47"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e4b6580308eac1544a3d3c889a89f359eeb840a84701e4df25e358e57fd51a6c": {
      "address": "0x6caa1adE816acAd1aDbda4C52E4796C95ad95C47",
      "txHash": "0x02ac9c926912d079d4a15868bc3adf9d4a4967c7bfa7599904c05ed323865725",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "stakingContract",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:15"
          },
          {
            "contract": "TransferExecutor",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:16"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:17"
          },
          {
            "contract": "TransferExecutor",
            "label": "whitelistERC20",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:18"
          },
          {
            "contract": "NftMarketplace",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:29"
          },
          {
            "contract": "NftMarketplace",
            "label": "approvedOrders",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "902fa94ef02d1a114e2a1896a2687bed045da1fa61bfa94aaa25a78d385d2e6f": {
      "address": "0x824FfdF568B6C37E25E964891fBFb41466ebdfC4",
      "txHash": "0x8f0870566f7c193f2d672661e372b312e7e0640c0c05cfd7333b7d0d745453b2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "stakingContract",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:15"
          },
          {
            "contract": "TransferExecutor",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:16"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:17"
          },
          {
            "contract": "TransferExecutor",
            "label": "whitelistERC20",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:18"
          },
          {
            "contract": "NftMarketplace",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:29"
          },
          {
            "contract": "NftMarketplace",
            "label": "approvedOrders",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c12b30a6343add1ec7418c4e02636020372fa25d0f42fb5afaddeced5d397653": {
      "address": "0xa75CFc8f9E0F032Be38DF619210c0c028eFA7bC1",
      "txHash": "0xc103a51c7ba3c75bb87aa675142d8402a930f63609ea1e53a8c4ee7921821a59",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "stakingContract",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:15"
          },
          {
            "contract": "TransferExecutor",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:16"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:17"
          },
          {
            "contract": "TransferExecutor",
            "label": "whitelistERC20",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:18"
          },
          {
            "contract": "NftMarketplace",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:29"
          },
          {
            "contract": "NftMarketplace",
            "label": "approvedOrders",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:30"
          },
          {
            "contract": "NftMarketplace",
            "label": "_approvedOrdersByNonce",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:31"
          },
          {
            "contract": "NftMarketplace",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b57628db15b9beca2728cdf709756b8e8e5eeea274b626fe3b4db70308a77589": {
      "address": "0x932986967bF8Ac03c59089Ee30ead4b74979e16e",
      "txHash": "0x56d136772e956d1c526e76663babded595e0041c72b07589dcaa4b20ef4bbae9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "stakingContract",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:15"
          },
          {
            "contract": "TransferExecutor",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:16"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:17"
          },
          {
            "contract": "TransferExecutor",
            "label": "whitelistERC20",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:18"
          },
          {
            "contract": "NftMarketplace",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:29"
          },
          {
            "contract": "NftMarketplace",
            "label": "approvedOrders",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:30"
          },
          {
            "contract": "NftMarketplace",
            "label": "_approvedOrdersByNonce",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:31"
          },
          {
            "contract": "NftMarketplace",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3e89961dae011b0b3eff64e680b141b4afea4213d1ead753f6818b892bf2062d": {
      "address": "0x2893f3Dcd73BbfBa84Cd3914B88E331c596Bc81a",
      "txHash": "0x1e626655f74ccc5f8359309bbf0305604df4fa993449ebe790bdc8cb3992e0e5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "stakingContract",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:15"
          },
          {
            "contract": "TransferExecutor",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:16"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:17"
          },
          {
            "contract": "TransferExecutor",
            "label": "whitelistERC20",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:18"
          },
          {
            "contract": "NftMarketplace",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:29"
          },
          {
            "contract": "NftMarketplace",
            "label": "approvedOrders",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:30"
          },
          {
            "contract": "NftMarketplace",
            "label": "_approvedOrdersByNonce",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:31"
          },
          {
            "contract": "NftMarketplace",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ed1712d9958e6a164ad48c2dcab0ab5069da3c25e1ddf44df8a7042370a2f56a": {
      "address": "0x0Cc4E4cAF25386e4be4956E71cFDc5Bb7FAA19d3",
      "txHash": "0x62212117529d61abd3d104305e3eb3b6398362a7ebbcea188bb26395f6de3b0d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "stakingContract",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:15"
          },
          {
            "contract": "TransferExecutor",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:16"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:17"
          },
          {
            "contract": "TransferExecutor",
            "label": "whitelistERC20",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:18"
          },
          {
            "contract": "NftMarketplace",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:29"
          },
          {
            "contract": "NftMarketplace",
            "label": "approvedOrders",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:30"
          },
          {
            "contract": "NftMarketplace",
            "label": "_approvedOrdersByNonce",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:31"
          },
          {
            "contract": "NftMarketplace",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a7ff04b7d0d074cdf3c9b6a55327ce602e1a6cd13e1b8c8b6c1244f782f70ebb": {
      "address": "0x4D068eBb0D7E45B77AdAc7300bd9Cb7e786C9C61",
      "txHash": "0x76e0d317f0d33a2e718d0a42d0688ca442b42ed8b022e0b7aa570207ea8540ed",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "stakingContract",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:15"
          },
          {
            "contract": "TransferExecutor",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:16"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:17"
          },
          {
            "contract": "TransferExecutor",
            "label": "whitelistERC20",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:18"
          },
          {
            "contract": "NftMarketplace",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:29"
          },
          {
            "contract": "NftMarketplace",
            "label": "approvedOrders",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:30"
          },
          {
            "contract": "NftMarketplace",
            "label": "_approvedOrdersByNonce",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:31"
          },
          {
            "contract": "NftMarketplace",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "265ef433a17d8cf330bc3f519b329ea4544ce40585aa6d2ee5e82a5946fd7f88": {
      "address": "0x9c2FE113F61B3Bb23DdD91D466F48aa5D3052569",
      "txHash": "0x37375d231e6dea45430c18e9cc8f24a02366a252ea249da2aebf507c550928c9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "stakingContract",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:15"
          },
          {
            "contract": "TransferExecutor",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:16"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:17"
          },
          {
            "contract": "TransferExecutor",
            "label": "whitelistERC20",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:18"
          },
          {
            "contract": "NftMarketplace",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:29"
          },
          {
            "contract": "NftMarketplace",
            "label": "approvedOrders",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:30"
          },
          {
            "contract": "NftMarketplace",
            "label": "_approvedOrdersByNonce",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:31"
          },
          {
            "contract": "NftMarketplace",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c436bae46cd007981875dafb3ae6c10e19adb62ea886ad851b0d25adaaa7710d": {
      "address": "0x8712635F08CD2F31F9B655cC3ca61815615901bB",
      "txHash": "0x81189ee0e57cceb81d42993753f1793be58c88b490b87ec432b8557c9949db4d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "stakingContract",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:15"
          },
          {
            "contract": "TransferExecutor",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:16"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:17"
          },
          {
            "contract": "TransferExecutor",
            "label": "whitelistERC20",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:18"
          },
          {
            "contract": "NftMarketplace",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:29"
          },
          {
            "contract": "NftMarketplace",
            "label": "approvedOrders",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:30"
          },
          {
            "contract": "NftMarketplace",
            "label": "_approvedOrdersByNonce",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:31"
          },
          {
            "contract": "NftMarketplace",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5900a45e89587c968393215eab2647fd6725013b0fe50f23fc84457497fb0f57": {
      "address": "0xeD05e482Dddf8f25Be3234d4E44f281e9Bf64D67",
      "txHash": "0x8bc2e985d0f9d9e112ffab1f096ab92d8d471448da183cbaf2d8d1323cd6ab8a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "stakingContract",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:15"
          },
          {
            "contract": "TransferExecutor",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:16"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:17"
          },
          {
            "contract": "TransferExecutor",
            "label": "whitelistERC20",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:18"
          },
          {
            "contract": "NftMarketplace",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:29"
          },
          {
            "contract": "NftMarketplace",
            "label": "approvedOrders",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:30"
          },
          {
            "contract": "NftMarketplace",
            "label": "_approvedOrdersByNonce",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:31"
          },
          {
            "contract": "NftMarketplace",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4f8d1a74d6d8210cf061efbaa6a5ff425ef57fc9ae1eb29d18f22aff845be675": {
      "address": "0x4FA5F2687043F45D7C3A2947BD563E5D9F60021e",
      "txHash": "0x5eacf4e7370d5b9a9b2e429d25649e29087333121774aaa95c68eb48e4fbafa5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "stakingContract",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:15"
          },
          {
            "contract": "TransferExecutor",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:16"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:17"
          },
          {
            "contract": "TransferExecutor",
            "label": "whitelistERC20",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:18"
          },
          {
            "contract": "NftMarketplace",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:29"
          },
          {
            "contract": "NftMarketplace",
            "label": "approvedOrders",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:30"
          },
          {
            "contract": "NftMarketplace",
            "label": "_approvedOrdersByNonce",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:31"
          },
          {
            "contract": "NftMarketplace",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5d977dd1b09a220bf93b2d2433a0b35acb2c388459ddd77ac6464cca4f6cc145": {
      "address": "0x249daB8e3cae15A839a43154D9093B7100dEaDFa",
      "txHash": "0x372b8d27721a66e07a1f9df723bda87442600bbd61ee70d49cc54e5c171c52c0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "stakingContract",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:15"
          },
          {
            "contract": "TransferExecutor",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:16"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:17"
          },
          {
            "contract": "TransferExecutor",
            "label": "whitelistERC20",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:18"
          },
          {
            "contract": "NftMarketplace",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:29"
          },
          {
            "contract": "NftMarketplace",
            "label": "approvedOrders",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:30"
          },
          {
            "contract": "NftMarketplace",
            "label": "_approvedOrdersByNonce",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:31"
          },
          {
            "contract": "NftMarketplace",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "33f723d5997d883770c969c9a71f75a24d3ff8980f4b9e44fe3c310549eb0887": {
      "address": "0xf93807dE215D0748bB875361C7C29944AAFbBb3B",
      "txHash": "0x41045a65caa22ca87c8ba2116c4c4d8d8580ffa7f1ecd4ade84784a154392319",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "stakingContract",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:15"
          },
          {
            "contract": "TransferExecutor",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:16"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:17"
          },
          {
            "contract": "TransferExecutor",
            "label": "whitelistERC20",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:18"
          },
          {
            "contract": "NftMarketplace",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:29"
          },
          {
            "contract": "NftMarketplace",
            "label": "approvedOrders",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:30"
          },
          {
            "contract": "NftMarketplace",
            "label": "_approvedOrdersByNonce",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:31"
          },
          {
            "contract": "NftMarketplace",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1ad849982cd3aecb066596b995b343cafe28adfe7164d5c0cfd896e72b15731c": {
      "address": "0x387b431ec6606ec35cE883d2068058d8de0147B8",
      "txHash": "0x19f569d62c35ff6a892c923743b5ecb6dd1ea03aec81221d396fbeab48824f78",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "stakingContract",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:15"
          },
          {
            "contract": "TransferExecutor",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:16"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:17"
          },
          {
            "contract": "TransferExecutor",
            "label": "whitelistERC20",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:18"
          },
          {
            "contract": "NftMarketplace",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:29"
          },
          {
            "contract": "NftMarketplace",
            "label": "approvedOrders",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:30"
          },
          {
            "contract": "NftMarketplace",
            "label": "_approvedOrdersByNonce",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:31"
          },
          {
            "contract": "NftMarketplace",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "966e82bf1c728410dead7a09314c99c9d08b7336c75e12360442ad32b448385e": {
      "address": "0x95583bf023b115803DC3D92b5a37B2feCB667249",
      "txHash": "0x2db2e3668ccdd0014cf92d13557ccbacb1001b993a0687b09faf17346b1c455c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "stakingContract",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:15"
          },
          {
            "contract": "TransferExecutor",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:16"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:17"
          },
          {
            "contract": "TransferExecutor",
            "label": "whitelistERC20",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:18"
          },
          {
            "contract": "NftMarketplace",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:29"
          },
          {
            "contract": "NftMarketplace",
            "label": "approvedOrders",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:30"
          },
          {
            "contract": "NftMarketplace",
            "label": "_approvedOrdersByNonce",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:31"
          },
          {
            "contract": "NftMarketplace",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7e57d32ccc1b9266014c7600f3660e98b569fb04bac5b9ee9452e0d929547b57": {
      "address": "0x6ad4Bd1Da2675Fd15BC69a0390Fc5a25cE64DAe5",
      "txHash": "0x8a2e116fe658b27986a3f9fb202ee1e4842d4cf8e2f2877f40578153ddc435bf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "stakingContract",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:15"
          },
          {
            "contract": "TransferExecutor",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:16"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:17"
          },
          {
            "contract": "TransferExecutor",
            "label": "whitelistERC20",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:18"
          },
          {
            "contract": "NftMarketplace",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:29"
          },
          {
            "contract": "NftMarketplace",
            "label": "approvedOrders",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:30"
          },
          {
            "contract": "NftMarketplace",
            "label": "_approvedOrdersByNonce",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:31"
          },
          {
            "contract": "NftMarketplace",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:32"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "84029271bb928eaa4c189c3bb9cb1868db5d8569ba1830dec26540e5b73dc848": {
      "address": "0xdAd818e145825FBb2D869DF4fE447A6722e75cd6",
      "txHash": "0x4ed8fc8292ce5f590853be22723caf4da7c424f2c029dd8c868ec9908ac6f907",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "contracts/genesisKey/modERC165Upgradeable.sol:36"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "contracts/genesisKey/modERC721Upgradeable.sol:22"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "contracts/genesisKey/modERC721Upgradeable.sol:25"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC721Upgradeable",
            "src": "contracts/genesisKey/modERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "contracts/genesisKey/modERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "contracts/genesisKey/modERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "contracts/genesisKey/modERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "contracts/genesisKey/modERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "108",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "contracts/genesisKey/modERC721Upgradeable.sol:265"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "wethAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:23"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "label": "multiSig",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "label": "startPublicSale",
            "offset": 20,
            "slot": "304",
            "type": "t_bool",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "label": "publicSaleStartSecond",
            "offset": 0,
            "slot": "305",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "label": "publicSaleDurationSeconds",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "label": "initialWethPrice",
            "offset": 0,
            "slot": "307",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "label": "finalWethPrice",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "label": "numKeysForSale",
            "offset": 0,
            "slot": "309",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "label": "numKeysPublicPurchased",
            "offset": 0,
            "slot": "310",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "label": "cancelledOrFinalized",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:46"
          },
          {
            "label": "claimableBlock",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "label": "remainingTeamAdvisorGrant",
            "offset": 0,
            "slot": "313",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "3f1a29d01d1a3e4be73209bdaaab6bca12393252dbd567abb512eb01bfb859a0": {
      "address": "0x3cA3F3F910E555fb94811fec672dBFD7E019985b",
      "txHash": "0x1834c8d634dfbed8910651080790a23bf0dbe24f33115ef1c3e9355c1bd7b759",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:30"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:33"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:39"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:42"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:434"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:178"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "NftProfile",
            "src": "contracts/domain/NftProfile.sol:21"
          },
          {
            "label": "_tokenUsedURIs",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "NftProfile",
            "src": "contracts/domain/NftProfile.sol:22"
          },
          {
            "label": "protocolFee",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "NftProfile",
            "src": "contracts/domain/NftProfile.sol:24"
          },
          {
            "label": "profileAuctionContract",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "NftProfile",
            "src": "contracts/domain/NftProfile.sol:25"
          },
          {
            "label": "nftErc20Contract",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "NftProfile",
            "src": "contracts/domain/NftProfile.sol:26"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "NftProfile",
            "src": "contracts/domain/NftProfile.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_string_memory_ptr": {
            "label": "string"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "a8c3ba6023f7cdad664fe07705ae3397fd8f42fa86f84e635dcb9889ad0cbf18": {
      "address": "0x1A77feC807E9924cf079C9d7384e37C79851F25C",
      "txHash": "0x5ba14c9df24b64c019466a382d90baa4c817deffa19567f97dc8efdf63370543",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "governor",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:16"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:17"
          },
          {
            "label": "nftToken",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:18"
          },
          {
            "label": "nftProfile",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:19"
          },
          {
            "label": "genesisStakingContract",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:20"
          },
          {
            "label": "nftBuyer",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:21"
          },
          {
            "label": "nftProfileHelperAddress",
            "offset": 0,
            "slot": "157",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:22"
          },
          {
            "label": "genesisKeyContract",
            "offset": 0,
            "slot": "158",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:23"
          },
          {
            "label": "merkleDistributorProfile",
            "offset": 0,
            "slot": "159",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:24"
          },
          {
            "label": "publicFee",
            "offset": 0,
            "slot": "160",
            "type": "t_uint256",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:26"
          },
          {
            "label": "publicMintBool",
            "offset": 0,
            "slot": "161",
            "type": "t_bool",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:27"
          },
          {
            "label": "genKeyMerkleOnly",
            "offset": 1,
            "slot": "161",
            "type": "t_bool",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:28"
          },
          {
            "label": "genesisKeyClaimNumber",
            "offset": 0,
            "slot": "162",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "707a3b603f69d4e99ade957733d4d7cf8b726255cd393489d1e4f434af17851e": {
      "address": "0x1DADdd1658B4c4BF171D2A9CB9b22D82e69bF913",
      "txHash": "0x999983594513edfc425119ab5e8606219a5ff7b464bf6a15cf997eb555c9dad1",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NftTransferProxy",
            "src": "contracts/marketplace/TransferProxies/NftTransferProxy.sol:9"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "46cfc90b85cd1f21524422237f59068826e9487d07e2275cbffe0f94cb69b6ce": {
      "address": "0x24531A12A8131D762dD030e4579499DAEFC02f89",
      "txHash": "0xe695a1e8cbb72dc6be4df697df9ffe079e89f782a7df1ee0bf9348627a6b6084",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20TransferProxy",
            "src": "contracts/marketplace/TransferProxies/ERC20TransferProxy.sol:9"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "82cf7bf687f172ab00422c396bc544165ff7cd13b58c27d8293589080095fe61": {
      "address": "0x8857f746879E4413A56Bd45B69ED5651611C1294",
      "txHash": "0xf452220a3386776e5e6f2bf3479e21d84bedcaf977f34da6efa099b750d903d9",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CryptoKittyTransferProxy",
            "src": "contracts/marketplace/TransferProxies/CryptoKittyTransferProxy.sol:10"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "09110f858f4479bf7adebce9ad6e7a94fa52168bd7a1af0d5eaa8d14921e0410": {
      "address": "0xa9C8CC1bc2f3fEb69B445e90f9Ff9938c9dE7583",
      "txHash": "0x291d86f7338bf7bcb55748d5fd458595c91978c9ae816879de3f4638fcf5fc1d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "nftBuyContract",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "TransferExecutor",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:13"
          },
          {
            "label": "protocolFee",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "TransferExecutor",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:14"
          },
          {
            "label": "proxies",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_bytes4,t_address)",
            "contract": "TransferExecutor",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:16"
          },
          {
            "label": "whitelistERC20",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TransferExecutor",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:17"
          },
          {
            "label": "nftToken",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "TransferExecutor",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:19"
          },
          {
            "label": "cancelledOrFinalized",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NftMarketplace",
            "src": "contracts/marketplace/NftMarketplace.sol:27"
          },
          {
            "label": "_approvedOrdersByNonce",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "NftMarketplace",
            "src": "contracts/marketplace/NftMarketplace.sol:28"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NftMarketplace",
            "src": "contracts/marketplace/NftMarketplace.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "6ce006ac0a202d0a292e175d26371870388e0ea9461603c42722f6b82a9c0ba0": {
      "address": "0x1ddd02D080681b3dc14f79c48B785CC1D3973928",
      "txHash": "0x1b96e4ae91a1f95e529b78dd7d04305c01528c924bd9778855520cebc6bb4c6b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "contracts/genesisKey/modERC165Upgradeable.sol:36"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "contracts/genesisKey/modERC721Upgradeable.sol:22"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "contracts/genesisKey/modERC721Upgradeable.sol:25"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC721Upgradeable",
            "src": "contracts/genesisKey/modERC721Upgradeable.sol:27"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "contracts/genesisKey/modERC721Upgradeable.sol:30"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "contracts/genesisKey/modERC721Upgradeable.sol:33"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "contracts/genesisKey/modERC721Upgradeable.sol:36"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "contracts/genesisKey/modERC721Upgradeable.sol:39"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "108",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "contracts/genesisKey/modERC721Upgradeable.sol:287"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "wethAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:23"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "label": "multiSig",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "label": "startPublicSale",
            "offset": 20,
            "slot": "304",
            "type": "t_bool",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "label": "publicSaleStartSecond",
            "offset": 0,
            "slot": "305",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "label": "publicSaleDurationSeconds",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "label": "initialWethPrice",
            "offset": 0,
            "slot": "307",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "label": "finalWethPrice",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "label": "numKeysForSale",
            "offset": 0,
            "slot": "309",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "label": "numKeysPublicPurchased",
            "offset": 0,
            "slot": "310",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "label": "cancelledOrFinalized",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:45"
          },
          {
            "label": "claimableBlock",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:46"
          },
          {
            "label": "remainingTeamAdvisorGrant",
            "offset": 0,
            "slot": "313",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "66a9471f7657cd45bd39dbffb82634312a709f165755e31fc01e4b42a8c163ab": {
      "address": "0xf43dECcB1ED84F94D465FAb39F43De3Be1F0e8a3",
      "txHash": "0xe378c4dbce3ca2bff4b129485d0d6260e0ef3ea755185f0bb9bd6fe7e62e9ba8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/genesisKey/modERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:42"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:45"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:434"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:23"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysForSale",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysPublicPurchased",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:45"
          },
          {
            "contract": "GenesisKey",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/genesisKey/GenesisKey.sol:46"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "4dd70d893265fb0844513fb32014d80cc63b670487b61de5189426865945a732": {
      "address": "0x01EcBD52c3aaBa522Eb5f458d66DAf7CF25FA210",
      "txHash": "0xc9a36aafa061d566055ef943fdcfd714ae02852854448d04b01984fc63041370",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/genesisKey/modERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:42"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:45"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/oz_modified/ERC721Upgradeable.sol:434"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/oz_modified/ERC721EnumerableUpgradeable.sol:178"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/domain/NftProfile.sol:21"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenUsedURIs",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfile.sol:22"
          },
          {
            "contract": "NftProfile",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/domain/NftProfile.sol:24"
          },
          {
            "contract": "NftProfile",
            "label": "profileAuctionContract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:25"
          },
          {
            "contract": "NftProfile",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:26"
          },
          {
            "contract": "NftProfile",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:27"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "78898f7ffbfba86ea7b173dc54dd2d3cad12cab484d2d6bc1bf01b2c495f1b41": {
      "address": "0xc12dd3D35C5B22B90229a027afD837fa707B5Ad4",
      "txHash": "0x11c2b3d90849e80f8ef26e3842538929190b63fac90884d43746405b10be4b06",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuction",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:16"
          },
          {
            "contract": "ProfileAuction",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:17"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftToken",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:18"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:19"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisStakingContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:20"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftBuyer",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:21"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:22"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:23"
          },
          {
            "contract": "ProfileAuction",
            "label": "publicFee",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuction.sol:25"
          },
          {
            "contract": "ProfileAuction",
            "label": "publicMintBool",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:26"
          },
          {
            "contract": "ProfileAuction",
            "label": "genKeyWhitelistOnly",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:27"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyClaimNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e8dfaafb93fffe0a3184d4209658cd8a0a555bd886eef57791c2fd9e20e072a8": {
      "address": "0x487FD7C7B3869B50BB7e155891cDf8EefA822f13",
      "txHash": "0xc00b277ac808a59a6c067da2d254b45be26a41cda777d6bd8f6e46ef27ef9f99",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3b29a4753a6d0c802365b5166132ceab5a4929f22d9eb6d8b51c7a76fdb8d73f": {
      "address": "0xDdE3E8BeEb4aE8345df3a3B9aB524979bD9f8463",
      "txHash": "0x384aeb5106b364be482a97876b34ef41f81a70fcbaaa4fc459116fa281e232df",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "MarketplaceEvent",
            "label": "marketPlace",
            "type": "t_address",
            "src": "contracts/marketplace/MarketplaceEvent.sol:10"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "08cb5320408b701aa1253eb7003099aa2a4632585c373af86f576b39e40688ab": {
      "address": "0x9556449F3a9F06196A01E92d34e42Efb466073c0",
      "txHash": "0x5e32d599133a78c712e3995cd036a664d79231348b50e181f81d4b5837b1a377",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "nftBuyContract",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:18"
          },
          {
            "contract": "TransferExecutor",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:19"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:21"
          },
          {
            "contract": "TransferExecutor",
            "label": "whitelistERC20",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:22"
          },
          {
            "contract": "TransferExecutor",
            "label": "royaltyInfo",
            "type": "t_mapping(t_address,t_struct(RoyaltyInfo)14800_storage)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:23"
          },
          {
            "contract": "TransferExecutor",
            "label": "nftToken",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:25"
          },
          {
            "contract": "TransferExecutor",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:206"
          },
          {
            "contract": "NftMarketplace",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:19"
          },
          {
            "contract": "NftMarketplace",
            "label": "_approvedOrdersByNonce",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:20"
          },
          {
            "contract": "NftMarketplace",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:21"
          },
          {
            "contract": "NftMarketplace",
            "label": "validationLogic",
            "type": "t_contract(ValidationLogic)14781",
            "src": "contracts/marketplace/NftMarketplace.sol:22"
          },
          {
            "contract": "NftMarketplace",
            "label": "marketplaceEvent",
            "type": "t_contract(MarketplaceEvent)12780",
            "src": "contracts/marketplace/NftMarketplace.sol:23"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(ValidationLogic)14781": {
            "label": "contract ValidationLogic"
          },
          "t_contract(MarketplaceEvent)12780": {
            "label": "contract MarketplaceEvent"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(RoyaltyInfo)14800_storage)": {
            "label": "mapping(address => struct TransferExecutor.RoyaltyInfo)"
          },
          "t_struct(RoyaltyInfo)14800_storage": {
            "label": "struct TransferExecutor.RoyaltyInfo",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "percent",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "16362590e488a760c5daa771975127bd697b03eae47e2072141768d19eee4cbb": {
      "address": "0xe190Dde27bed3aB6cBcF62E155aA485D1228520F",
      "txHash": "0xbe5adcb9a31bb583e11e462ae47780d231166f586253cffcf5ca24154d512dc6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/genesisKey/modERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:73"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:76"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:79"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:82"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)9929_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:88"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)9938_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:91"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:94"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:97"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:682"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysForSale",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:33"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysPublicPurchased",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:34"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)9929_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)9929_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(AddressData)9938_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)9938_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "fb32aa1e294afaa696075ff7fec4d9aebb41f382a75848759d428034c27e997b": {
      "address": "0xd60fb4F9fd51eC20402625Ea39494b28111b4Ed3",
      "txHash": "0x43b1eb816f59bd7af0f1d7f51092d9b732e7a27579c0182fa8c565c057a04740",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/genesisKey/modERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:73"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:76"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:79"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:82"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)9929_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:88"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)9938_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:91"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:94"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:97"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:682"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/domain/NftProfile.sol:15"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenUsedURIs",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfile.sol:16"
          },
          {
            "contract": "NftProfile",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/domain/NftProfile.sol:18"
          },
          {
            "contract": "NftProfile",
            "label": "profileAuctionContract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:19"
          },
          {
            "contract": "NftProfile",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:20"
          },
          {
            "contract": "NftProfile",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:21"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)9929_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)9929_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(AddressData)9938_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)9938_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "159a37e75a4a8f918e8276b03c0c66bbf8f893b9c62ddd8278588411c90f08c6": {
      "address": "0x771802dDc03173D0284ee7B046cf02A6e802F5cc",
      "txHash": "0xc9e256e345374d35617d21dacc08eaa5846781b89b75e5b97ead5695dc245534",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuction",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:15"
          },
          {
            "contract": "ProfileAuction",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:16"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftToken",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:17"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:18"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisStakingContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:19"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftBuyer",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:20"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:21"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:22"
          },
          {
            "contract": "ProfileAuction",
            "label": "publicFee",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuction.sol:24"
          },
          {
            "contract": "ProfileAuction",
            "label": "publicMintBool",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:25"
          },
          {
            "contract": "ProfileAuction",
            "label": "genKeyWhitelistOnly",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:26"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyClaimNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c384f6a7c056bf5a5d079db3c1b1f3d930c9e63e5e665dab9f2cc7501f313c45": {
      "address": "0x5307ef69dEA1dDa5459a0122122966589c1148Cc",
      "txHash": "0x8c7a8519318d61463c924fdf1be6c89c31d48dd027c6588ad94a74d09bae3bc8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:73"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:76"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:79"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:82"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)2209_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:88"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)2218_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:91"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:94"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:97"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:682"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysForSale",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:33"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysPublicPurchased",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:34"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)2209_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)2209_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(AddressData)2218_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)2218_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "fcb0c9d6428cef0f0e852e5fcf0fdffef1cdc4161c5cd6e307d1656defb0e6a4": {
      "address": "0x56aE523A5996852C4C3f8eDde7a9335D4F958A13",
      "txHash": "0xfe4342b9c295859ab37c8c7a40bc121ab9ca6bbf82642f8e7dd16272612edf6c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:73"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:76"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:79"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:82"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)2144_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:88"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)2153_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:91"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:94"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:97"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:682"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/domain/NftProfile.sol:15"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenUsedURIs",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfile.sol:16"
          },
          {
            "contract": "NftProfile",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/domain/NftProfile.sol:18"
          },
          {
            "contract": "NftProfile",
            "label": "profileAuctionContract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:19"
          },
          {
            "contract": "NftProfile",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:20"
          },
          {
            "contract": "NftProfile",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:21"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)2144_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)2144_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(AddressData)2153_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)2153_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "36108931a81e1a9c7d7478a36dfb511ad30b9ea8fac72b5a86388c1e1a7a3d17": {
      "address": "0x7D79EFBED06488c840fAC3875929D55c02f0294E",
      "txHash": "0x0ff72ecdee2056d03836584d12b72e07acef604a0a57dc78abf1654ad4b5f6d5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:73"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:76"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:79"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:82"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)2209_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:88"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)2218_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:91"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:94"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:97"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:684"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysForSale",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:33"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysPublicPurchased",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:34"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)2209_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)2209_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(AddressData)2218_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)2218_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "6d86a1a83be274d635fe50eac884c177753b9798e918a008bc1d002a281e29a2": {
      "address": "0x096d239d9F6CD10BFE9fE53d4d52AB16c9B88ded",
      "txHash": "0xf70677513ff47e60e1b18b06580cfb60fb92270a5f426d372e820cd3e881e6f6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/genesisKey/modERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:73"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:76"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:79"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:82"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)9929_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:88"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)9938_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:91"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:94"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:97"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:683"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/domain/NftProfile.sol:15"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenUsedURIs",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfile.sol:16"
          },
          {
            "contract": "NftProfile",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/domain/NftProfile.sol:18"
          },
          {
            "contract": "NftProfile",
            "label": "profileAuctionContract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:19"
          },
          {
            "contract": "NftProfile",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:20"
          },
          {
            "contract": "NftProfile",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:21"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)9929_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)9929_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(AddressData)9938_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)9938_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "d3e6bb308d306600daffa859725905d8ca01b277f29e3ccea0484e16b7c98d25": {
      "address": "0x390715D1080e5019888CD9b6803927F9B540e5E6",
      "txHash": "0x6b703d6f8f239ffd67457a89b5f636dcf023b87a07336596d2c455cbe8dbc1c5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:73"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:76"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:79"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:82"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)2209_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:88"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)2218_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:91"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:94"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:97"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:688"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysForSale",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:33"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysPublicPurchased",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:34"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)2209_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)2209_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(AddressData)2218_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)2218_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "f981dd3beca2eb464253dbd92d784c046dd401e04eb290d38377449ebbd2335b": {
      "address": "0xa4f94Ad599578cDCCbF4d3FE1510439a007a8235",
      "txHash": "0x3813ec7df1625fcab98d169df63d523206124fe3c6c4bf6f653b174e9297cff0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/genesisKey/modERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:73"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:76"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:79"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:82"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)9929_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:88"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)9938_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:91"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:94"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:97"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:684"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysForSale",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:33"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysPublicPurchased",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:34"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)9929_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)9929_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(AddressData)9938_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)9938_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "5a5e0e0526b66953859f922bcaad611745aeb98fb9402ce84d51648c3b969626": {
      "address": "0xf04A008C35c6E168661189bcf8BFdeede8fc7309",
      "txHash": "0x92a9acf5bf0df1ab7deece474cf332140e102bcfa14f5d660d2f37cbb3573126",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/genesisKey/modERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:73"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:76"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:79"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:82"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)9929_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:88"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)9938_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:91"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:94"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:97"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:688"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysForSale",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:33"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysPublicPurchased",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:34"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:49"
          },
          {
            "contract": "GenesisKey",
            "label": "lastClaimTime",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)9929_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)9929_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(AddressData)9938_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)9938_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "c395516edb0d21e29bcd817640a2448cac3cc9851d6b60c85d6651ef18f66351": {
      "address": "0xad4C038f2744a8ab687A7b8fdDfE9DABD3d8fb6c",
      "txHash": "0x0c468c5feb511f0cd38916979097485f0e1aaa99bb90594bdf98a856cc0be569",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:73"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:76"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:79"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:82"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)9928_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:88"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)9937_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:91"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:94"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:97"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:688"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/domain/NftProfile.sol:15"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenUsedURIs",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfile.sol:16"
          },
          {
            "contract": "NftProfile",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/domain/NftProfile.sol:18"
          },
          {
            "contract": "NftProfile",
            "label": "profileAuctionContract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:19"
          },
          {
            "contract": "NftProfile",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:20"
          },
          {
            "contract": "NftProfile",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:21"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)9928_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)9928_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(AddressData)9937_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)9937_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "e8387b4e948b0d887686f255d50872125cedfd3d783fc2cbab6a31b72fd278f5": {
      "address": "0x627B5f2A47e8d0798095c6feC33dd84A67EC3357",
      "txHash": "0xc2b83422246a0ab64dd98dbb13e73fb0bc664bdcea5ca997ada756a20f7da73b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuction",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:15"
          },
          {
            "contract": "ProfileAuction",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:16"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftToken",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:17"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:18"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisStakingContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:19"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftBuyer",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:20"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:21"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:22"
          },
          {
            "contract": "ProfileAuction",
            "label": "publicFee",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuction.sol:24"
          },
          {
            "contract": "ProfileAuction",
            "label": "publicMintBool",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:25"
          },
          {
            "contract": "ProfileAuction",
            "label": "genKeyWhitelistOnly",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:26"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyClaimNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "586b5f781154172f363d86eae9777ec547b003b4459b88eaa51efb1a2d31f8d0": {
      "address": "0xa3715412F5Eba4DEa64D8C6Afb851F58fD9Ef08a",
      "txHash": "0x08fbdf1ee0b584afaa27979401e68b05f67939f8e61ca06a6f53c2910ed67d52",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:73"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:76"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:79"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:82"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)9930_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:88"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)9939_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:91"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:94"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:97"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:688"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysForSale",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:33"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysPublicPurchased",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:34"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:49"
          },
          {
            "contract": "GenesisKey",
            "label": "lastClaimTime",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)9930_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)9930_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(AddressData)9939_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)9939_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "9a94560ca9c615db6c9261c233fa9e25be8fc5ef1d8f3a3155541b08a6e04b56": {
      "address": "0xfC743589dAed7F1C7C6b11bd77ecC8Cb6eC76230",
      "txHash": "0x3120d36f2e592af764069b6b63012ca23ef989808cc230c52a066030c1c3a96a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:73"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:76"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:79"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:82"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)10148_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:88"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)10157_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:91"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:94"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:97"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:688"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysForSale",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:33"
          },
          {
            "contract": "GenesisKey",
            "label": "numKeysPublicPurchased",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:34"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:49"
          },
          {
            "contract": "GenesisKey",
            "label": "lastClaimTime",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)10148_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)10148_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(AddressData)10157_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)10157_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "2cb1155811bc9f645490564aea34582a9fcb751bfcd78836941a6893b60f61a9": {
      "address": "0x05d277DE3642ee03738Be2ce260B2a206Ae43d6A",
      "txHash": "0xf40c13bf38610ada82a5749ce23591447b07bf200ab755aeb88df6ed9bf3fa8a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:21"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:22"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "GK",
            "type": "t_contract(IGK)13774",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IGK)13774": {
            "label": "contract IGK"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fa064df6838d193f109be43b06c706e0a4b232b8831ada03f8cb66194e0065a0": {
      "address": "0xb65e283eB53D0093013dCCC5BAd773e81c3B3C47",
      "txHash": "0xca52dfd29cccc20dc444712ac1fea2d1242620ffa0ded96084c7bc25ee90baa6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:73"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:76"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:79"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:82"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)2209_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:88"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)2218_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:91"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:94"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:97"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:688"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:45"
          },
          {
            "contract": "GenesisKey",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/genesisKey/GenesisKey.sol:46"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "lastClaimTime",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)2209_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)2209_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(AddressData)2218_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)2218_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "51577d560414ff62076a45f4c87970088328147d673d0febc2fa7829930cb460": {
      "address": "0x863DeB1543d95D93fc0221fE709024f456739d62",
      "txHash": "0xe41639c35769fc92b3e009ef012334c7bf9e87cd39058e642eddaf0599fadbd7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:73"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:76"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:79"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:82"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)10224_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:88"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)10233_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:91"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:94"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:97"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:688"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:34"
          },
          {
            "contract": "GenesisKey",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/genesisKey/GenesisKey.sol:35"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:36"
          },
          {
            "contract": "GenesisKey",
            "label": "lastClaimTime",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:37"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)10224_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)10224_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(AddressData)10233_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)10233_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "5f1df77a567e2a6a86a3fda70daf9344ed76b5748c2c98befcc214f65aceaca1": {
      "address": "0x37EFdd23BC3423B31b51D3d8eabfD2B5Cc70E981",
      "txHash": "0x2361ba6d9d96cffdded0c38bd6134514af0f6d25fafe06a5d4b201af5c16158f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuction",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:15"
          },
          {
            "contract": "ProfileAuction",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:16"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftToken",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:17"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:18"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisStakingContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:19"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftBuyer",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:20"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:21"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:22"
          },
          {
            "contract": "ProfileAuction",
            "label": "publicFee",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuction.sol:24"
          },
          {
            "contract": "ProfileAuction",
            "label": "publicMintBool",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:25"
          },
          {
            "contract": "ProfileAuction",
            "label": "genKeyWhitelistOnly",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:26"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyClaimNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fc84e31247c619462967707a708c68a01f481bf68d5916ac73b75a1def0f6ccc": {
      "address": "0x43653AF07633BBE22Cd5840dD5E616D4Cd357AE6",
      "txHash": "0x082878f687fb5cb8b951018845bd338b7b732464752a7570c23d58d97c71d3c7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:73"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:76"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:79"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:82"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)10224_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:88"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)10233_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:91"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:94"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:97"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:688"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:34"
          },
          {
            "contract": "GenesisKey",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/genesisKey/GenesisKey.sol:35"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:36"
          },
          {
            "contract": "GenesisKey",
            "label": "lastClaimTime",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:37"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)10224_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)10224_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(AddressData)10233_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)10233_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "ef6e804a638da604fd2441ebeacf7ddc2a88be3739e4f2de84c1fc81e1b88415": {
      "address": "0xA0164d065d09A36E112c16015d282DA3Ca3D4275",
      "txHash": "0xf14081e79376883eb6b0ae2f4c308257cd7817d0d84ef9d1ff0a917338dbab2c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:73"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:76"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:79"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:82"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)10649_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:88"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)10658_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:91"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:94"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:97"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:688"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:18"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:19"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:20"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:21"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:22"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:23"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "lastClaimTime",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:33"
          },
          {
            "contract": "GenesisKey",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:36"
          },
          {
            "contract": "GenesisKey",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)10649_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)10649_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(AddressData)10658_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)10658_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "a57063e71b9cb122951d360172511cdf9a26d9f40dd9c7b6831d897e4a47aacd": {
      "address": "0x50b73721E5c228334B0910B6c513Bf7182072f0B",
      "txHash": "0xabf39b483249c36e6da11217b9fc0551991bdbc9397cf2a6dc2776c3048787c2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "Vesting",
            "label": "nftToken",
            "type": "t_address",
            "src": "contracts/governance/vesting.sol:32"
          },
          {
            "contract": "Vesting",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/governance/vesting.sol:33"
          },
          {
            "contract": "Vesting",
            "label": "claimedAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:35"
          },
          {
            "contract": "Vesting",
            "label": "vestingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:36"
          },
          {
            "contract": "Vesting",
            "label": "vestingBegin",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:37"
          },
          {
            "contract": "Vesting",
            "label": "vestingCliff",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:38"
          },
          {
            "contract": "Vesting",
            "label": "vestingEnd",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:39"
          },
          {
            "contract": "Vesting",
            "label": "lastUpdate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:40"
          },
          {
            "contract": "Vesting",
            "label": "installment",
            "type": "t_mapping(t_address,t_enum(VestingInstallments)13302)",
            "src": "contracts/governance/vesting.sol:41"
          },
          {
            "contract": "Vesting",
            "label": "initializedVestor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/governance/vesting.sol:43"
          },
          {
            "contract": "Vesting",
            "label": "revokedVestor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/governance/vesting.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_enum(VestingInstallments)13302)": {
            "label": "mapping(address => enum Vesting.VestingInstallments)"
          },
          "t_enum(VestingInstallments)13302": {
            "label": "enum Vesting.VestingInstallments",
            "members": [
              "MONTHLY",
              "QUARTERLY"
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "734cdd64d251efb47539ad6aa41c9d0450e2adf53856b14b4f2e8977abae2752": {
      "address": "0xf587d350953418beF0088Ad62d5a2320e97E3295",
      "txHash": "0x4a07088200e7482aca9860d58f893efeeecb475066f189a7153288db876b0d7d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:73"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:76"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:79"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:82"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)10649_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:88"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)10658_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:91"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:94"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:97"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:688"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/domain/NftProfile.sol:15"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenUsedURIs",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfile.sol:16"
          },
          {
            "contract": "NftProfile",
            "label": "_expiryTimeline",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfile.sol:17"
          },
          {
            "contract": "NftProfile",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/domain/NftProfile.sol:19"
          },
          {
            "contract": "NftProfile",
            "label": "profileAuctionContract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:20"
          },
          {
            "contract": "NftProfile",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:21"
          },
          {
            "contract": "NftProfile",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:22"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)10649_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)10649_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(AddressData)10658_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)10658_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "3484fc2175e41c0f1456a41a8daf629e1847dd72a79c1711aa01b42447cff549": {
      "address": "0xC81B3aedFd5d0D28985184200a6826D6ceA78cE5",
      "txHash": "0xf0043e3cfb84fa7ddf43dd30edf7297aae41735f4f12c4b883e93b2b5078cbf5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuction",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:18"
          },
          {
            "contract": "ProfileAuction",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:19"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftToken",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:20"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:21"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisStakingContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:22"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftBuyer",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:23"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:24"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:25"
          },
          {
            "contract": "ProfileAuction",
            "label": "publicFee",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuction.sol:27"
          },
          {
            "contract": "ProfileAuction",
            "label": "publicMintBool",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:28"
          },
          {
            "contract": "ProfileAuction",
            "label": "genKeyWhitelistOnly",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:29"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyClaimNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:31"
          },
          {
            "contract": "ProfileAuction",
            "label": "lengthPremium",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "38ce91d0472508a5a688db69e481659d376f1f1f0ac86ac8f46f30f19fae5fbf": {
      "address": "0x476861725A14c775D950637856c8c80a67d54c31",
      "txHash": "0xb749b7970ffcd1ab6bfbcbdb7803de72486491a88256bb1663d8437ef5599e04",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "nftBuyContract",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:18"
          },
          {
            "contract": "TransferExecutor",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:19"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:21"
          },
          {
            "contract": "TransferExecutor",
            "label": "whitelistERC20",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:22"
          },
          {
            "contract": "TransferExecutor",
            "label": "royaltyInfo",
            "type": "t_mapping(t_address,t_struct(RoyaltyInfo)16752_storage)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:23"
          },
          {
            "contract": "TransferExecutor",
            "label": "nftToken",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:25"
          },
          {
            "contract": "TransferExecutor",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:206"
          },
          {
            "contract": "NftMarketplace",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:19"
          },
          {
            "contract": "NftMarketplace",
            "label": "_approvedOrdersByNonce",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:20"
          },
          {
            "contract": "NftMarketplace",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:21"
          },
          {
            "contract": "NftMarketplace",
            "label": "validationLogic",
            "type": "t_contract(ValidationLogic)16733",
            "src": "contracts/marketplace/NftMarketplace.sol:22"
          },
          {
            "contract": "NftMarketplace",
            "label": "marketplaceEvent",
            "type": "t_contract(MarketplaceEvent)14732",
            "src": "contracts/marketplace/NftMarketplace.sol:23"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(ValidationLogic)16733": {
            "label": "contract ValidationLogic"
          },
          "t_contract(MarketplaceEvent)14732": {
            "label": "contract MarketplaceEvent"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(RoyaltyInfo)16752_storage)": {
            "label": "mapping(address => struct TransferExecutor.RoyaltyInfo)"
          },
          "t_struct(RoyaltyInfo)16752_storage": {
            "label": "struct TransferExecutor.RoyaltyInfo",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "percent",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0868346b22e53f4c9cefc6f5342c3944036dcca1955fed3a1598faf0326a07a9": {
      "address": "0x0784B4852c3f85D95EB0fD3034B55cC0937FDa93",
      "txHash": "0xa4426164203699979a51bec347da909ab5e186b7beadab5a7a55857ec56f8467",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "Vesting",
            "label": "nftToken",
            "type": "t_address",
            "src": "contracts/governance/vesting.sol:32"
          },
          {
            "contract": "Vesting",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/governance/vesting.sol:33"
          },
          {
            "contract": "Vesting",
            "label": "claimedAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:35"
          },
          {
            "contract": "Vesting",
            "label": "vestingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:36"
          },
          {
            "contract": "Vesting",
            "label": "vestingBegin",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:37"
          },
          {
            "contract": "Vesting",
            "label": "vestingCliff",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:38"
          },
          {
            "contract": "Vesting",
            "label": "vestingEnd",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:39"
          },
          {
            "contract": "Vesting",
            "label": "lastUpdate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:40"
          },
          {
            "contract": "Vesting",
            "label": "installment",
            "type": "t_mapping(t_address,t_enum(VestingInstallments)13302)",
            "src": "contracts/governance/vesting.sol:41"
          },
          {
            "contract": "Vesting",
            "label": "initializedVestor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/governance/vesting.sol:43"
          },
          {
            "contract": "Vesting",
            "label": "revokedVestor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/governance/vesting.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_enum(VestingInstallments)13302)": {
            "label": "mapping(address => enum Vesting.VestingInstallments)"
          },
          "t_enum(VestingInstallments)13302": {
            "label": "enum Vesting.VestingInstallments",
            "members": [
              "MONTHLY",
              "QUARTERLY"
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8f1f7885eef24d9cf2d4e960cf792191c79d4964baf93fc2ebcfc59bce66e884": {
      "address": "0x97B3C70a7366146Af1Fa38A962b812b73cDb4897",
      "txHash": "0x0a7d0dc3e2b97767e4dc7a5eedb6ca64a16e6c1e81ca1c77898f6530a2ccb896",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "Vesting",
            "label": "nftToken",
            "type": "t_address",
            "src": "contracts/governance/vesting.sol:42"
          },
          {
            "contract": "Vesting",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/governance/vesting.sol:43"
          },
          {
            "contract": "Vesting",
            "label": "claimedAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:45"
          },
          {
            "contract": "Vesting",
            "label": "vestingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:46"
          },
          {
            "contract": "Vesting",
            "label": "vestingBegin",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:47"
          },
          {
            "contract": "Vesting",
            "label": "vestingCliff",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:48"
          },
          {
            "contract": "Vesting",
            "label": "vestingEnd",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:49"
          },
          {
            "contract": "Vesting",
            "label": "lastUpdate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:50"
          },
          {
            "contract": "Vesting",
            "label": "installment",
            "type": "t_mapping(t_address,t_enum(VestingInstallments)1224)",
            "src": "contracts/governance/vesting.sol:51"
          },
          {
            "contract": "Vesting",
            "label": "initializedVestor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/governance/vesting.sol:53"
          },
          {
            "contract": "Vesting",
            "label": "revokedVestor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/governance/vesting.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_enum(VestingInstallments)1224)": {
            "label": "mapping(address => enum Vesting.VestingInstallments)"
          },
          "t_enum(VestingInstallments)1224": {
            "label": "enum Vesting.VestingInstallments",
            "members": [
              "MONTHLY",
              "QUARTERLY"
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0bee082c05218c5bf95810699bcf75199300c9eb943a49d747dea8f0c2eac905": {
      "address": "0x14D1e4BEDcbA9a701c40CbD67E9B6b760cF59F28",
      "txHash": "0x9fbd0fff413d9702d213c58d60f8fea37dfd6d221c6c809b6c3e80fa99db239a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "Vesting",
            "label": "nftToken",
            "type": "t_address",
            "src": "contracts/governance/vesting.sol:42"
          },
          {
            "contract": "Vesting",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/governance/vesting.sol:43"
          },
          {
            "contract": "Vesting",
            "label": "claimedAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:45"
          },
          {
            "contract": "Vesting",
            "label": "vestingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:46"
          },
          {
            "contract": "Vesting",
            "label": "vestingBegin",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:47"
          },
          {
            "contract": "Vesting",
            "label": "vestingCliff",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:48"
          },
          {
            "contract": "Vesting",
            "label": "vestingEnd",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:49"
          },
          {
            "contract": "Vesting",
            "label": "lastUpdate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:50"
          },
          {
            "contract": "Vesting",
            "label": "installment",
            "type": "t_mapping(t_address,t_enum(VestingInstallments)13302)",
            "src": "contracts/governance/vesting.sol:51"
          },
          {
            "contract": "Vesting",
            "label": "initializedVestor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/governance/vesting.sol:53"
          },
          {
            "contract": "Vesting",
            "label": "revokedVestor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/governance/vesting.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_enum(VestingInstallments)13302)": {
            "label": "mapping(address => enum Vesting.VestingInstallments)"
          },
          "t_enum(VestingInstallments)13302": {
            "label": "enum Vesting.VestingInstallments",
            "members": [
              "MONTHLY",
              "QUARTERLY"
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2e94138c3bd429dbb504d66ce73e7854b7ced772130343735dfe54eb4fef5fea": {
      "address": "0x43e6465C8692a82AFEF8569211042919dF6bcBd5",
      "txHash": "0xca98ad4dc7cbb9051106a0f0db6cb1c5448905026382646f47a2b530e937db4f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "Vesting",
            "label": "nftToken",
            "type": "t_address",
            "src": "contracts/governance/vesting.sol:42"
          },
          {
            "contract": "Vesting",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/governance/vesting.sol:43"
          },
          {
            "contract": "Vesting",
            "label": "claimedAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:45"
          },
          {
            "contract": "Vesting",
            "label": "vestingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:46"
          },
          {
            "contract": "Vesting",
            "label": "vestingBegin",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:47"
          },
          {
            "contract": "Vesting",
            "label": "vestingCliff",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:48"
          },
          {
            "contract": "Vesting",
            "label": "vestingEnd",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:49"
          },
          {
            "contract": "Vesting",
            "label": "lastUpdate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:50"
          },
          {
            "contract": "Vesting",
            "label": "installment",
            "type": "t_mapping(t_address,t_enum(VestingInstallments)13520)",
            "src": "contracts/governance/vesting.sol:51"
          },
          {
            "contract": "Vesting",
            "label": "initializedVestor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/governance/vesting.sol:53"
          },
          {
            "contract": "Vesting",
            "label": "revokedVestor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/governance/vesting.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_enum(VestingInstallments)13520)": {
            "label": "mapping(address => enum Vesting.VestingInstallments)"
          },
          "t_enum(VestingInstallments)13520": {
            "label": "enum Vesting.VestingInstallments",
            "members": [
              "MONTHLY",
              "QUARTERLY"
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "33d2f9a53ea3f0ad04e7c7970d4a47cf9c204a3f3ad52f69c24b4851753935ee": {
      "address": "0x35bbe45caF7A7A03d6286408a0bb7C67c0b82D80",
      "txHash": "0x0f082f001375a8ae36a388228f1ec4fab39fba0729cda3da7c0c6423e7063dca",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:73"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:76"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:79"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:82"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)10867_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:88"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)10876_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:91"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:94"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:97"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:684"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:18"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:19"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:20"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:21"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:22"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:23"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "lastClaimTime",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:33"
          },
          {
            "contract": "GenesisKey",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:36"
          },
          {
            "contract": "GenesisKey",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)10867_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)10867_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(AddressData)10876_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)10876_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "19989c7bad7995f182b4f9d5b17364ad9df2aadac99a82bf4715e1213a524e8c": {
      "address": "0x18F15c5f80314d1976f7BC024A51211Bd7Bfbe4C",
      "txHash": "0x73552663b760118e9e9c7d9a71d5e0a7a4fcc52cb46b06898ab8a902b2641d12",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:73"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:76"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:79"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:82"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)10867_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:88"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)10876_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:91"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:94"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:97"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:684"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/domain/NftProfile.sol:15"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenUsedURIs",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfile.sol:16"
          },
          {
            "contract": "NftProfile",
            "label": "_expiryTimeline",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfile.sol:17"
          },
          {
            "contract": "NftProfile",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/domain/NftProfile.sol:19"
          },
          {
            "contract": "NftProfile",
            "label": "profileAuctionContract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:20"
          },
          {
            "contract": "NftProfile",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:21"
          },
          {
            "contract": "NftProfile",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:22"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)10867_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)10867_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(AddressData)10876_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)10876_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "6ee804e817d2dc05009eea183ad2faa77dbe526cd2d5af7bd443b208ccda7320": {
      "address": "0x8E5E12d059801e655ad286cB3549453f9F6C04E9",
      "txHash": "0xdbaffcf4193232162e860233a2d11f5f549f9b8a5e8b2996ff5b5e2a66cd618a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuction",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:18"
          },
          {
            "contract": "ProfileAuction",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:19"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftToken",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:20"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:21"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisStakingContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:22"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftBuyer",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:23"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:24"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:25"
          },
          {
            "contract": "ProfileAuction",
            "label": "yearlyFee",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuction.sol:27"
          },
          {
            "contract": "ProfileAuction",
            "label": "yearsToOwn",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuction.sol:28"
          },
          {
            "contract": "ProfileAuction",
            "label": "publicMintBool",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:29"
          },
          {
            "contract": "ProfileAuction",
            "label": "genKeyWhitelistOnly",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:30"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyClaimNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:32"
          },
          {
            "contract": "ProfileAuction",
            "label": "lengthPremium",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:33"
          },
          {
            "contract": "ProfileAuction",
            "label": "ownedProfileStake",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c8e8dffabc11166626f26d74d3988734a308e85c59fae89380004f19a0e2ab78": {
      "address": "0x95de8d9aaE3BA7Fd4322d9b7c9C4511901c14fa0",
      "txHash": "0xebf02ed0f8b6c120f71b0f82e229c8bcae1703c9729c57f0ba43389dea8a26bb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)11318_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)11327_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:692"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/domain/NftProfile.sol:15"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenUsedURIs",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfile.sol:16"
          },
          {
            "contract": "NftProfile",
            "label": "_expiryTimeline",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfile.sol:17"
          },
          {
            "contract": "NftProfile",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/domain/NftProfile.sol:19"
          },
          {
            "contract": "NftProfile",
            "label": "profileAuctionContract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:20"
          },
          {
            "contract": "NftProfile",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:21"
          },
          {
            "contract": "NftProfile",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:22"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)11318_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)11318_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(AddressData)11327_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)11327_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "97e6fbacf0571d3f996026e87f6af9d8e4d0a35fb879f4893b916b1c72deca92": {
      "address": "0x21b81c8d7e77a5AE90ffDA6788fDd36D273e6288",
      "txHash": "0x4f156d9e3121a70c867a11995bcd0483a0e638b50ce2c9c4cdbf87fddd0c204f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)11318_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)11327_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:692"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:18"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:19"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:20"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:21"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:22"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:23"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "lastClaimTime",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:33"
          },
          {
            "contract": "GenesisKey",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:36"
          },
          {
            "contract": "GenesisKey",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)11318_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)11318_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(AddressData)11327_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)11327_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "8a1acd4b072e106ecd918e5317b92a87d52809d61112ebf262c84dc5112d1fae": {
      "address": "0xBeA06ad277567Db069A9CF542D48e044942aE6F7",
      "txHash": "0x95694a95376eea11118aed0af4e6284cf8e0ba30975d9fe9cb4681a789021489",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_currentIndex",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "label": "_burnCounter",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "label": "defaultBaseURI",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "label": "_ownerships",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)11639_storage)",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "label": "_addressData",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_struct(AddressData)11648_storage)",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "110",
            "type": "t_array(t_uint256)43_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:692"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "wethAddress",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:18"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:19"
          },
          {
            "label": "multiSig",
            "offset": 0,
            "slot": "305",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:20"
          },
          {
            "label": "genesisKeyMerkle",
            "offset": 0,
            "slot": "306",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:21"
          },
          {
            "label": "startPublicSale",
            "offset": 20,
            "slot": "306",
            "type": "t_bool",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:22"
          },
          {
            "label": "publicSaleStartSecond",
            "offset": 0,
            "slot": "307",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:23"
          },
          {
            "label": "publicSaleDurationSeconds",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "label": "initialWethPrice",
            "offset": 0,
            "slot": "309",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "label": "finalWethPrice",
            "offset": 0,
            "slot": "310",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "label": "cancelledOrFinalized",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "label": "claimableBlock",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "label": "remainingTeamAdvisorGrant",
            "offset": 0,
            "slot": "313",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "label": "lastClaimTime",
            "offset": 0,
            "slot": "314",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "label": "gkTeamClaimContract",
            "offset": 0,
            "slot": "315",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "label": "randomClaimBool",
            "offset": 20,
            "slot": "315",
            "type": "t_bool",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:33"
          },
          {
            "label": "whitelistedTransfer",
            "offset": 0,
            "slot": "316",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:36"
          },
          {
            "label": "pausedTransfer",
            "offset": 0,
            "slot": "317",
            "type": "t_bool",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:39"
          },
          {
            "label": "gweiMax",
            "offset": 0,
            "slot": "318",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]",
            "numberOfBytes": "1376"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressData)11648_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)11639_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressData)11648_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "aux",
                "type": "t_uint64",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenOwnership)11639_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "burned",
                "type": "t_bool",
                "offset": 28,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        }
      }
    },
    "8b02968c9eca9abd3971c504eeef0718c3cf9fa356f45d0cf7c278d2e7f74d96": {
      "address": "0xB2F6b3979B28A73a64366Fcadf624ca1c7B94a5e",
      "txHash": "0x0a88db56055a3b19d4b665068bc55ab3dd646bd70e483af658878713ebee0c8a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_currentIndex",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "label": "_burnCounter",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "label": "defaultBaseURI",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "label": "_ownerships",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)2279_storage)",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "label": "_addressData",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_struct(AddressData)2288_storage)",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "110",
            "type": "t_array(t_uint256)43_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:692"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "wethAddress",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:18"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:19"
          },
          {
            "label": "multiSig",
            "offset": 0,
            "slot": "305",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:20"
          },
          {
            "label": "genesisKeyMerkle",
            "offset": 0,
            "slot": "306",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:21"
          },
          {
            "label": "startPublicSale",
            "offset": 20,
            "slot": "306",
            "type": "t_bool",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:22"
          },
          {
            "label": "publicSaleStartSecond",
            "offset": 0,
            "slot": "307",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:23"
          },
          {
            "label": "publicSaleDurationSeconds",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "label": "initialWethPrice",
            "offset": 0,
            "slot": "309",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "label": "finalWethPrice",
            "offset": 0,
            "slot": "310",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "label": "cancelledOrFinalized",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "label": "claimableBlock",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "label": "remainingTeamAdvisorGrant",
            "offset": 0,
            "slot": "313",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "label": "lastClaimTime",
            "offset": 0,
            "slot": "314",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "label": "gkTeamClaimContract",
            "offset": 0,
            "slot": "315",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "label": "randomClaimBool",
            "offset": 20,
            "slot": "315",
            "type": "t_bool",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:33"
          },
          {
            "label": "whitelistedTransfer",
            "offset": 0,
            "slot": "316",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:36"
          },
          {
            "label": "pausedTransfer",
            "offset": 0,
            "slot": "317",
            "type": "t_bool",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:39"
          },
          {
            "label": "gweiMax",
            "offset": 0,
            "slot": "318",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]",
            "numberOfBytes": "1376"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressData)2288_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)2279_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressData)2288_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "aux",
                "type": "t_uint64",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenOwnership)2279_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "burned",
                "type": "t_bool",
                "offset": 28,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        }
      }
    },
    "ed67e4451ab42d086ee64cf870dc90be3ab5fa36af6a30c564d6fbfd0cdc836b": {
      "address": "0x3112312F6FbBB1A60A9D72A06387A939e237ee68",
      "txHash": "0x1bd9a9504064f992a17474b313e5ca0a917819d1c59dfd6ee6a7d666a4a1ee4a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_currentIndex",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "label": "_burnCounter",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "label": "defaultBaseURI",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "label": "_ownerships",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)11639_storage)",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "label": "_addressData",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_struct(AddressData)11648_storage)",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "110",
            "type": "t_array(t_uint256)43_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:692"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "wethAddress",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:19"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:20"
          },
          {
            "label": "multiSig",
            "offset": 0,
            "slot": "305",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:21"
          },
          {
            "label": "genesisKeyMerkle",
            "offset": 0,
            "slot": "306",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:22"
          },
          {
            "label": "startPublicSale",
            "offset": 20,
            "slot": "306",
            "type": "t_bool",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:23"
          },
          {
            "label": "publicSaleStartSecond",
            "offset": 0,
            "slot": "307",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "label": "publicSaleDurationSeconds",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "label": "initialWethPrice",
            "offset": 0,
            "slot": "309",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "label": "finalWethPrice",
            "offset": 0,
            "slot": "310",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "label": "cancelledOrFinalized",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "label": "claimableBlock",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "label": "remainingTeamAdvisorGrant",
            "offset": 0,
            "slot": "313",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "label": "lastClaimTime",
            "offset": 0,
            "slot": "314",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "label": "gkTeamClaimContract",
            "offset": 0,
            "slot": "315",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:33"
          },
          {
            "label": "randomClaimBool",
            "offset": 20,
            "slot": "315",
            "type": "t_bool",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:34"
          },
          {
            "label": "whitelistedTransfer",
            "offset": 0,
            "slot": "316",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:37"
          },
          {
            "label": "pausedTransfer",
            "offset": 0,
            "slot": "317",
            "type": "t_bool",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:40"
          },
          {
            "label": "gweiMax",
            "offset": 0,
            "slot": "318",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:41"
          },
          {
            "label": "signerAddress",
            "offset": 0,
            "slot": "319",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]",
            "numberOfBytes": "1376"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressData)11648_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)11639_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressData)11648_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "aux",
                "type": "t_uint64",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenOwnership)11639_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "burned",
                "type": "t_bool",
                "offset": 28,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        }
      }
    },
    "11f4b0a7e21b1695ab40046eb63077a9f35f4f7e1cc0dfce580f951a54ed68a9": {
      "address": "0xE327f255CDA5Cb3c44f86d580d2d25c5CfB71b05",
      "txHash": "0x2ca9f0ddc543ca5dcabed5f63af9896f0c41f7a11dab08dc97f815a786f7bc31",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)11318_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)11327_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:692"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:19"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:20"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:21"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:22"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:23"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "lastClaimTime",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:33"
          },
          {
            "contract": "GenesisKey",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:36"
          },
          {
            "contract": "GenesisKey",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:39"
          },
          {
            "contract": "GenesisKey",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)11318_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)11318_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(AddressData)11327_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)11327_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "2467a3571602fb6816d25804311b6b5e88bbc78e19563b573cbf7dcc1bd6f4a0": {
      "address": "0x8C03BF718b02F7C843c484c613eb72c0FaCE6aC0",
      "txHash": "0x6490a25bf3d13f23d12c7196a7b5a9c419a35bbeeb73428487200fea2c3f219e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuction",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:18"
          },
          {
            "contract": "ProfileAuction",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:19"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:20"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:21"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisStakingContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:22"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftBuyer",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:23"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:24"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:25"
          },
          {
            "contract": "ProfileAuction",
            "label": "yearlyFee",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuction.sol:27"
          },
          {
            "contract": "ProfileAuction",
            "label": "yearsToOwn",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuction.sol:28"
          },
          {
            "contract": "ProfileAuction",
            "label": "publicMintBool",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:29"
          },
          {
            "contract": "ProfileAuction",
            "label": "genKeyWhitelistOnly",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:30"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyClaimNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:32"
          },
          {
            "contract": "ProfileAuction",
            "label": "lengthPremium",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:33"
          },
          {
            "contract": "ProfileAuction",
            "label": "ownedProfileStake",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "90d30931bf6d9f8552cc62c8bd0902e7ccfd067d748cac7eeab02bb394b7ec84": {
      "address": "0x9B0aB7a56486E6ed12ad22Ce29a657B7268B77B4",
      "txHash": "0xb32b21055e609d9b5e7eaa16ab54dbd70f18646b8b0beb9b81d27992ff2151a4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6e4ec99c4be9096652aae7aea010470c9a099bf025cec80411497c69b514625c": {
      "address": "0x9a47cFd45718dB5BEEA2aA200BE50E157023469c",
      "txHash": "0x8c1173321280a20f035b26bc622486dcd0fbd959dfd3c3e07cf75adb072f47cb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "nftBuyContract",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:21"
          },
          {
            "contract": "TransferExecutor",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:22"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:24"
          },
          {
            "contract": "TransferExecutor",
            "label": "whitelistERC20",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:25"
          },
          {
            "contract": "TransferExecutor",
            "label": "royaltyInfo",
            "type": "t_mapping(t_address,t_struct(RoyaltyInfo)17606_storage)",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:26"
          },
          {
            "contract": "TransferExecutor",
            "label": "nftToken",
            "type": "t_address",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:28"
          },
          {
            "contract": "TransferExecutor",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:219"
          },
          {
            "contract": "NftMarketplace",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/marketplace/NftMarketplace.sol:19"
          },
          {
            "contract": "NftMarketplace",
            "label": "_approvedOrdersByNonce",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:20"
          },
          {
            "contract": "NftMarketplace",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/marketplace/NftMarketplace.sol:21"
          },
          {
            "contract": "NftMarketplace",
            "label": "validationLogic",
            "type": "t_contract(ValidationLogic)17582",
            "src": "contracts/marketplace/NftMarketplace.sol:22"
          },
          {
            "contract": "NftMarketplace",
            "label": "marketplaceEvent",
            "type": "t_contract(MarketplaceEvent)15555",
            "src": "contracts/marketplace/NftMarketplace.sol:23"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(ValidationLogic)17582": {
            "label": "contract ValidationLogic"
          },
          "t_contract(MarketplaceEvent)15555": {
            "label": "contract MarketplaceEvent"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(RoyaltyInfo)17606_storage)": {
            "label": "mapping(address => struct TransferExecutor.RoyaltyInfo)"
          },
          "t_struct(RoyaltyInfo)17606_storage": {
            "label": "struct TransferExecutor.RoyaltyInfo",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "percent",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3bc9682e30c91f57f69f0d04d14886d7cc7bc6bf2a1ae787e2612553962a9627": {
      "address": "0xDDC9A437B27751907F2FEc89a747974038774647",
      "txHash": "0xe68a49ae8ab788d36174b1be5c3798a8f083263bea055c2f3457ba6eb1c7bc46",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)11318_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)11327_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:694"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:19"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:20"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:21"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:22"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:23"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "claimableBlock",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "lastClaimTime",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:33"
          },
          {
            "contract": "GenesisKey",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:34"
          },
          {
            "contract": "GenesisKey",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:37"
          },
          {
            "contract": "GenesisKey",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:40"
          },
          {
            "contract": "GenesisKey",
            "label": "gweiMax",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:41"
          },
          {
            "contract": "GenesisKey",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)11318_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)11318_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(AddressData)11327_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)11327_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "48629f33d00183ecc94090135c817798d15ae35ece7702a6c7ecedd38cf4f362": {
      "address": "0x3FEB00D0784d720E995a5782325aE609E24bf4D1",
      "txHash": "0x8134ce47b2d4b668fc69fd3905dcf96934d7de16e2f3c30a19533349fdf75d15",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)11318_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)11327_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:694"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:19"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:20"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:21"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:22"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:23"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "lastClaimTime",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:33"
          },
          {
            "contract": "GenesisKey",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:36"
          },
          {
            "contract": "GenesisKey",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:39"
          },
          {
            "contract": "GenesisKey",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)11318_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)11318_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(AddressData)11327_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)11327_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "30c82edb582c29c22ae7cf96d125ea7e60b1839063db11e7709444e0a2bfafce": {
      "address": "0x2E83F28F8C464A71Cac19d6842A3690EcfD5D6F2",
      "txHash": "0x26cc9e40040ea00f62f4476622920ad3684c629cdaa70442e76993e7dcfd54d2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "Vesting",
            "label": "nftToken",
            "type": "t_address",
            "src": "contracts/governance/vesting.sol:42"
          },
          {
            "contract": "Vesting",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/governance/vesting.sol:43"
          },
          {
            "contract": "Vesting",
            "label": "claimedAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:45"
          },
          {
            "contract": "Vesting",
            "label": "vestingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:46"
          },
          {
            "contract": "Vesting",
            "label": "vestingBegin",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:47"
          },
          {
            "contract": "Vesting",
            "label": "vestingCliff",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:48"
          },
          {
            "contract": "Vesting",
            "label": "vestingEnd",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:49"
          },
          {
            "contract": "Vesting",
            "label": "lastUpdate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:50"
          },
          {
            "contract": "Vesting",
            "label": "installment",
            "type": "t_mapping(t_address,t_enum(VestingInstallments)13978)",
            "src": "contracts/governance/vesting.sol:51"
          },
          {
            "contract": "Vesting",
            "label": "initializedVestor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/governance/vesting.sol:53"
          },
          {
            "contract": "Vesting",
            "label": "revokedVestor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/governance/vesting.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_enum(VestingInstallments)13978)": {
            "label": "mapping(address => enum Vesting.VestingInstallments)"
          },
          "t_enum(VestingInstallments)13978": {
            "label": "enum Vesting.VestingInstallments",
            "members": [
              "MONTHLY",
              "QUARTERLY"
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "439800c22386dae1e3fb4db62c22dbdc5c0f8746eccad624b088350c4b28b3a0": {
      "address": "0xc906f1FF1EA6D19Ed156fDC95e32A96bA887C343",
      "txHash": "0x4b84d1c625542edf237d9cd66a0e251e96eea1096518e96314ff672fb5362ed1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)11454_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)11463_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:700"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:19"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:20"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:21"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:22"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:23"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "lastClaimTime",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:32"
          },
          {
            "contract": "GenesisKey",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:33"
          },
          {
            "contract": "GenesisKey",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:36"
          },
          {
            "contract": "GenesisKey",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:39"
          },
          {
            "contract": "GenesisKey",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)11454_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)11454_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(AddressData)11463_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)11463_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "6af543e7253126437129835ebf96dad86903bd54ae57eb1c099b99d317c43e42": {
      "address": "0x8410c455D8cdE7B46B9c6A223cb84765F054ABeB",
      "txHash": "0x12747f8e36c4c6398bf82f81d0627f94d5d20ca61665309b3d3a9fdc788523cd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)11454_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)11463_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:700"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/domain/NftProfile.sol:15"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenUsedURIs",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfile.sol:16"
          },
          {
            "contract": "NftProfile",
            "label": "_expiryTimeline",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfile.sol:17"
          },
          {
            "contract": "NftProfile",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/domain/NftProfile.sol:19"
          },
          {
            "contract": "NftProfile",
            "label": "profileAuctionContract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:20"
          },
          {
            "contract": "NftProfile",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:21"
          },
          {
            "contract": "NftProfile",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:22"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)11454_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)11454_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(AddressData)11463_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)11463_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "bd5bea40258f1ffa709ef72d979a1a4bfc23030539ec143128b02fbbcf898873": {
      "address": "0x89bcEB33FAd5fb02b5B7F9B9408530B9878Ed43C",
      "txHash": "0x9d81917894ade189fb7cb518f0c23c9c8c2dec534870631cdccb44cff8b165e7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuction",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:20"
          },
          {
            "contract": "ProfileAuction",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:21"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:22"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:23"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisStakingContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:24"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftBuyer",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:25"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:26"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:27"
          },
          {
            "contract": "ProfileAuction",
            "label": "yearlyFee",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuction.sol:29"
          },
          {
            "contract": "ProfileAuction",
            "label": "yearsToOwn",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuction.sol:30"
          },
          {
            "contract": "ProfileAuction",
            "label": "publicMintBool",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:31"
          },
          {
            "contract": "ProfileAuction",
            "label": "genKeyWhitelistOnly",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:32"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyClaimNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:34"
          },
          {
            "contract": "ProfileAuction",
            "label": "lengthPremium",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:35"
          },
          {
            "contract": "ProfileAuction",
            "label": "ownedProfileStake",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:36"
          },
          {
            "contract": "ProfileAuction",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:37"
          },
          {
            "contract": "ProfileAuction",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/domain/ProfileAuction.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "96bab36f17ea673e5f0643d90aefa0d9240d1c6531210c54e6ac5a0e7eec8766": {
      "address": "0xa84DFD339fdaC3Ef468Bc73Ea91030F58bD25446",
      "txHash": "0xdae75e023dd15168f507ea57417365182d86cf274a0e8318febef9caec1e44ca",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)11454_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)11463_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:700"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:23"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:33"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:34"
          },
          {
            "contract": "GenesisKey",
            "label": "lastClaimTime",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:35"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:36"
          },
          {
            "contract": "GenesisKey",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:37"
          },
          {
            "contract": "GenesisKey",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:40"
          },
          {
            "contract": "GenesisKey",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:43"
          },
          {
            "contract": "GenesisKey",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)11454_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)11454_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(AddressData)11463_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)11463_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "00ffb70880326f1abb85d6af8a0c093b233727533521503ec0cb2f49c88b7ee4": {
      "address": "0x3b3b88389824C14DdE40D12e90BD3A7D441Db845",
      "txHash": "0x5f00f611ab7a9a5d0620f446ba5541949f1992ebf9c3c3dfe31bf6484714ea81",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:19"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:20"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "GK",
            "type": "t_contract(IGK)1196",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:21"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "ownedTokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IGK)1196": {
            "label": "contract IGK"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6541c085c82abb4f523da07c229db1e2bbbe8749e0d71e62174e4a336f99493b": {
      "address": "0x589469C0083B19e932E8857C6C8cE686B81E75Bc",
      "txHash": "0x0fe092e3a6a8d63c08dc7b40bcb67224674271157603d15676124becde8059aa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:19"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:20"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "GK",
            "type": "t_contract(IGK)1196",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:21"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "ownedTokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IGK)1196": {
            "label": "contract IGK"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3a95c6ce228d17f3c562b5e7f906fb4dca6988b86589bda1373e24b817745584": {
      "address": "0xc705875032980dce626118a62A2a8a76609ED50D",
      "txHash": "0x30856218b25a04c368fc587309dc9ea0c139c4115c89e037070f114f68c1e6c5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:19"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:20"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "GK",
            "type": "t_contract(IGK)13780",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:21"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "ownedTokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IGK)13780": {
            "label": "contract IGK"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5f5b3a8373560b42ac3dc308bc248d98e2178161b4bc4168c535dc814b096612": {
      "address": "0x6042C4ffeEE671a40F52F3Ab54d4991b658DFb3c",
      "txHash": "0xd2328eabed0a94fa2753f4aa3300c399004baa4373b9fd891b3ff86e0889089d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)11454_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)11463_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:700"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:23"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:24"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:25"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:26"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:27"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:28"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:29"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:30"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:31"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:33"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:34"
          },
          {
            "contract": "GenesisKey",
            "label": "lastClaimTime",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:35"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:36"
          },
          {
            "contract": "GenesisKey",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:37"
          },
          {
            "contract": "GenesisKey",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:40"
          },
          {
            "contract": "GenesisKey",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:43"
          },
          {
            "contract": "GenesisKey",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)11454_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)11454_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(AddressData)11463_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)11463_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "06152101518baddd5424e8615cee32e17d84f456cadc2aed0123505f9f27453c": {
      "address": "0x899591d63be57c070602e66b31B691e04D78Ea32",
      "txHash": "0x374b9e2f064ad6edaeddadb8b63520ee9ca6ca5430a7833d3faf034225ac48d7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuction",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:45"
          },
          {
            "contract": "ProfileAuction",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:46"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:47"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:48"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisStakingContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:49"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftBuyer",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:50"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:51"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:52"
          },
          {
            "contract": "ProfileAuction",
            "label": "yearlyFee",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuction.sol:54"
          },
          {
            "contract": "ProfileAuction",
            "label": "yearsToOwn",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuction.sol:55"
          },
          {
            "contract": "ProfileAuction",
            "label": "publicMintBool",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:56"
          },
          {
            "contract": "ProfileAuction",
            "label": "genKeyWhitelistOnly",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:57"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyClaimNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:59"
          },
          {
            "contract": "ProfileAuction",
            "label": "lengthPremium",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:60"
          },
          {
            "contract": "ProfileAuction",
            "label": "ownedProfileStake",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:61"
          },
          {
            "contract": "ProfileAuction",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:62"
          },
          {
            "contract": "ProfileAuction",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/domain/ProfileAuction.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "69cc6a07c3368ff8fe2ecf0c592e8241266da99cf4b4f0a5ba5317db3c83be36": {
      "address": "0xDF3Ef9a0DF7B53eF5FC2679Ba55409989e28069B",
      "txHash": "0x266451885bce9320838406d13c19876cc4b506eb750759bdd4e006aec31f4f8c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "Vesting",
            "label": "nftToken",
            "type": "t_address",
            "src": "contracts/governance/vesting.sol:42"
          },
          {
            "contract": "Vesting",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/governance/vesting.sol:43"
          },
          {
            "contract": "Vesting",
            "label": "claimedAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:45"
          },
          {
            "contract": "Vesting",
            "label": "vestingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:46"
          },
          {
            "contract": "Vesting",
            "label": "vestingBegin",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:47"
          },
          {
            "contract": "Vesting",
            "label": "vestingCliff",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:48"
          },
          {
            "contract": "Vesting",
            "label": "vestingEnd",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:49"
          },
          {
            "contract": "Vesting",
            "label": "lastUpdate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/governance/vesting.sol:50"
          },
          {
            "contract": "Vesting",
            "label": "installment",
            "type": "t_mapping(t_address,t_enum(VestingInstallments)14257)",
            "src": "contracts/governance/vesting.sol:51"
          },
          {
            "contract": "Vesting",
            "label": "initializedVestor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/governance/vesting.sol:53"
          },
          {
            "contract": "Vesting",
            "label": "revokedVestor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/governance/vesting.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_enum(VestingInstallments)14257)": {
            "label": "mapping(address => enum Vesting.VestingInstallments)"
          },
          "t_enum(VestingInstallments)14257": {
            "label": "enum Vesting.VestingInstallments",
            "members": [
              "MONTHLY",
              "QUARTERLY"
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d431965cb053fd75d90385e90b4d5273f6489dc9ba8ccfd0ee29cfd373c4d1d7": {
      "address": "0xFcdb5187182F74fdD1AEA5587D27C6356d1a6531",
      "txHash": "0x87e24471da5bc79c4cc32f7b02aaa0f49daa59a32e87c609ce2bedb4e519e4f1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)11543_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)11552_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:696"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:37"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:38"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:40"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:41"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:43"
          },
          {
            "contract": "GenesisKey",
            "label": "initialWethPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:44"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:46"
          },
          {
            "contract": "GenesisKey",
            "label": "finalWethPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:49"
          },
          {
            "contract": "GenesisKey",
            "label": "lastClaimTime",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:50"
          },
          {
            "contract": "GenesisKey",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:52"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:54"
          },
          {
            "contract": "GenesisKey",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:55"
          },
          {
            "contract": "GenesisKey",
            "label": "_genesisKeyLockUp",
            "type": "t_mapping(t_uint256,t_struct(LockupInfo)13018_storage)",
            "src": "contracts/genesisKey/GenesisKey.sol:56"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:60"
          },
          {
            "contract": "GenesisKey",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:61"
          },
          {
            "contract": "GenesisKey",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:62"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint232",
            "src": "contracts/genesisKey/GenesisKey.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_struct(LockupInfo)13018_storage)": {
            "label": "mapping(uint256 => struct GenesisKey.LockupInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(LockupInfo)13018_storage": {
            "label": "struct GenesisKey.LockupInfo",
            "members": [
              {
                "label": "totalLockup",
                "type": "t_uint128"
              },
              {
                "label": "currentLockup",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_uint232": {
            "label": "uint232"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)11543_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)11543_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_struct(AddressData)11552_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)11552_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "b012915fe749f18a8985e985c59a9ab369767f3c8b324298156a8f51fec6a1df": {
      "address": "0x7A6e5906A39aF3E25ACA7b98132845677A32a4da",
      "txHash": "0x8ddeca52a26dadc82620397bc4e0c9141768a6214a9f1e187b9c57248a6df883",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:19"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:20"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "GK",
            "type": "t_contract(IGK)14007",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:21"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "ownedTokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IGK)14007": {
            "label": "contract IGK"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ea87fa0bf8e3c6d9ed5b29e6110848e9d23375779a1a05da991d2b82e1e5f05a": {
      "address": "0xB2951Fbde1A32B8d0d8C4e9414192d107991239B",
      "txHash": "0xea6c73f9214c3245d01da8bc34ae03c525b13dfb2752536cd88684a5d2d43060",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)11543_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)11552_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:696"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/domain/NftProfile.sol:15"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenUsedURIs",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfile.sol:16"
          },
          {
            "contract": "NftProfile",
            "label": "_expiryTimeline",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfile.sol:17"
          },
          {
            "contract": "NftProfile",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/domain/NftProfile.sol:19"
          },
          {
            "contract": "NftProfile",
            "label": "profileAuctionContract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:20"
          },
          {
            "contract": "NftProfile",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:21"
          },
          {
            "contract": "NftProfile",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:22"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)11543_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)11543_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(AddressData)11552_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)11552_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "257f79c343af3ad1d42de56a8e7310faa25c2d22829cc4ee70e581f8cd5cb02e": {
      "address": "0x45609d078576fe8F10d0073a795d426b2dc02be4",
      "txHash": "0xbe45d22287be8f7d11d54f71fbb417b27b7cdb09b21bd215418eb882bbdaaff6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuction",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:45"
          },
          {
            "contract": "ProfileAuction",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:46"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:47"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:48"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisStakingContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:49"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftBuyer",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:50"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:51"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:52"
          },
          {
            "contract": "ProfileAuction",
            "label": "yearlyFee",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuction.sol:54"
          },
          {
            "contract": "ProfileAuction",
            "label": "yearsToOwn",
            "type": "t_uint256",
            "src": "contracts/domain/ProfileAuction.sol:55"
          },
          {
            "contract": "ProfileAuction",
            "label": "publicMintBool",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:56"
          },
          {
            "contract": "ProfileAuction",
            "label": "genKeyWhitelistOnly",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:57"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyClaimNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:59"
          },
          {
            "contract": "ProfileAuction",
            "label": "lengthPremium",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:60"
          },
          {
            "contract": "ProfileAuction",
            "label": "ownedProfileStake",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:61"
          },
          {
            "contract": "ProfileAuction",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:62"
          },
          {
            "contract": "ProfileAuction",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/domain/ProfileAuction.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c67a10ae84b7c12b172f4496f38b40987703d5967dd410c803c8cdc9871f843e": {
      "address": "0x715ac86A4488a90d5B44D49e99176ecb2804698A",
      "txHash": "0xc5e15f7fc0acf309bd25cb9f7cab53a1b1f6563f4974c3ac58d588187896600f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:20"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:21"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "GK",
            "type": "t_contract(IGK)14019",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:22"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "ownedTokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IGK)14019": {
            "label": "contract IGK"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c8325b2f77964abbf4877b49505c073f0fec81a9eb95d32ebe32f07ba12a3a7b": {
      "address": "0xb980D133730AB0554EB3Eeb70aA5E1A248E7a2F9",
      "txHash": "0xcf6e33b6702a5b4de389674157bb91282de032bf6e2c45196a708069bb327558",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)13191_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)13200_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:676"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:38"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:39"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:41"
          },
          {
            "contract": "GenesisKey",
            "label": "initialEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:42"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:44"
          },
          {
            "contract": "GenesisKey",
            "label": "finalEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:45"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          },
          {
            "contract": "GenesisKey",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:50"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:51"
          },
          {
            "contract": "GenesisKey",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:52"
          },
          {
            "contract": "GenesisKey",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:53"
          },
          {
            "contract": "GenesisKey",
            "label": "lockupBoolean",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:54"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint64",
            "src": "contracts/genesisKey/GenesisKey.sol:55"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:57"
          },
          {
            "contract": "GenesisKey",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:58"
          },
          {
            "contract": "GenesisKey",
            "label": "_genesisKeyLockUp",
            "type": "t_mapping(t_uint256,t_struct(LockupInfo)14595_storage)",
            "src": "contracts/genesisKey/GenesisKey.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_struct(LockupInfo)14595_storage)": {
            "label": "mapping(uint256 => struct GenesisKey.LockupInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(LockupInfo)14595_storage": {
            "label": "struct GenesisKey.LockupInfo",
            "members": [
              {
                "label": "totalLockup",
                "type": "t_uint128"
              },
              {
                "label": "currentLockup",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)13191_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)13191_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(AddressData)13200_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)13200_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "6f73c4519c07ff16ad28e4f2b7dfdf8241dc9fe4822608d3de003094a38ee8f6": {
      "address": "0x49A48Cb9FD8BCb488d6b817352D0E166f9bD4900",
      "txHash": "0x7dddb959edbd388fece395a9c4db86e77323af0a4d883ac25256e8aee9eae3aa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:21"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:22"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "GK",
            "type": "t_contract(IGK)15541",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:23"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "ownedTokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IGK)15541": {
            "label": "contract IGK"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8c9ba2061ab64c9ab101e103b6e818ad7e8905cd72143747899762317ed5f314": {
      "address": "0xb800415C7E49795f2514b97d6feb4b292C3937eb",
      "txHash": "0x4dcc14be111c559c2b9a993b4bbb46997d3b1ff4911b7c322062a660341d6001",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)11628_storage)",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)11637_storage)",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AProfileUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:721"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/domain/NftProfile.sol:21"
          },
          {
            "contract": "NftProfile",
            "label": "_tokenUsedURIs",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfile.sol:22"
          },
          {
            "contract": "NftProfile",
            "label": "_expiryTimeline",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/NftProfile.sol:23"
          },
          {
            "contract": "NftProfile",
            "label": "profileAuctionContract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:25"
          },
          {
            "contract": "NftProfile",
            "label": "protocolFee",
            "type": "t_uint96",
            "src": "contracts/domain/NftProfile.sol:26"
          },
          {
            "contract": "NftProfile",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:27"
          },
          {
            "contract": "NftProfile",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/NftProfile.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)11628_storage)": {
            "label": "mapping(uint256 => struct ERC721AProfileUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)11628_storage": {
            "label": "struct ERC721AProfileUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(AddressData)11637_storage)": {
            "label": "mapping(address => struct ERC721AProfileUpgradeable.AddressData)"
          },
          "t_struct(AddressData)11637_storage": {
            "label": "struct ERC721AProfileUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "f2071f5ceb050ee2ca9a45408f13d3e27209e5e939a98a05815c18282827cc88": {
      "address": "0xd5339967aebE3b610e381Dc32B598450e8085545",
      "txHash": "0x0bb722a571cd1ea8bef91337476477f5be1533fb9755fa73c2da5a3683a90669",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ProfileAuction",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:45"
          },
          {
            "contract": "ProfileAuction",
            "label": "yearlyFee",
            "type": "t_uint96",
            "src": "contracts/domain/ProfileAuction.sol:46"
          },
          {
            "contract": "ProfileAuction",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:48"
          },
          {
            "contract": "ProfileAuction",
            "label": "yearsToOwn",
            "type": "t_uint96",
            "src": "contracts/domain/ProfileAuction.sol:49"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftErc20Contract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:51"
          },
          {
            "contract": "ProfileAuction",
            "label": "publicMintBool",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:52"
          },
          {
            "contract": "ProfileAuction",
            "label": "genKeyWhitelistOnly",
            "type": "t_bool",
            "src": "contracts/domain/ProfileAuction.sol:53"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfile",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:55"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisStakingContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:56"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftBuyer",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:57"
          },
          {
            "contract": "ProfileAuction",
            "label": "nftProfileHelperAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:58"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyContract",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:59"
          },
          {
            "contract": "ProfileAuction",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/domain/ProfileAuction.sol:60"
          },
          {
            "contract": "ProfileAuction",
            "label": "genesisKeyClaimNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:62"
          },
          {
            "contract": "ProfileAuction",
            "label": "lengthPremium",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:63"
          },
          {
            "contract": "ProfileAuction",
            "label": "ownedProfileStake",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "contracts/domain/ProfileAuction.sol:64"
          },
          {
            "contract": "ProfileAuction",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/domain/ProfileAuction.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "932193ed21cf4b11152463747015fba629ba7b3b25048814586757c35ae6abb6": {
      "address": "0x0F7EBB85e57222A1247ce493dd29165cFBd16118",
      "txHash": "0x3a07e902a806406463b84d858f931111ce5574feb516396ae2dbb99a9e3fe413",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)2210_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)2219_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:676"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:38"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:39"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:41"
          },
          {
            "contract": "GenesisKey",
            "label": "initialEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:42"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:44"
          },
          {
            "contract": "GenesisKey",
            "label": "finalEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:45"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          },
          {
            "contract": "GenesisKey",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:50"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:51"
          },
          {
            "contract": "GenesisKey",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:52"
          },
          {
            "contract": "GenesisKey",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:53"
          },
          {
            "contract": "GenesisKey",
            "label": "lockupBoolean",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:54"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint64",
            "src": "contracts/genesisKey/GenesisKey.sol:55"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:57"
          },
          {
            "contract": "GenesisKey",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:58"
          },
          {
            "contract": "GenesisKey",
            "label": "_genesisKeyLockUp",
            "type": "t_mapping(t_uint256,t_struct(LockupInfo)3614_storage)",
            "src": "contracts/genesisKey/GenesisKey.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_struct(LockupInfo)3614_storage)": {
            "label": "mapping(uint256 => struct GenesisKey.LockupInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(LockupInfo)3614_storage": {
            "label": "struct GenesisKey.LockupInfo",
            "members": [
              {
                "label": "totalLockup",
                "type": "t_uint128"
              },
              {
                "label": "currentLockup",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)2210_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)2210_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(AddressData)2219_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)2219_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "26fd1a3b7e04e035d4641c7b6b6bea24451c8895608990b7e66599c12b5217a4": {
      "address": "0x8124cd2F157336Beb8638A0Ff088b1db5F067608",
      "txHash": "0xd8833e8c2aabb2c64ba60484bc1fc52df60367111db548e114ddb554ff230491",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)13099_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)13108_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:676"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:38"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:39"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:41"
          },
          {
            "contract": "GenesisKey",
            "label": "initialEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:42"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:44"
          },
          {
            "contract": "GenesisKey",
            "label": "finalEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:45"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          },
          {
            "contract": "GenesisKey",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:50"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:51"
          },
          {
            "contract": "GenesisKey",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:52"
          },
          {
            "contract": "GenesisKey",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:53"
          },
          {
            "contract": "GenesisKey",
            "label": "lockupBoolean",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:54"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint64",
            "src": "contracts/genesisKey/GenesisKey.sol:55"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:57"
          },
          {
            "contract": "GenesisKey",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:58"
          },
          {
            "contract": "GenesisKey",
            "label": "_genesisKeyLockUp",
            "type": "t_mapping(t_uint256,t_struct(LockupInfo)14503_storage)",
            "src": "contracts/genesisKey/GenesisKey.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_struct(LockupInfo)14503_storage)": {
            "label": "mapping(uint256 => struct GenesisKey.LockupInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(LockupInfo)14503_storage": {
            "label": "struct GenesisKey.LockupInfo",
            "members": [
              {
                "label": "totalLockup",
                "type": "t_uint128"
              },
              {
                "label": "currentLockup",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)13099_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)13099_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(AddressData)13108_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)13108_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "14db792391f9cd2c37762955925540085d9812b0927fa14a18e4845ceb408508": {
      "address": "0xad23cE33785FB51AC52222c79499fFAAe69C59ee",
      "txHash": "0x072838b4ed7329ea74668262c1a825cd2274e39891246c2e940dfa611ead20c6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)13099_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)13108_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:721"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:38"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:39"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:41"
          },
          {
            "contract": "GenesisKey",
            "label": "initialEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:42"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:44"
          },
          {
            "contract": "GenesisKey",
            "label": "finalEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:45"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          },
          {
            "contract": "GenesisKey",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:50"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:51"
          },
          {
            "contract": "GenesisKey",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:52"
          },
          {
            "contract": "GenesisKey",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:53"
          },
          {
            "contract": "GenesisKey",
            "label": "lockupBoolean",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:54"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint64",
            "src": "contracts/genesisKey/GenesisKey.sol:55"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:57"
          },
          {
            "contract": "GenesisKey",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:58"
          },
          {
            "contract": "GenesisKey",
            "label": "_genesisKeyLockUp",
            "type": "t_mapping(t_uint256,t_struct(LockupInfo)14645_storage)",
            "src": "contracts/genesisKey/GenesisKey.sol:59"
          },
          {
            "contract": "GenesisKey",
            "label": "latestClaimTokenId",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:62"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_struct(LockupInfo)14645_storage)": {
            "label": "mapping(uint256 => struct GenesisKey.LockupInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(LockupInfo)14645_storage": {
            "label": "struct GenesisKey.LockupInfo",
            "members": [
              {
                "label": "totalLockup",
                "type": "t_uint128"
              },
              {
                "label": "currentLockup",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)13099_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)13099_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(AddressData)13108_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)13108_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "afef4bc1e073bbae54d259cedbfb0f6ddfb372f4bbefd8c0c64e95858f0d1435": {
      "address": "0x6b5a639adDbF7dd7E0FE0C92f3b70e3ba90290bB",
      "txHash": "0x8719d3fb2d71dfac8c47d3df18a451ca9942c78a6ec2fc8a1ccce0ebe859c329",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:21"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:22"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "GK",
            "type": "t_contract(IGK)15896",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:23"
          },
          {
            "contract": "GenesisKeyTeamClaim",
            "label": "ownedTokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IGK)15896": {
            "label": "contract IGK"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e6d5e5f5513a86b7ccd637a93193f8042aaf2abf17ddb386c49139e5cb5238d7": {
      "address": "0x2f8ff9673031BE02d371321Ce78eE50C60374605",
      "txHash": "0x5cead050ff4c49a8aa1a6deff9f139faa8804f6146c8daf32d4bb8f10e926822",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_currentIndex",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:74"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_burnCounter",
            "type": "t_uint256",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:77"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:80"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:83"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "defaultBaseURI",
            "type": "t_string_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:85"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_ownerships",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)13281_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_addressData",
            "type": "t_mapping(t_address,t_struct(AddressData)13290_storage)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:92"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:95"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:98"
          },
          {
            "contract": "ERC721AUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:721"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "GenesisKey",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:38"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleDurationSeconds",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:39"
          },
          {
            "contract": "GenesisKey",
            "label": "multiSig",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:41"
          },
          {
            "contract": "GenesisKey",
            "label": "initialEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:42"
          },
          {
            "contract": "GenesisKey",
            "label": "genesisKeyMerkle",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:44"
          },
          {
            "contract": "GenesisKey",
            "label": "finalEthPrice",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:45"
          },
          {
            "contract": "GenesisKey",
            "label": "gkTeamClaimContract",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:47"
          },
          {
            "contract": "GenesisKey",
            "label": "publicSaleStartSecond",
            "type": "t_uint96",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          },
          {
            "contract": "GenesisKey",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/genesisKey/GenesisKey.sol:50"
          },
          {
            "contract": "GenesisKey",
            "label": "startPublicSale",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:51"
          },
          {
            "contract": "GenesisKey",
            "label": "pausedTransfer",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:52"
          },
          {
            "contract": "GenesisKey",
            "label": "randomClaimBool",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:53"
          },
          {
            "contract": "GenesisKey",
            "label": "lockupBoolean",
            "type": "t_bool",
            "src": "contracts/genesisKey/GenesisKey.sol:54"
          },
          {
            "contract": "GenesisKey",
            "label": "remainingTeamAdvisorGrant",
            "type": "t_uint64",
            "src": "contracts/genesisKey/GenesisKey.sol:55"
          },
          {
            "contract": "GenesisKey",
            "label": "cancelledOrFinalized",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:57"
          },
          {
            "contract": "GenesisKey",
            "label": "whitelistedTransfer",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/genesisKey/GenesisKey.sol:58"
          },
          {
            "contract": "GenesisKey",
            "label": "_genesisKeyLockUp",
            "type": "t_mapping(t_uint256,t_struct(LockupInfo)14827_storage)",
            "src": "contracts/genesisKey/GenesisKey.sol:59"
          },
          {
            "contract": "GenesisKey",
            "label": "latestClaimTokenId",
            "type": "t_uint256",
            "src": "contracts/genesisKey/GenesisKey.sol:62"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_struct(LockupInfo)14827_storage)": {
            "label": "mapping(uint256 => struct GenesisKey.LockupInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(LockupInfo)14827_storage": {
            "label": "struct GenesisKey.LockupInfo",
            "members": [
              {
                "label": "totalLockup",
                "type": "t_uint128"
              },
              {
                "label": "currentLockup",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)13281_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)"
          },
          "t_struct(TokenOwnership)13281_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64"
              },
              {
                "label": "burned",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(AddressData)13290_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)"
          },
          "t_struct(AddressData)13290_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64"
              },
              {
                "label": "aux",
                "type": "t_uint64"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          }
        }
      }
    },
    "ee680b77b1d7e43afcef3ab0f0dd5ab49d5440cd797f021df672213ee6104117": {
      "address": "0x26755A2183998693A59d171bd9534c1a508346Bd",
      "txHash": "0x76e375a8723d205f9ad202dfc9248d449039ace1e334bc73ba5b92a99cb00842",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftAggregator",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/aggregator/NftAggregator.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "41fad8b312680d2b971c3e613d056e20f3dd18cd3857517d8ea3ea4e03c9dd92": {
      "address": "0xFBaA4C7Dc6090431B8a64EB85f9A75377d6CBDB7",
      "txHash": "0x59330bf2ec449c12f13083529b62ee1a3fac14e2d674c4d7823a9d782aef126e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftAggregator",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/aggregator/NftAggregator.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "376f94207c6b2bd52cfc1c00fef47ae9a7764f8839c54930e0552d894ff35ee3": {
      "address": "0x51932D08613f6B9233DFfFA52671D9C9124FE761",
      "txHash": "0x49149cb67097de41a5d35458bd781d0dc582e6e9914b8e1c6735f6fa0cfe7a89",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftAggregator",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/aggregator/NftAggregator.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ff1a57de30fa5dbfb5e071a23251b6c4bf0db67c630087096743f36650fa9387": {
      "address": "0x1477D4b5d5376E5d72692E7F2D31f55f7412cb4a",
      "txHash": "0x7f1fb88d615ce0093d8b9608d0888779a003d87ce8e16a9738c490e4d46b612b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftAggregator",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/aggregator/NftAggregator.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4fcb37f0949327eef14669f0106d69ce9898c78000fa75fde4085ca3b59fa62e": {
      "address": "0x83FFcEE83360e75434b8F0a8dB17f0EcFA751B33",
      "txHash": "0x110c2e7340f925fc0ed12106557442de33cb2b2961ef156f1c5aabe683bb8ded",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "NftAggregator",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/aggregator/NftAggregator.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d4f8def4e0d5ae910e35eb664eec8cb7275b57050edd93df16ffbcb6e2feb7e8": {
      "address": "0x6D516f19350ecf1fa570D8fd026c187523356adF",
      "txHash": "0x699c3204cca1cea976eedb87ed66ab8b936c6b36f59723f06d905864cd621f83",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "MarketplaceRegistry",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/aggregator/MarketplaceRegistry.sol:8"
          },
          {
            "contract": "MarketplaceRegistry",
            "label": "marketplaces",
            "type": "t_array(t_struct(Marketplace)1323_storage)dyn_storage",
            "src": "contracts/aggregator/MarketplaceRegistry.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Marketplace)1323_storage)dyn_storage": {
            "label": "struct MarketplaceRegistry.Marketplace[]"
          },
          "t_struct(Marketplace)1323_storage": {
            "label": "struct MarketplaceRegistry.Marketplace",
            "members": [
              {
                "label": "proxy",
                "type": "t_address"
              },
              {
                "label": "isLib",
                "type": "t_bool"
              },
              {
                "label": "isActive",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "501c934a2a4fb834a138d0d58b8f416d5d2b9dd196e9b948428128220d9dda83": {
      "address": "0x3aB146ED950bEFEF641b702902f9daA47FE8a59a",
      "txHash": "0xe6167cedfb6d7fa9b5762cc0774488347847420f073e210bee98d858f31fbd66",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "SpecialTransferHelper",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/aggregator/SpecialTransferHelper.sol:103"
          },
          {
            "contract": "NftAggregator",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/aggregator/NftAggregator.sol:27"
          },
          {
            "contract": "NftAggregator",
            "label": "marketplaceRegistry",
            "type": "t_contract(MarketplaceRegistry)1504",
            "src": "contracts/aggregator/NftAggregator.sol:28"
          },
          {
            "contract": "NftAggregator",
            "label": "baseFees",
            "type": "t_uint256",
            "src": "contracts/aggregator/NftAggregator.sol:29"
          },
          {
            "contract": "NftAggregator",
            "label": "openForTrades",
            "type": "t_bool",
            "src": "contracts/aggregator/NftAggregator.sol:30"
          },
          {
            "contract": "NftAggregator",
            "label": "openForFreeTrades",
            "type": "t_bool",
            "src": "contracts/aggregator/NftAggregator.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(MarketplaceRegistry)1504": {
            "label": "contract MarketplaceRegistry"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2ccf30ff3e2d10a71c8fa5423733b60bfba892bcec1cfd445698855ce2e6d73c": {
      "address": "0x871608139Ebe220D85c9CA6898B94de9C461f922",
      "txHash": "0x180dd7f0cac691e1745f381cce1ec92784a6c1285147646f77860974123ab44d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "SpecialTransferHelper",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/aggregator/SpecialTransferHelper.sol:103"
          },
          {
            "contract": "NftAggregator",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/aggregator/NftAggregator.sol:27"
          },
          {
            "contract": "NftAggregator",
            "label": "marketplaceRegistry",
            "type": "t_contract(MarketplaceRegistry)1504",
            "src": "contracts/aggregator/NftAggregator.sol:28"
          },
          {
            "contract": "NftAggregator",
            "label": "baseFees",
            "type": "t_uint256",
            "src": "contracts/aggregator/NftAggregator.sol:29"
          },
          {
            "contract": "NftAggregator",
            "label": "openForTrades",
            "type": "t_bool",
            "src": "contracts/aggregator/NftAggregator.sol:30"
          },
          {
            "contract": "NftAggregator",
            "label": "openForFreeTrades",
            "type": "t_bool",
            "src": "contracts/aggregator/NftAggregator.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(MarketplaceRegistry)1504": {
            "label": "contract MarketplaceRegistry"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9ff92de7a9e18d1b3e8cd482b69fde8d6cd358592930d8a0628b3e6be0db0bdd": {
      "address": "0xf19AcbECe5654457F7a5141FD61fF91860F2437F",
      "txHash": "0xa74d7a51843854ca1005e5eb81f2985e2fcc5b4d2b177aff70269dc721002c4f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "SpecialTransferHelper",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/aggregator/SpecialTransferHelper.sol:103"
          },
          {
            "contract": "NftAggregator",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/aggregator/NftAggregator.sol:28"
          },
          {
            "contract": "NftAggregator",
            "label": "marketplaceRegistry",
            "type": "t_contract(MarketplaceRegistry)9604",
            "src": "contracts/aggregator/NftAggregator.sol:29"
          },
          {
            "contract": "NftAggregator",
            "label": "baseFees",
            "type": "t_uint256",
            "src": "contracts/aggregator/NftAggregator.sol:30"
          },
          {
            "contract": "NftAggregator",
            "label": "openForTrades",
            "type": "t_bool",
            "src": "contracts/aggregator/NftAggregator.sol:31"
          },
          {
            "contract": "NftAggregator",
            "label": "openForFreeTrades",
            "type": "t_bool",
            "src": "contracts/aggregator/NftAggregator.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(MarketplaceRegistry)9604": {
            "label": "contract MarketplaceRegistry"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "26b70d59580ccc324aee4ed071c02f5de5f6431176c3dfecc9e0cd441563df74": {
      "address": "0x38E640b0FEAc638344Ca8d1223F4ef604b8c39AE",
      "txHash": "0x16bcbcbc8fb1deb157eef12941fb2dbb0120f65480bed0515c17639acbc5c518",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "MarketplaceRegistry",
            "src": "contracts/aggregator/MarketplaceRegistry.sol:9"
          },
          {
            "label": "marketplaces",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_struct(Marketplace)12789_storage)dyn_storage",
            "contract": "MarketplaceRegistry",
            "src": "contracts/aggregator/MarketplaceRegistry.sol:11"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Marketplace)12789_storage)dyn_storage": {
            "label": "struct Marketplace[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(Marketplace)12789_storage": {
            "label": "struct Marketplace",
            "members": [
              {
                "label": "proxy",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isLib",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 21,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2fc63381ef341826d34710bdcf7a3b2f77fc6292b17b3b5451b1664d0070ce91": {
      "address": "0xEDC87e8a4EA9D0Aa3Fe9E5Ef1ef0D4E94D61f327",
      "txHash": "0xaade78e9295ec31422aa9b0a8c8f02f97b0b42ba64c791571f9aa9967486ac15",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_currentIndex",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:78"
          },
          {
            "label": "_burnCounter",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:81"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:87"
          },
          {
            "label": "defaultBaseURI",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "label": "_ownerships",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)50071_storage)",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:93"
          },
          {
            "label": "_addressData",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_struct(AddressData)50080_storage)",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:96"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:99"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "110",
            "type": "t_array(t_uint256)43_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:1112"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:39"
          },
          {
            "label": "publicSaleDurationSeconds",
            "offset": 20,
            "slot": "303",
            "type": "t_uint96",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:40"
          },
          {
            "label": "multiSig",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:42"
          },
          {
            "label": "initialEthPrice",
            "offset": 20,
            "slot": "304",
            "type": "t_uint96",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:43"
          },
          {
            "label": "genesisKeyMerkle",
            "offset": 0,
            "slot": "305",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:45"
          },
          {
            "label": "finalEthPrice",
            "offset": 20,
            "slot": "305",
            "type": "t_uint96",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:46"
          },
          {
            "label": "gkTeamClaimContract",
            "offset": 0,
            "slot": "306",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          },
          {
            "label": "publicSaleStartSecond",
            "offset": 20,
            "slot": "306",
            "type": "t_uint96",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:49"
          },
          {
            "label": "signerAddress",
            "offset": 0,
            "slot": "307",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:51"
          },
          {
            "label": "startPublicSale",
            "offset": 20,
            "slot": "307",
            "type": "t_bool",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:52"
          },
          {
            "label": "pausedTransfer",
            "offset": 21,
            "slot": "307",
            "type": "t_bool",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:53"
          },
          {
            "label": "randomClaimBool",
            "offset": 22,
            "slot": "307",
            "type": "t_bool",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:54"
          },
          {
            "label": "lockupBoolean",
            "offset": 23,
            "slot": "307",
            "type": "t_bool",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:55"
          },
          {
            "label": "remainingTeamAdvisorGrant",
            "offset": 24,
            "slot": "307",
            "type": "t_uint64",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:56"
          },
          {
            "label": "cancelledOrFinalized",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:58"
          },
          {
            "label": "whitelistedTransfer",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:59"
          },
          {
            "label": "_genesisKeyLockUp",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_struct(LockupInfo)53409_storage)",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:60"
          },
          {
            "label": "latestClaimTokenId",
            "offset": 0,
            "slot": "311",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]",
            "numberOfBytes": "1376"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressData)50080_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockupInfo)53409_storage)": {
            "label": "mapping(uint256 => struct GenesisKey.LockupInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)50071_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressData)50080_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "aux",
                "type": "t_uint64",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LockupInfo)53409_storage": {
            "label": "struct GenesisKey.LockupInfo",
            "members": [
              {
                "label": "totalLockup",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "currentLockup",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenOwnership)50071_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "burned",
                "type": "t_bool",
                "offset": 28,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "6742656ddbd245e3631eefb66db1cb244c9487405d0402407659c3f7aedee1c8": {
      "address": "0xbD42074ADe51CdA1e83CEeEdb060DCe4C27fAB78",
      "txHash": "0xd7edc05f393d53021f031d9fcd92a10f3f1c4e139db8d6217e0638f7034edc4f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NftTransferProxy",
            "src": "contracts/marketplace/TransferProxies/NftTransferProxy.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "085b74101b985f22a8df5ae7515b5ce633a25a5d6fec539695a3adad52af8887": {
      "address": "0x35801488062B22abC7418ba661Ba6721E100FD7c",
      "txHash": "0xaa92e9dabb58e4079c2efb02ff68b19550ac47989917499450a093281ed7f3de",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20TransferProxy",
            "src": "contracts/marketplace/TransferProxies/ERC20TransferProxy.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0d15d7ffdf9ff3befe29acd330f6ed6669d753cacb18b8ebd749baf3459c6969": {
      "address": "0xf7e73474C742E50553559A6CB40b27c4B5c8ad73",
      "txHash": "0x7a5f9e617def0be690be0d2bf34b378c2e0740ce7bf50a974d4cb13ba368338d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CryptoKittyTransferProxy",
            "src": "contracts/marketplace/TransferProxies/CryptoKittyTransferProxy.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1edc4e9b0bb97d42f5697441708d7b49dcab806c1d387737520ec702a7c96c2a": {
      "address": "0x166ca09701E1071f88bf36De311e3190Ca3c102A",
      "txHash": "0x7ff4304ca33243816a8c7710fa4e8b65c4ab76e93d6f39d4a715cee8de050235",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "624066d6843de98ab27be3a081d5abda7038461c2dc01ed87be342d20240922f": {
      "address": "0x4cc29e47A25156035D3cD3E49443e3C4b64B2Aea",
      "txHash": "0xacb358fdefe7980d3922f3d55250fdf0f61c73af2c15e6fc57029053a1b2f6b9",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "marketPlace",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "MarketplaceEvent",
            "src": "contracts/marketplace/MarketplaceEvent.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "aaa36e32e464beb7324c995bddfde7422655aa9a8493622262e6e1f56dbeb1b5": {
      "address": "0x78bCa39c34C2F3b370502bAAb1b938d23BDa9457",
      "txHash": "0x050a27eef462c32ffc8aba6f7add197c24ffc63a82672448c76c7c68875bbcfa",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "nftBuyContract",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "TransferExecutor",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:25"
          },
          {
            "label": "protocolFee",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "TransferExecutor",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:26"
          },
          {
            "label": "proxies",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_bytes4,t_address)",
            "contract": "TransferExecutor",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:28"
          },
          {
            "label": "whitelistERC20",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TransferExecutor",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:29"
          },
          {
            "label": "royaltyInfo",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_struct(RoyaltyInfo)63304_storage)",
            "contract": "TransferExecutor",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:30"
          },
          {
            "label": "nftToken",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "TransferExecutor",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TransferExecutor",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:404"
          },
          {
            "label": "cancelledOrFinalized",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NftMarketplace",
            "src": "contracts/marketplace/NftMarketplace.sol:22"
          },
          {
            "label": "_approvedOrdersByNonce",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "NftMarketplace",
            "src": "contracts/marketplace/NftMarketplace.sol:23"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NftMarketplace",
            "src": "contracts/marketplace/NftMarketplace.sol:24"
          },
          {
            "label": "validationLogic",
            "offset": 0,
            "slot": "309",
            "type": "t_contract(ValidationLogic)63268",
            "contract": "NftMarketplace",
            "src": "contracts/marketplace/NftMarketplace.sol:25"
          },
          {
            "label": "marketplaceEvent",
            "offset": 0,
            "slot": "310",
            "type": "t_contract(MarketplaceEvent)59211",
            "contract": "NftMarketplace",
            "src": "contracts/marketplace/NftMarketplace.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(MarketplaceEvent)59211": {
            "label": "contract MarketplaceEvent",
            "numberOfBytes": "20"
          },
          "t_contract(ValidationLogic)63268": {
            "label": "contract ValidationLogic",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(RoyaltyInfo)63304_storage)": {
            "label": "mapping(address => struct TransferExecutor.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(RoyaltyInfo)63304_storage": {
            "label": "struct TransferExecutor.RoyaltyInfo",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percent",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "b81a77100a27f9c841ba45b1c1b25db64ee3238f7cd3b18113a262ff4326afbb": {
      "address": "0xEb2157b35184CD95EBe0F49DD5f6C057213459cE",
      "txHash": "0x9b527b6b0bbc86b61ab628eef3161a638e6a4a14e7185d8d7efd3cf5d76fa486",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "nftBuyContract",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "TransferExecutor",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:25"
          },
          {
            "label": "protocolFee",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "TransferExecutor",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:26"
          },
          {
            "label": "proxies",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_bytes4,t_address)",
            "contract": "TransferExecutor",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:28"
          },
          {
            "label": "whitelistERC20",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TransferExecutor",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:29"
          },
          {
            "label": "royaltyInfo",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_struct(RoyaltyInfo)63304_storage)",
            "contract": "TransferExecutor",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:30"
          },
          {
            "label": "nftToken",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "TransferExecutor",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TransferExecutor",
            "src": "contracts/marketplace/helpers/TransferExecutor.sol:404"
          },
          {
            "label": "cancelledOrFinalized",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NftMarketplace",
            "src": "contracts/marketplace/NftMarketplace.sol:22"
          },
          {
            "label": "_approvedOrdersByNonce",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "NftMarketplace",
            "src": "contracts/marketplace/NftMarketplace.sol:23"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NftMarketplace",
            "src": "contracts/marketplace/NftMarketplace.sol:24"
          },
          {
            "label": "validationLogic",
            "offset": 0,
            "slot": "309",
            "type": "t_contract(ValidationLogic)63268",
            "contract": "NftMarketplace",
            "src": "contracts/marketplace/NftMarketplace.sol:25"
          },
          {
            "label": "marketplaceEvent",
            "offset": 0,
            "slot": "310",
            "type": "t_contract(MarketplaceEvent)59211",
            "contract": "NftMarketplace",
            "src": "contracts/marketplace/NftMarketplace.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(MarketplaceEvent)59211": {
            "label": "contract MarketplaceEvent",
            "numberOfBytes": "20"
          },
          "t_contract(ValidationLogic)63268": {
            "label": "contract ValidationLogic",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(RoyaltyInfo)63304_storage)": {
            "label": "mapping(address => struct TransferExecutor.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(RoyaltyInfo)63304_storage": {
            "label": "struct TransferExecutor.RoyaltyInfo",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percent",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "787a42a4485f7df9d83d5cbfc1535843065760156d6ed0f25694a855e6b23c6e": {
      "address": "0x2D8C9A04ee9Fe81684096da3Ee1F331bc0aEF3fd",
      "txHash": "0x29331bbeaa86fd581c0dc5ad87d1d7071855c8e53e7e57ef95a176f8eca65c81",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "MarketplaceRegistry",
            "src": "contracts/aggregator/MarketplaceRegistry.sol:13"
          },
          {
            "label": "marketplaces",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_struct(Marketplace)14531_storage)dyn_storage",
            "contract": "MarketplaceRegistry",
            "src": "contracts/aggregator/MarketplaceRegistry.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Marketplace)14531_storage)dyn_storage": {
            "label": "struct Marketplace[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(Marketplace)14531_storage": {
            "label": "struct Marketplace",
            "members": [
              {
                "label": "proxy",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isLib",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 21,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e15af6006512ae9a144d0baae9fec01dfba9805fb5bd48b01cb385e05642ad75": {
      "address": "0xe0aAAcC1f0254b5D294141b9FAa34F96C4DEa2e5",
      "txHash": "0x763f8404cb32ba9697265b097d0587407b05f5ba611a688d993917e41c5b2af6",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SpecialTransferHelper",
            "src": "contracts/aggregator/SpecialTransferHelper.sol:152"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "250",
            "type": "t_address",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:23"
          },
          {
            "label": "marketplaceRegistry",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(MarketplaceRegistry)13193",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:24"
          },
          {
            "label": "percentFeeToDao",
            "offset": 20,
            "slot": "251",
            "type": "t_uint64",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:25"
          },
          {
            "label": "baseFee",
            "offset": 0,
            "slot": "252",
            "type": "t_uint64",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:26"
          },
          {
            "label": "extra",
            "offset": 8,
            "slot": "252",
            "type": "t_uint128",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:27"
          },
          {
            "label": "openForTrades",
            "offset": 24,
            "slot": "252",
            "type": "t_bool",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:28"
          },
          {
            "label": "extraBool",
            "offset": 25,
            "slot": "252",
            "type": "t_bool",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:29"
          },
          {
            "label": "converter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:30"
          },
          {
            "label": "nftProfile",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MarketplaceRegistry)13193": {
            "label": "contract MarketplaceRegistry",
            "numberOfBytes": "20"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fe41a373f213a94641ef583c090ec5c8108dbde71d927d0e6f95dcb25a13724e": {
      "address": "0xf37202dD77149F484A151dC24b2a76B9972bb4aa",
      "txHash": "0x3afbacba58ccae504d08d3f65c12db2ea8c3f7c555d8b397cc9a1cac4d7b046b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_currentIndex",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ERC721AProfileUpgradeable",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:78"
          },
          {
            "label": "_burnCounter",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "ERC721AProfileUpgradeable",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:81"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC721AProfileUpgradeable",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:84"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC721AProfileUpgradeable",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:87"
          },
          {
            "label": "defaultBaseURI",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC721AProfileUpgradeable",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:89"
          },
          {
            "label": "_ownerships",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)46907_storage)",
            "contract": "ERC721AProfileUpgradeable",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:93"
          },
          {
            "label": "_addressData",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_struct(AddressData)46916_storage)",
            "contract": "ERC721AProfileUpgradeable",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:96"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721AProfileUpgradeable",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:99"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721AProfileUpgradeable",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "110",
            "type": "t_array(t_uint256)43_storage",
            "contract": "ERC721AProfileUpgradeable",
            "src": "contracts/erc721a/ERC721AProfileUpgradeable.sol:1112"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "NftProfile",
            "src": "contracts/domain/NftProfile.sol:24"
          },
          {
            "label": "_tokenUsedURIs",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "NftProfile",
            "src": "contracts/domain/NftProfile.sol:25"
          },
          {
            "label": "_expiryTimeline",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "NftProfile",
            "src": "contracts/domain/NftProfile.sol:26"
          },
          {
            "label": "profileAuctionContract",
            "offset": 0,
            "slot": "306",
            "type": "t_address",
            "contract": "NftProfile",
            "src": "contracts/domain/NftProfile.sol:28"
          },
          {
            "label": "protocolFee",
            "offset": 20,
            "slot": "306",
            "type": "t_uint96",
            "contract": "NftProfile",
            "src": "contracts/domain/NftProfile.sol:29"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "307",
            "type": "t_address",
            "contract": "NftProfile",
            "src": "contracts/domain/NftProfile.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]",
            "numberOfBytes": "1376"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressData)46916_storage)": {
            "label": "mapping(address => struct ERC721AProfileUpgradeable.AddressData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)46907_storage)": {
            "label": "mapping(uint256 => struct ERC721AProfileUpgradeable.TokenOwnership)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressData)46916_storage": {
            "label": "struct ERC721AProfileUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "aux",
                "type": "t_uint64",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenOwnership)46907_storage": {
            "label": "struct ERC721AProfileUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "burned",
                "type": "t_bool",
                "offset": 28,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "78af18c12478d59ee702474e8ee977eacaa8adaf5737b3d0507b905d8adc09ce": {
      "address": "0x1690004bAC8D177374318EEB6a03E0c554e02f19",
      "txHash": "0xe56bf4de3cd28266254f01ea5461737322a3666766f5928c9e3a242df6c00fd6",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "GenesisKeyTeamClaim",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:25"
          },
          {
            "label": "genesisKeyMerkle",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "GenesisKeyTeamClaim",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:26"
          },
          {
            "label": "GK",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IGK)54952",
            "contract": "GenesisKeyTeamClaim",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:27"
          },
          {
            "label": "ownedTokenIds",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "GenesisKeyTeamClaim",
            "src": "contracts/genesisKey/GenesisKeyTeamClaim.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IGK)54952": {
            "label": "contract IGK",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f712ed449ebc0ddbd121803f512c07736afa5c30e2ffa6e24cb5b4aa48c74185": {
      "address": "0xE42AaF993B2725656defD714844e5a06714276f7",
      "txHash": "0xca625aa8ba4037cfd40d710c213f7f2d448cdeb14db9e6d25c7dad6046572896",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "governor",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:51"
          },
          {
            "label": "yearlyFee",
            "offset": 20,
            "slot": "151",
            "type": "t_uint96",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:52"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:54"
          },
          {
            "label": "yearsToOwn",
            "offset": 20,
            "slot": "152",
            "type": "t_uint96",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:55"
          },
          {
            "label": "usdc_",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:57"
          },
          {
            "label": "publicMintBool",
            "offset": 20,
            "slot": "153",
            "type": "t_bool",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:58"
          },
          {
            "label": "genKeyWhitelistOnly",
            "offset": 21,
            "slot": "153",
            "type": "t_bool",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:59"
          },
          {
            "label": "nftProfile",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:61"
          },
          {
            "label": "contract2",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:62"
          },
          {
            "label": "contract1",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:63"
          },
          {
            "label": "nftProfileHelperAddress",
            "offset": 0,
            "slot": "157",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:64"
          },
          {
            "label": "genesisKeyContract",
            "offset": 0,
            "slot": "158",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:65"
          },
          {
            "label": "signerAddress",
            "offset": 0,
            "slot": "159",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:66"
          },
          {
            "label": "genesisKeyClaimNumber",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:68"
          },
          {
            "label": "lengthPremium",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:69"
          },
          {
            "label": "ownedProfileStake",
            "offset": 0,
            "slot": "162",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:70"
          },
          {
            "label": "cancelledOrFinalized",
            "offset": 0,
            "slot": "163",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:71"
          },
          {
            "label": "publicMinted",
            "offset": 0,
            "slot": "164",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:72"
          },
          {
            "label": "emptySlot",
            "offset": 0,
            "slot": "165",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:74"
          },
          {
            "label": "maxProfilePerAddress",
            "offset": 20,
            "slot": "165",
            "type": "t_uint96",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:75"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          },
          "t_string_storage": {
            "label": "string"
          }
        }
      }
    },
    "544b1fb147d37a839afdffbed559520943a63c0d950be62d5e5c34574e7a845e": {
      "address": "0x0521CD56327F347815D837F6380b4f39Ae0CF0B3",
      "txHash": "0x2f7ee83d54b61fa13eed755f5f4e851fe31e5e37dc67f5439a9229ebff21fb9a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_currentIndex",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:78"
          },
          {
            "label": "_burnCounter",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:81"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:87"
          },
          {
            "label": "defaultBaseURI",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "label": "_ownerships",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)50071_storage)",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:93"
          },
          {
            "label": "_addressData",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_struct(AddressData)50080_storage)",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:96"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:99"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "110",
            "type": "t_array(t_uint256)43_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:1112"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:39"
          },
          {
            "label": "publicSaleDurationSeconds",
            "offset": 20,
            "slot": "303",
            "type": "t_uint96",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:40"
          },
          {
            "label": "multiSig",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:42"
          },
          {
            "label": "initialEthPrice",
            "offset": 20,
            "slot": "304",
            "type": "t_uint96",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:43"
          },
          {
            "label": "genesisKeyMerkle",
            "offset": 0,
            "slot": "305",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:45"
          },
          {
            "label": "finalEthPrice",
            "offset": 20,
            "slot": "305",
            "type": "t_uint96",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:46"
          },
          {
            "label": "gkTeamClaimContract",
            "offset": 0,
            "slot": "306",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:48"
          },
          {
            "label": "publicSaleStartSecond",
            "offset": 20,
            "slot": "306",
            "type": "t_uint96",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:49"
          },
          {
            "label": "signerAddress",
            "offset": 0,
            "slot": "307",
            "type": "t_address",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:51"
          },
          {
            "label": "startPublicSale",
            "offset": 20,
            "slot": "307",
            "type": "t_bool",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:52"
          },
          {
            "label": "pausedTransfer",
            "offset": 21,
            "slot": "307",
            "type": "t_bool",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:53"
          },
          {
            "label": "randomClaimBool",
            "offset": 22,
            "slot": "307",
            "type": "t_bool",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:54"
          },
          {
            "label": "lockupBoolean",
            "offset": 23,
            "slot": "307",
            "type": "t_bool",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:55"
          },
          {
            "label": "remainingTeamAdvisorGrant",
            "offset": 24,
            "slot": "307",
            "type": "t_uint64",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:56"
          },
          {
            "label": "cancelledOrFinalized",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:58"
          },
          {
            "label": "whitelistedTransfer",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:59"
          },
          {
            "label": "_genesisKeyLockUp",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_struct(LockupInfo)53409_storage)",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:60"
          },
          {
            "label": "latestClaimTokenId",
            "offset": 0,
            "slot": "311",
            "type": "t_uint256",
            "contract": "GenesisKey",
            "src": "contracts/genesisKey/GenesisKey.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]",
            "numberOfBytes": "1376"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressData)50080_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockupInfo)53409_storage)": {
            "label": "mapping(uint256 => struct GenesisKey.LockupInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)50071_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressData)50080_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "aux",
                "type": "t_uint64",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LockupInfo)53409_storage": {
            "label": "struct GenesisKey.LockupInfo",
            "members": [
              {
                "label": "totalLockup",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "currentLockup",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenOwnership)50071_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "burned",
                "type": "t_bool",
                "offset": 28,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "00313fb3fed9f35690ea2377b46fa33167d2cfa905617a9337029caf86b580a3": {
      "address": "0x43Ff0D44841890d1Dd13983Fba1Fe3c99451418D",
      "txHash": "0x95f50b96db34875cfd112b4dd972670585388d0c5601d478f16ac795527802f2",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "contracts/origination/modERC1155Upgradeable.sol:36"
          },
          {
            "label": "_supply",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC1155Upgradeable",
            "src": "contracts/origination/modERC1155Upgradeable.sol:41"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "contracts/origination/modERC1155Upgradeable.sol:44"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "contracts/origination/modERC1155Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "contracts/origination/modERC1155Upgradeable.sol:835"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "templateURI",
            "offset": 0,
            "slot": "352",
            "type": "t_string_storage",
            "contract": "Origination",
            "src": "contracts/origination/Origination.sol:22"
          },
          {
            "label": "_tokenURI",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "Origination",
            "src": "contracts/origination/Origination.sol:25"
          },
          {
            "label": "_isPermanentURI",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Origination",
            "src": "contracts/origination/Origination.sol:28"
          },
          {
            "label": "_creatorOverride",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Origination",
            "src": "contracts/origination/Origination.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4a010bb5d92785d5846977755b72ad7c6fc99b1a261fe4c01564f94048a72452": {
      "address": "0x564bFc4C931655C953bE5D6f68cC16c26c52B8F2",
      "txHash": "0x1ca7bc76d4830b936d50b98d96068a91875d10f4c4f18143c01647a5a79dbd04",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_currentIndex",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:78"
          },
          {
            "label": "_burnCounter",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:81"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:84"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:87"
          },
          {
            "label": "defaultBaseURI",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:89"
          },
          {
            "label": "_ownerships",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_struct(TokenOwnership)50071_storage)",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:93"
          },
          {
            "label": "_addressData",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_struct(AddressData)50080_storage)",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:96"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:99"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "110",
            "type": "t_array(t_uint256)43_storage",
            "contract": "ERC721AUpgradeable",
            "src": "contracts/erc721a/ERC721AUpgradeable.sol:1112"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "GenesisKeyOld",
            "src": "contracts/archive/GenesisKeyOld.sol:42"
          },
          {
            "label": "publicSaleDurationSeconds",
            "offset": 20,
            "slot": "303",
            "type": "t_uint96",
            "contract": "GenesisKeyOld",
            "src": "contracts/archive/GenesisKeyOld.sol:43"
          },
          {
            "label": "multiSig",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "GenesisKeyOld",
            "src": "contracts/archive/GenesisKeyOld.sol:45"
          },
          {
            "label": "initialEthPrice",
            "offset": 20,
            "slot": "304",
            "type": "t_uint96",
            "contract": "GenesisKeyOld",
            "src": "contracts/archive/GenesisKeyOld.sol:46"
          },
          {
            "label": "genesisKeyMerkle",
            "offset": 0,
            "slot": "305",
            "type": "t_address",
            "contract": "GenesisKeyOld",
            "src": "contracts/archive/GenesisKeyOld.sol:48"
          },
          {
            "label": "finalEthPrice",
            "offset": 20,
            "slot": "305",
            "type": "t_uint96",
            "contract": "GenesisKeyOld",
            "src": "contracts/archive/GenesisKeyOld.sol:49"
          },
          {
            "label": "gkTeamClaimContract",
            "offset": 0,
            "slot": "306",
            "type": "t_address",
            "contract": "GenesisKeyOld",
            "src": "contracts/archive/GenesisKeyOld.sol:51"
          },
          {
            "label": "publicSaleStartSecond",
            "offset": 20,
            "slot": "306",
            "type": "t_uint96",
            "contract": "GenesisKeyOld",
            "src": "contracts/archive/GenesisKeyOld.sol:52"
          },
          {
            "label": "signerAddress",
            "offset": 0,
            "slot": "307",
            "type": "t_address",
            "contract": "GenesisKeyOld",
            "src": "contracts/archive/GenesisKeyOld.sol:54"
          },
          {
            "label": "startPublicSale",
            "offset": 20,
            "slot": "307",
            "type": "t_bool",
            "contract": "GenesisKeyOld",
            "src": "contracts/archive/GenesisKeyOld.sol:55"
          },
          {
            "label": "pausedTransfer",
            "offset": 21,
            "slot": "307",
            "type": "t_bool",
            "contract": "GenesisKeyOld",
            "src": "contracts/archive/GenesisKeyOld.sol:56"
          },
          {
            "label": "randomClaimBool",
            "offset": 22,
            "slot": "307",
            "type": "t_bool",
            "contract": "GenesisKeyOld",
            "src": "contracts/archive/GenesisKeyOld.sol:57"
          },
          {
            "label": "lockupBoolean",
            "offset": 23,
            "slot": "307",
            "type": "t_bool",
            "contract": "GenesisKeyOld",
            "src": "contracts/archive/GenesisKeyOld.sol:58"
          },
          {
            "label": "remainingTeamAdvisorGrant",
            "offset": 24,
            "slot": "307",
            "type": "t_uint64",
            "contract": "GenesisKeyOld",
            "src": "contracts/archive/GenesisKeyOld.sol:59"
          },
          {
            "label": "cancelledOrFinalized",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "GenesisKeyOld",
            "src": "contracts/archive/GenesisKeyOld.sol:61"
          },
          {
            "label": "whitelistedTransfer",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GenesisKeyOld",
            "src": "contracts/archive/GenesisKeyOld.sol:62"
          },
          {
            "label": "_genesisKeyLockUp",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_struct(LockupInfo)16761_storage)",
            "contract": "GenesisKeyOld",
            "src": "contracts/archive/GenesisKeyOld.sol:63"
          },
          {
            "label": "latestClaimTokenId",
            "offset": 0,
            "slot": "311",
            "type": "t_uint256",
            "contract": "GenesisKeyOld",
            "src": "contracts/archive/GenesisKeyOld.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]",
            "numberOfBytes": "1376"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressData)50080_storage)": {
            "label": "mapping(address => struct ERC721AUpgradeable.AddressData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockupInfo)16761_storage)": {
            "label": "mapping(uint256 => struct GenesisKeyOld.LockupInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenOwnership)50071_storage)": {
            "label": "mapping(uint256 => struct ERC721AUpgradeable.TokenOwnership)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressData)50080_storage": {
            "label": "struct ERC721AUpgradeable.AddressData",
            "members": [
              {
                "label": "balance",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "numberMinted",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "numberBurned",
                "type": "t_uint64",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "aux",
                "type": "t_uint64",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LockupInfo)16761_storage": {
            "label": "struct GenesisKeyOld.LockupInfo",
            "members": [
              {
                "label": "totalLockup",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "currentLockup",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenOwnership)50071_storage": {
            "label": "struct ERC721AUpgradeable.TokenOwnership",
            "members": [
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "burned",
                "type": "t_bool",
                "offset": 28,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "e3d4818bd620becbce9dacbd9cf66b7930b38cbcaef06e1b5fc35a5e6c65ef77": {
      "address": "0x3669E7Ae6B27C188FF8996e24c4374FF0B0C989E",
      "txHash": "0xd04e9085629cddd5759aa4f33a0cb6a4a738840002c9c672959c29f2c1fc147f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "governor",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:51"
          },
          {
            "label": "yearlyFee",
            "offset": 20,
            "slot": "151",
            "type": "t_uint96",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:52"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:54"
          },
          {
            "label": "yearsToOwn",
            "offset": 20,
            "slot": "152",
            "type": "t_uint96",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:55"
          },
          {
            "label": "usdc_",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:57"
          },
          {
            "label": "publicMintBool",
            "offset": 20,
            "slot": "153",
            "type": "t_bool",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:58"
          },
          {
            "label": "genKeyWhitelistOnly",
            "offset": 21,
            "slot": "153",
            "type": "t_bool",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:59"
          },
          {
            "label": "nftProfile",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:61"
          },
          {
            "label": "contract2",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:62"
          },
          {
            "label": "contract1",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:63"
          },
          {
            "label": "nftProfileHelperAddress",
            "offset": 0,
            "slot": "157",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:64"
          },
          {
            "label": "genesisKeyContract",
            "offset": 0,
            "slot": "158",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:65"
          },
          {
            "label": "signerAddress",
            "offset": 0,
            "slot": "159",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:66"
          },
          {
            "label": "genesisKeyClaimNumber",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:68"
          },
          {
            "label": "lengthPremium",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:69"
          },
          {
            "label": "ownedProfileStake",
            "offset": 0,
            "slot": "162",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:70"
          },
          {
            "label": "cancelledOrFinalized",
            "offset": 0,
            "slot": "163",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:71"
          },
          {
            "label": "publicMinted",
            "offset": 0,
            "slot": "164",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:72"
          },
          {
            "label": "emptySlot",
            "offset": 0,
            "slot": "165",
            "type": "t_address",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:74"
          },
          {
            "label": "maxProfilePerAddress",
            "offset": 20,
            "slot": "165",
            "type": "t_uint96",
            "contract": "ProfileAuction",
            "src": "contracts/domain/ProfileAuction.sol:75"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          },
          "t_string_storage": {
            "label": "string"
          }
        }
      }
    },
    "204b1bf8914012e60323df2c2dd755baf20098df2360f4da1e0eac5d8846b5bf": {
      "address": "0x2a46582c56cbF900cBD9533D373F709936E6150E",
      "txHash": "0x91630b266fa7b27dbab2bfb3b85fe5eaf8f2db0547fb76e7a0658ec79f8cc70c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "nftProfile",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(INftProfile)57808",
            "contract": "NftResolver",
            "src": "contracts/domain/NftResolver.sol:19"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "NftResolver",
            "src": "contracts/domain/NftResolver.sol:20"
          },
          {
            "label": "_nonce",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "NftResolver",
            "src": "contracts/domain/NftResolver.sol:23"
          },
          {
            "label": "_regexMap",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_enum(Blockchain)57865,t_contract(IRegex)57858)",
            "contract": "NftResolver",
            "src": "contracts/domain/NftResolver.sol:24"
          },
          {
            "label": "_ownerAddrList",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(AddressTuple)57871_storage)dyn_storage))",
            "contract": "NftResolver",
            "src": "contracts/domain/NftResolver.sol:26"
          },
          {
            "label": "_ownerCtx",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressTuple)57871_storage))",
            "contract": "NftResolver",
            "src": "contracts/domain/NftResolver.sol:27"
          },
          {
            "label": "_ownerNonEvmMap",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_bool))",
            "contract": "NftResolver",
            "src": "contracts/domain/NftResolver.sol:28"
          },
          {
            "label": "_ownerEvmMap",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_bytes_memory_ptr,t_bool)))",
            "contract": "NftResolver",
            "src": "contracts/domain/NftResolver.sol:29"
          },
          {
            "label": "_approvedEvmList",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_array(t_struct(RelatedProfiles)57876_storage)dyn_storage)",
            "contract": "NftResolver",
            "src": "contracts/domain/NftResolver.sol:31"
          },
          {
            "label": "_approvedMap",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "contract": "NftResolver",
            "src": "contracts/domain/NftResolver.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(AddressTuple)57871_storage)dyn_storage": {
            "label": "struct AddressTuple[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(RelatedProfiles)57876_storage)dyn_storage": {
            "label": "struct RelatedProfiles[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(INftProfile)57808": {
            "label": "contract INftProfile",
            "numberOfBytes": "20"
          },
          "t_contract(IRegex)57858": {
            "label": "contract IRegex",
            "numberOfBytes": "20"
          },
          "t_enum(Blockchain)57865": {
            "label": "enum Blockchain",
            "members": [
              "ETHEREUM",
              "HEDERA",
              "POLYGON",
              "SOLANA",
              "TEZOS",
              "FLOW"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(RelatedProfiles)57876_storage)dyn_storage)": {
            "label": "mapping(address => struct RelatedProfiles[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(bytes => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(AddressTuple)57871_storage)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressTuple[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressTuple)57871_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressTuple))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Blockchain)57865,t_contract(IRegex)57858)": {
            "label": "mapping(enum Blockchain => contract IRegex)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(AddressTuple)57871_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct AddressTuple[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_bytes_memory_ptr,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(bytes => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AddressTuple)57871_storage)": {
            "label": "mapping(uint256 => struct AddressTuple)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressTuple)57871_storage": {
            "label": "struct AddressTuple",
            "members": [
              {
                "label": "cid",
                "type": "t_enum(Blockchain)57865",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "chainAddr",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RelatedProfiles)57876_storage": {
            "label": "struct RelatedProfiles",
            "members": [
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "profileUrl",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes"
          }
        }
      }
    },
    "ae7b7e25edf4e1ca4d66ae944b803cc531b27c4aa18beec2f7b3c5f83f69fd07": {
      "address": "0x19D9fA2B0541F3D43A6A42DB389Fc75d806eC6D3",
      "txHash": "0xce81e032a238ba352240dcf2e23c58fb8c99ba8cd9ea979fc46b32b891a9cc9e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "nftToken",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Vesting",
            "src": "contracts/governance/vesting.sol:46"
          },
          {
            "label": "multiSig",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "Vesting",
            "src": "contracts/governance/vesting.sol:47"
          },
          {
            "label": "claimedAmount",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Vesting",
            "src": "contracts/governance/vesting.sol:49"
          },
          {
            "label": "vestingAmount",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Vesting",
            "src": "contracts/governance/vesting.sol:50"
          },
          {
            "label": "vestingBegin",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Vesting",
            "src": "contracts/governance/vesting.sol:51"
          },
          {
            "label": "vestingCliff",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Vesting",
            "src": "contracts/governance/vesting.sol:52"
          },
          {
            "label": "vestingEnd",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Vesting",
            "src": "contracts/governance/vesting.sol:53"
          },
          {
            "label": "lastUpdate",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Vesting",
            "src": "contracts/governance/vesting.sol:54"
          },
          {
            "label": "installment",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_enum(VestingInstallments)55684)",
            "contract": "Vesting",
            "src": "contracts/governance/vesting.sol:55"
          },
          {
            "label": "initializedVestor",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Vesting",
            "src": "contracts/governance/vesting.sol:57"
          },
          {
            "label": "revokedVestor",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Vesting",
            "src": "contracts/governance/vesting.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(VestingInstallments)55684": {
            "label": "enum Vesting.VestingInstallments",
            "members": [
              "MONTHLY",
              "QUARTERLY"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(VestingInstallments)55684)": {
            "label": "mapping(address => enum Vesting.VestingInstallments)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "57a9744df25a3e5eb8e8b18d62ceb7ea9a12b2753268d161bdd9df7e91ab3efb": {
      "address": "0x7fFB31463FB94cd0942f8070F2a7AE2d515854C0",
      "txHash": "0x7126eb1a1d0eefdf66d4f4049e8e162a191d96420bf092bc9439202247df0ed7",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SpecialTransferHelper",
            "src": "contracts/aggregator/SpecialTransferHelper.sol:103"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "250",
            "type": "t_address",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:19"
          },
          {
            "label": "marketplaceRegistry",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(MarketplaceRegistry)12038",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:20"
          },
          {
            "label": "percentFeeToDao",
            "offset": 20,
            "slot": "251",
            "type": "t_uint64",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:21"
          },
          {
            "label": "baseFee",
            "offset": 0,
            "slot": "252",
            "type": "t_uint64",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:22"
          },
          {
            "label": "extra",
            "offset": 8,
            "slot": "252",
            "type": "t_uint128",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:23"
          },
          {
            "label": "openForTrades",
            "offset": 24,
            "slot": "252",
            "type": "t_bool",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:24"
          },
          {
            "label": "extraBool",
            "offset": 25,
            "slot": "252",
            "type": "t_bool",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:25"
          },
          {
            "label": "converter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:26"
          },
          {
            "label": "nftProfile",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "NftAggregator",
            "src": "contracts/aggregator/NftAggregator.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MarketplaceRegistry)12038": {
            "label": "contract MarketplaceRegistry",
            "numberOfBytes": "20"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
